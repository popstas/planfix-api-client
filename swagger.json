{"openapi":"3.0.1","info":{"version":"1.3.3","title":"Planfix REST API","description":"Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>"},"servers":[{"url":"https://your-account.planfix.com/rest","description":"Your server REST API"}],"tags":[{"name":"Contact","description":"Operations with contacts"},{"name":"Task","description":"Operations with tasks"},{"name":"Comments","description":"Operations with comments"},{"name":"Data tags","description":"Operations with data tags and data tag entries"},{"name":"File","description":"Operations with files"},{"name":"Project","description":"Operations with projects"},{"name":"Employee","description":"Operations with employees"},{"name":"Directory","description":"Operations with directories"},{"name":"Process","description":"Operations with process"},{"name":"Report","description":"Operations with reports"},{"name":"Object","description":"Operations with objects"},{"name":"Custom fields","description":"Operations with custom fields"},{"name":"Custom fields - Task","description":"Operations with custom fields for Task"},{"name":"Custom fields - Contact","description":"Operations with custom fields for Contact"},{"name":"Custom fields - Project","description":"Operations with custom fields for Project"},{"name":"Custom fields - Employee","description":"Operations with custom fields for Employee"}],"paths":{"/contact/{id}":{"get":{"tags":["Contact"],"summary":"Get contact by number","operationId":"get-contact-by-id","description":"This method lets you get a contact or company by number","parameters":[{"name":"id","in":"path","description":"Number of contact","required":true,"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"}},{"name":"fields","in":"query","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, template, name, midname, lastname, gender, description, address, site, email, additionalEmailAddresses, skype, telegramId, telegram, facebook, instagram, vk, position, group, isCompany, isDeleted, birthDate, createdDate, dateOfLastUpdate, supervisors, phones, companies, contacts, files, dataTags, sourceObjectId, sourceDataVersion","required":false,"style":"form","explode":true,"example":"id,name,midname,lastname,description,10","schema":{"type":"string"}},{"name":"sourceId","in":"query","description":"Unique identifier of external application","required":false,"style":"form","explode":true,"schema":{"type":"string","maximum":100,"format":"uuid"}}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"contact":{"$ref":"#/components/schemas/ContactResponse"}}},"examples":{"example for fields: name,midname":{"value":{"result":"success","contact":{"id":12,"name":"Ivan","midname":"Ivanovich"}}},"example for fields: name,email,additionalEmailAddresses":{"value":{"result":"success","contact":{"id":12,"name":"Ivan","email":"ivan@mail.com","additionalEmailAddresses":["ivan_additional_1@mail.com","ivan_additional_2@mail.com"]}}},"example for fields: name,files":{"value":{"result":"success","contact":{"id":12,"name":"Ivan","files":[{"id":10,"size":1024,"name":"My first file"},{"id":20,"size":2048,"name":"My second file"}]}}},"example for field: dataTags":{"value":{"result":"success","contact":{"id":12,"dataTags":[{"dataTag":{"id":10,"name":"My first data tag"},"key":1},{"dataTag":{"id":20,"name":"My second data tag"},"key":1}]}}},"example for fields: name,midname,lastname,10 (id contact custom field type Line)":{"value":{"result":"success","contact":{"id":12,"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":10,"name":"My test string field","type":0,"objectType":1},"value":"Test value"}]}}},"example for fields: name,birthDate,20 (id contact custom field type Number)":{"value":{"result":"success","contact":{"id":12,"name":"Ivan","birthDate":{"date":"01-12-1995","time":"00:00","datetime":"1995-12-01T00:00Z"},"customFieldData":[{"field":{"id":20,"name":"My test number field","type":1,"objectType":1},"value":99}]}}},"example for fields: phones,30 (id contact custom field type Date)":{"value":{"result":"success","contact":{"id":12,"phones":[{"number":"89643752416","maskedNumber":"+8 (964) 375-24-16","type":1},{"number":"84953752416","maskedNumber":"+8 (495) 375-24-16","type":2}],"customFieldData":[{"field":{"id":30,"name":"My test date field","type":3,"objectType":1},"value":{"date":"11-11-2021","time":"00:00","datetime":"2021-11-11T00:00Z"}}]}}},"example for field: 40 (id contact custom field type Time)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":40,"name":"My test time field","type":4,"objectType":1},"value":{"time":"17:50"}}]}}},"example for field: 50 (id contact custom field type Date and time)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":50,"name":"My test date and time field","type":5,"objectType":1},"value":{"date":"21-12-2021","time":"12:15"}}]}}},"example for field: 60 (id contact custom field type Period of time)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":60,"name":"My test time period field","type":6,"objectType":1},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}}},"example for field: 70 (id contact custom field type Checkbox)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":70,"name":"My test checkbox field","type":7,"objectType":1},"value":true}]}}},"example for field: 80 (id contact custom field type List)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":80,"name":"My test enum field","type":8,"objectType":1},"value":"Enum value"}]}}},"example for field: 90 (id contact custom field type Directory entry)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":90,"name":"My test directory entry field","type":9,"objectType":1,"directoryId":10},"value":{"id":2,"value":"Item value"}}]}}},"example for field: 100 (id contact custom field type Contact)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":100,"name":"My test counterparty field","type":10,"objectType":1},"value":{"id":"contact:5","name":"Ivanov Ivan"}}]}}},"example for field: 110 (id contact custom field type Employee)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":110,"name":"My test employee field","type":11,"objectType":1},"value":{"id":"user:3","name":"Petrov Petr"}}]}}},"example for field: 120 (id contact custom field type Counterparty)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":120,"name":"My test counterparty field","type":12,"objectType":1},"value":{"id":"contact:10","name":"Ivanov Ivan"}}]}}},"example for field: 130 (id contact custom field type Group, employee, or contact)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":130,"name":"My test group, employee, or contact field","type":13,"objectType":1},"value":{"id":"user:1","name":"Petrov Petr"}}]}}},"example for field: 140 (id contact custom field type List of users)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":140,"name":"My test list of users field","type":14,"objectType":1},"value":[{"id":"user:1","name":"Petrov Petr"},{"id":"contact:7","name":"Ivanov Ivan"},{"id":"group:5","name":"Work group"}]}]}}},"example for field: 150 (id contact custom field type Set of directory values)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":150,"name":"My test set of directory values field","type":15,"objectType":1,"directoryId":10},"value":[{"id":1,"value":"Item value one"},{"id":2,"value":"Item value two"},{"id":3,"value":"Item value three"}]}]}}},"example for field: 160 (id contact custom field type Task)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":160,"name":"My test task field","type":16,"objectType":1},"value":{"id":111,"name":"My task"}}]}}},"example for field: 170 (id contact custom field type Task set)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":170,"name":"My test task set field","type":17,"objectType":1},"value":[{"id":111,"name":"My task 1"},{"id":112,"name":"My task 2"},{"id":113,"name":"My task 3"}]}]}}},"example for field: 200 (id contact custom field type Set of values)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":200,"name":"My test set of values field","type":20,"objectType":1},"value":["First element","Two element","Three element"]}]}}},"example for field: 210 (id contact custom field type Files)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":210,"name":"My test files field","type":21,"objectType":1},"value":[204308,205305]}]}}},"example for field: 220 (id contact custom field type Project)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":220,"name":"My test project field","type":22,"objectType":1},"value":{"id":5,"name":"My project"}}]}}},"example for field: 230 (id contact custom field type Data tag summaries)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":230,"name":"My test data tag summaries field","type":23,"objectType":1},"value":{"id":1.2}}]}}},"example for field: 240 (id contact custom field type Calculated field)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":240,"name":"My test calculated field","type":24,"objectType":1},"value":{"id":"Formula result"}}]}}},"example for field: 250 (id contact custom field type Location)":{"value":{"result":"success","contact":{"id":12,"customFieldData":[{"field":{"id":250,"name":"My test location field","type":25,"objectType":1},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}}},"404":{"description":"Contact not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":2000,"error":"Contact not found by id 1"}}}}}}}},"post":{"tags":["Contact"],"summary":"Update contact by number","operationId":"post-contact-by-id","description":"This method lets you update a contact or company by number","parameters":[{"name":"id","in":"path","description":"Number of contact","required":true,"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"}},{"schema":{"type":"boolean","default":false},"in":"query","name":"silent","description":"Silent mode"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactRequest"},"examples":{"example full name update":{"value":{"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","name":"New Name","midname":"New Midname","lastname":"New Lastname"}},"example birth date update from object":{"value":{"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","birthDate":{"date":"01.12.1991"}}},"example birth date update from string":{"value":{"birthDate":"01.12.1991"}},"example group update":{"value":{"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","group":{"id":5}}},"example contacts update":{"value":{"contacts":[{"id":5}]}},"example companies update":{"value":{"companies":[{"id":5}]}},"example supervisors update":{"value":{"supervisors":{"users":[{"id":"user:22"}],"groups":[]}}},"example email update":{"value":{"email":"new-email-contact@mail.ru"}},"example position update":{"value":{"position":"sales manager"}},"example mobile phone update":{"value":{"phones":[{"number":"+19268545064","type":1}]}},"example work phone update":{"value":{"phones":[{"number":"+192683550","type":2}]}},"example home phone update":{"value":{"phones":[{"number":"+102683550","type":3}]}},"example other phone update":{"value":{"phones":[{"number":"+2900113550","type":4}]}},"example update files":{"value":{"files":[{"id":10},{"id":15}]}},"example field update: custom field type Line":{"value":{"customFieldData":[{"field":{"id":10},"value":"Test value"}]}},"example field update: custom field type Number":{"value":{"customFieldData":[{"field":{"id":20},"value":99}]}},"example field update: custom field type Date":{"value":{"customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}},"example field update: custom field type Time":{"value":{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example field update from string: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example field update from object: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}},"example field update: custom field type Period of time":{"value":{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example field update: custom field type Checkbox":{"value":{"customFieldData":[{"field":{"id":70},"value":true}]}},"example field update: custom field type List":{"value":{"customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example field update: custom field type Directory entry":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}},"example field update: custom field type Directory entry, set empty value":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}},"example field update: custom field type Contact by prefixedId":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example field update: custom field type Contact by id":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example field update: custom field type Employee by prefixedId":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example field update: custom field type Employee by id":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example field update: custom field type Counterparty by prefixedId":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example field update: custom field type Counterparty by id":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example field update: custom field type Group, employee, or contact":{"value":{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example field update: custom field type List of users":{"value":{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example field update: custom field type Set of directory values":{"value":{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example field update: custom field type Task":{"value":{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example field update: custom field type Task set":{"value":{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example field update: custom field type Set of values":{"value":{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example field update: custom field type Files":{"value":{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example field update: custom field type Project":{"value":{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example field update: custom field type Location":{"value":{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}},"example integrations data update":{"value":{"telegramId":"0123456789","telegram":"https://t.me/telegram_username","facebook":"https://facebook.com/0123456789","vk":"https://vk.com/id0123456789","instagram":"https://www.instagram.com/instagram_username"}}}}},"description":"Successful operation"},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"failures":{"type":"array","items":{"type":"object","properties":{"field":{"type":"string"},"error":{"type":"string"}}}}}},"examples":{"example":{"value":{"failures":{"field":"template","error":"Field change failed"}}}}}}},"202":{"description":"Accepted"},"404":{"description":"Contact not found","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":2000,"error":"Contact for update not found by id 1"}}}}}},"405":{"description":"Method Not Allowed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":5,"error":"Scope denied, method not allowed"}}}}}}}}},"/contact/list":{"post":{"tags":["Contact"],"summary":"Get list of contacts and companies","operationId":"get-contact-list","description":"This method lets you get a list of contacts and companies","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"filterId":{"type":"string","description":"Id for contact filter, get list by method '/contact/filters'"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/ComplexContactFilter"}},"isCompany":{"type":"boolean","description":"True for companies / false for contacts","default":false},"onlyChanged":{"type":"boolean","description":"Flag for retrieving only data modified since last sync with external application","default":false},"prefixedId":{"type":"boolean","description":"Flag for retrieving id with a prefix"},"fields":{"type":"string","example":"id,name,midname,lastname,description,10","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, template, name, midname, lastname, gender, description, address, site, email, additionalEmailAddresses, skype, telegramId, telegram, facebook, instagram, vk, position, group, isCompany, isDeleted, birthDate, createdDate, dateOfLastUpdate, supervisors, phones, companies, contacts, files, sourceObjectId, sourceDataVersion"},"sourceId":{"type":"string","maximum":100,"description":"Unique identifier of external application","format":"uuid"}}},"encoding":{"historyMetadata":{"contentType":"plain/text; charset=utf-8"}},"examples":{"example: without filter":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,description","sourceId":"797f5a94-3689-4ac8-82fd-d749511ea2b2"}},"example: to get an id with a prefix":{"value":{"offset":0,"pageSize":100,"prefixedId":true,"fields":"id"}},"example: filter by create date greater yesterday":{"value":{"offset":0,"pageSize":100,"filterId":"contact","filters":[{"type":12,"operator":"gt","value":{"dateType":"yesterday"}}],"fields":"id,name,midname,lastname"}},"example: filter by birth day with year ":{"value":{"offset":0,"pageSize":100,"filterId":"contact","filters":[{"type":4223,"operator":"equal","value":{"dateType":"otherDate","dateValue":"01-12-1995"}}],"fields":"id,name,midname,lastname,birthDate"}},"example: filter by group":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,group","filters":[{"type":4008,"operator":"equal","value":10}]}},"example: filter by phone":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,phones","filters":[{"type":4003,"operator":"equal","value":"+1052456789"}]}},"example: filter by part of email":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,email","filters":[{"type":4005,"operator":"equal","value":"contact@email.com"}]}},"example: filter by email":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,email","filters":[{"type":4026,"operator":"equal","value":"contact_test@email.com"}]}},"example: filter by birth date without year":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,birthDate","filters":[{"type":4011,"operator":"equal","value":{"dateType":"otherDate","dateValue":"01-12-1900"}}]}},"example: filter by position":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,position","filters":[{"type":4002,"operator":"equal","value":"manager"}]}},"example: filter by gender":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,gender","filters":[{"type":4019,"operator":"equal","value":"Male"}]}},"example: filter by part of name":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":4001,"operator":"equal","value":"Ivanov Ivan Ivanovich"}]}},"example: filter by first name":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":4014,"operator":"equal","value":"Ivan"}]}},"example: filter by middle name":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":4222,"operator":"equal","value":"Ivanovich"}]}},"example: filter by last name":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":4015,"operator":"equal","value":"Ivanov"}]}},"example: filter by telegramUsername":{"value":{"offset":0,"pageSize":100,"fields":"id,name,telegram","filters":[{"type":4226,"operator":"equal","value":"my-telegram-username"}]}},"example: filter by telegramId":{"value":{"offset":0,"pageSize":100,"fields":"id,name,telegramId","filters":[{"type":4234,"operator":"equal","value":123456}]}},"example: filter by number":{"value":{"offset":0,"pageSize":100,"filters":[{"type":4231,"operator":"equal","value":1}],"fields":"id,name"}},"example: filter by some numbers":{"value":{"offset":0,"pageSize":100,"filters":[{"type":4231,"operator":"equal","value":[1,2,3]}],"fields":"id,name"}},"example: filter by custom field Line":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,87","filters":[{"type":4101,"operator":"equal","value":"Test string value","field":87}]}},"example: filter by custom field List of users":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,15","filters":[{"type":4113,"field":15,"operator":"equal","value":"user:50"}]}},"example: filter by custom field Employee":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,10","filters":[{"type":4109,"field":10,"operator":"equal","value":"user:50"}]}},"example: filter by custom field Directory entry":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,20","filters":[{"type":4107,"field":20,"operator":"equal","value":"47 // Directory entry key"}]}},"example: filter by custom field Set of directory values":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,21","filters":[{"type":4114,"field":21,"operator":"equal","value":"47;48;50"}]}},"example: filter by custom field Contact":{"value":{"offset":0,"pageSize":100,"filters":[{"type":4108,"operator":"equal","value":"contact:15","field":87}],"onlyChanged":false,"fields":"id,name,lastname,87"}},"example: filter by custom field List":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,11","filters":[{"type":4106,"field":11,"operator":"equal","value":"Main"}]}},"example: filter by custom field Number":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,5","filters":[{"type":4102,"field":5,"operator":"equal","value":999}]}},"example: filter by custom field Group, employee or contact":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,96","filters":[{"type":4112,"field":96,"operator":"equal","value":"group:5"}]}},"example: filter by custom field Checkbox":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,97","filters":[{"type":4105,"field":97,"operator":"equal","value":true}]}},"example: filter by custom field Task":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,50","filters":[{"type":4115,"field":50,"operator":"equal","value":10}]}},"example: filter by custom field Project":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,50","filters":[{"type":4117,"field":50,"operator":"equal","value":10}]}},"example: filter by custom field Counterparty":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,5","filters":[{"type":4110,"field":5,"operator":"equal","value":10}]}},"example: filter by custom field Date and Employee":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,3,5","filters":[{"type":4103,"field":3,"operator":"equal","value":{"dateType":"otherRange","dateFrom":"15-12-2022","dateTo":"17-12-2022"}},{"type":9109,"field":5,"operator":"equal","value":"user:50"}]}},"example: filter by data tag entry value with custom field String":{"value":{"offset":0,"pageSize":100,"filters":[{"type":93,"operator":"equals","value":"Test value","subfilter":{"dataTagId":6,"filter":{"type":3108,"field":20}}}],"fields":"id,name,dataTags"}},"example: filter by data tag entry value with custom field Directory entry":{"value":{"offset":0,"pageSize":100,"filters":[{"type":93,"operator":"equals","value":1,"subfilter":{"dataTagId":6,"filter":{"type":3105,"field":110}}}],"fields":"id,name,dataTags"}}}}},"description":""},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"contacts":{"type":"array","items":{"$ref":"#/components/schemas/ContactResponse"}}}},"examples":{"example":{"value":{"result":"success","contacts":[{"id":1,"template":{"id":1},"sourceObjectId":"","sourceDataVersion":"","name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","gender":"Male","description":"Description for contact","address":"Cosima 123 High Street, Apt. 16 City, ST 12345","site":"https://ivan.ivanow.com","email":"ivan@mail.com","additionalEmailAddresses":["ivan_additional_1@mail.com","ivan_additional_2@mail.com"],"skype":"ivan-ivanov","group":{"id":1,"name":"Workers"},"isCompany":false,"isDeleted":false,"birthDate":{"date":"01-12-1990","time":"00:00","datetime":"1990-12-01T00:00Z"},"dateOfLastUpdate":{"date":"10-11-2021","time":"14:16","datetime":"2021-11-10T14:16Z"},"phones":[{"number":"89643752416","maskedNumber":"+8 (964) 375-24-16","type":1}],"companies":[],"contacts":[],"customFieldData":[{"field":{"id":10,"name":"String custom field","type":0,"objectType":1},"value":"Test string"}]}]}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/contact/":{"post":{"tags":["Contact"],"summary":"Create contact or company","operationId":"post-contact","description":"This method lets you create a new contact or company","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactRequest"},"examples":{"example create contact":{"value":{"template":{"id":1},"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","gender":"Male","description":"Descritption for contact","address":"Cosima 123 High Street, Apt. 16 City, ST 12345","site":"https://ivan.ivanow.com","email":"ivan@mail.com","skype":"ivan-ivanov","position":"sales manager","group":{"id":1},"isCompany":false,"isDeleted":false,"birthDate":{"date":"01-12-1990"},"phones":[{"number":"89643752416","type":1}],"companies":[],"contacts":[],"customFieldData":[]}},"example create contact, set files":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","files":[{"id":10},{"id":15}]}},"example create contact, set supervisors":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","supervisors":{"users":[{"id":"user:22"}],"groups":[]}}},"example create company, set contacts":{"value":{"template":{"id":1},"name":"Test Ltd","isCompany":true,"contacts":[{"id":5}]}},"example create contact, set companies":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","companies":[{"id":10}]}},"example create contact with set field: custom field type Line":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":10},"value":"Test string"}]}},"example create contact with set field: custom field type Number":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":20},"value":99}]}},"example create contact with set field: custom field type Date":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}},"example create contact with set field: custom field type Time":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example create contact with set field from string: custom field type Date and time":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example create contact with set field from object: custom field type Date and time":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}},"example create contact with set field: custom field type Period of time":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example create contact with set field: custom field type Checkbox":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":70},"value":true}]}},"example create contact with set field: custom field type List":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example create contact with set field: custom field type Directory entry":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":90},"value":{"id":2}}]}},"example create contact with set field: custom field type Contact by prefixedId":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example create contact with set field: custom field type Contact by id":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example create contact with set field: custom field type Employee by prefixedId":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example create contact with set field: custom field type Employee by id":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example create contact with set field: custom field type Counterparty by prefixedId":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example create contact with set field: custom field type Counterparty by id":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example create contact with set field: custom field type Group, employee, or contact":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example create contact with set field: custom field type List of users":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example create contact with set field: custom field type Set of directory values":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example create contact with set field: custom field type Task":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example create contact with set field: custom field type Task set":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example create contact with set field: custom field type Set of values":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example create contact with set field: custom field type Files":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example create contact with set field: custom field type Project":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example create contact with set field: custom field type Location":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}},"example create contact and set integrations data":{"value":{"template":{"id":1},"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","telegramId":"0123456789","telegram":"https://t.me/telegram_username","facebook":"https://facebook.com/0123456789","vk":"https://vk.com/id0123456789","instagram":"https://www.instagram.com/instagram_username"}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":1}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":2001,"error":"Rest API error"}}}}}}}}},"/contact/import":{"post":{"tags":["Contact"],"summary":"Import contact list","operationId":"post-contact-import","description":"This method lets you import a list of companies or contacts into Planfix","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"silent":{"type":"boolean","default":false,"description":"Silent mode"},"sourceId":{"type":"string","format":"uuid"},"contactTemplateId":{"type":"integer"},"companyTemplateId":{"type":"integer"},"optionImportDuplicate":{"type":"string","description":"Enum: ignore, update, none"},"optionImportUniqueField":{"type":"string","description":"Enum: email-phone-name-ifnot, email-phone-name, email-phone, phone, name, email-and-phone-and-name, number, custom  OR custom:{fieldId}"},"optionImportUniqueDefaultField":{"type":"string","description":"Enum: name, email-phone-name"},"contacts":{"type":"array","items":{"$ref":"#/components/schemas/ContactRequest"}}}},"examples":{"example import contact":{"value":{"silent":"false,","contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","gender":"Male","description":"Description for contact","address":"Cosima 123 High Street, Apt. 16 City, ST 12345","site":"https://ivan.ivanow.com","email":"ivan@mail.com","skype":"ivan-ivanov","group":{"id":1},"isCompany":false,"isDeleted":false,"birthDate":{"date":"01-12-1900"},"phones":[{"number":"89643752416","type":1}],"companies":[{"id":1,"name":"Ivan LTD"}],"contacts":[]}]}},"example import contact with set field: custom field type Line":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":10},"value":"Test string"}]}]}},"example import contact with set field: custom field type Number":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":20},"value":99}]}]}},"example import contact with set field: custom field type Date":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}]}},"example import contact with set field: custom field type Time":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}]}},"example import contact with set field from string: custom field type Date and time":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}]}},"example import contact with set field from object: custom field type Date and time":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"17:55"}}]}]}},"example import contact with set field: custom field type Period of time":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"example import contact with set field: custom field type Checkbox":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":70},"value":true}]}]}},"example import contact with set field: custom field type List":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":80},"value":"Enum value"}]}]}},"example import contact with set field: custom field type Directory entry":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":90},"value":{"id":2}}]}]}},"example import contact with set field: custom field type Contact by prefixedId":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}]}},"example import contact with set field: custom field type Contact by id":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":100},"value":{"id":5}}]}]}},"example import contact with set field: custom field type Employee by prefixedId":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}]}},"example import contact with set field: custom field type Employee by id":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":110},"value":{"id":3}}]}]}},"example import contact with set field: custom field type Counterparty by prefixedId":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}]}},"example import contact with set field: custom field type Counterparty by id":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":120},"value":{"id":10}}]}]}},"example import contact with set field: custom field type Group, employee, or contact":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}]}},"example import contact with set field: custom field type List of users":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}]}},"example import contact with set field: custom field type Set of directory values":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}]}},"example import contact with set field: custom field type Task":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":160},"value":{"id":111}}]}]}},"example import contact with set field: custom field type Task set":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}]}},"example import contact with set field: custom field type Set of values":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":200},"value":["First element"]}]}]}},"example import contact with set field: custom field type Files":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}]}},"example import contact with set field: custom field type Project":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":220},"value":{"id":5}}]}]}},"example import contact with set field: custom field type Location":{"value":{"contactTemplateId":1,"companyTemplateId":2,"optionImportDuplicate":"update","optionImportUniqueField":"custom:36","optionImportUniqueDefaultField":"name","contacts":[{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}]}}}}}},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":30,"error":"Rest API error, not valid JSON: reason"}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":2001,"error":"Rest API error"}}}}}}}}},"/contact/{id}/comments/list":{"post":{"tags":["Contact"],"summary":"Get list of comments added to contact","operationId":"get-contact-comments","description":"This method lets you get a list of comments added to a contact","parameters":[{"name":"id","in":"path","description":"Number of contact","required":true,"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"id,description","description":"Fields returned - names, comma-delimited"},"typeList":{"type":"string","enum":["Comments","All","New","Deleted"]},"resultOrder":{"type":"array","items":{"type":"object","properties":{"filed":{"type":"string","description":"System field name - *Possible for system fields:* id, dateTime"},"direction":{"type":"string","enum":["Asc","Desc"]}}}}}},"examples":{"example":{"value":{"offset":0,"pageSize":100,"fields":"id,description,recipients","typeList":"Comments","resultOrder":[{"field":"id","direction":"Asc"},{"field":"dateTime","direction":"Desc"}]}}}}}},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"comments":{"type":"array","items":{"$ref":"#/components/schemas/CommentResponse"}}}},"examples":{"Comments from contact by id 10":{"value":{"result":"success","comments":[{"id":1,"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","dateTime":{"date":"05-04-2022","time":"10:05","datetime":"2022-04-05T10:05Z"},"type":"Comment","fromType":"None","description":"Hello","contact":{"id":"contact:10"},"project":{"id":3},"owner":{"id":"user:2","name":"Ivan"},"isDeleted":false,"isPinned":false,"isHidden":false,"isNotRead":true,"recipients":{"users":[{"id":"contact:10","name":"Alex"}],"groups":[]},"reminders":[],"dataTags":[]}]}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/contact/{id}/comments/":{"post":{"tags":["Contact"],"summary":"Add comment","operationId":"post-contact-add-comment","description":"This method lets you add a new comment to a contact","parameters":[{"name":"id","in":"path","description":"Number of contact","required":true,"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommentCreateRequest"},"examples":{"Add new comment":{"value":{"sourceId":"797f5a94-3689-4ac8-82fd-d749511ea2b2","sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","dateTime":{"date":"12-06-2022","time":"12:15","datetime":"2022-06-12T12:15Z"},"description":"New comment text","owner":{"id":"user:1"},"isPinned":true,"isHidden":false,"recipients":{"users":[{"id":"contact:10"}],"groups":[{"id":1}]}}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":1}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":2001,"error":"Rest API error"}}}}}}}}},"/contact/{id}/datatags/":{"post":{"tags":["Contact"],"summary":"Add a data tag entry with a new comment","operationId":"post-contact-add-data-tag-entry-new-comment","description":"This method lets you add a data tag entry with a new comment","parameters":[{"name":"id","in":"path","description":"Number of contact","required":true,"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataTagEntryCreateRequest"},"examples":{"Add data tag entry as new comment with a custom field type Line":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":10},"value":"Test value"}]}]}},"Add two data tag entry as new comment with a custom field type Date and Period of time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":6},"value":{"date":"11-10-2022"}},{"field":{"id":7},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"Add two data tag entry as new comment with a custom field type Line":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":10},"value":"Test value 1"}]},{"customFieldData":[{"field":{"id":10},"value":"Test value 2"}]}]}},"Add data tag entry as new comment with a custom field type Time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}]}},"Add data tag entry as new comment with a custom field type Date and time from string":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}]}},"Add data tag entry as new comment with a custom field type Date and time from object":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}]}},"Add data tag entry as new comment with a custom field type Period of time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"Add data tag entry as new comment with a custom field type type Checkbox":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":70},"value":true}]}]}},"Add data tag entry as new comment with a custom field type Directory entry":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}]}},"Add data tag entry as new comment with a custom field type Directory entry, set empty value":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}]}},"Add data tag entry as new comment with a custom field type Contact by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}]}},"Add data tag entry as new comment with a custom field type Contact by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}]}},"Add data tag entry as new comment with a custom field type Employee by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}]}},"Add data tag entry as new comment with a custom field type Employee by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}]}},"Add data tag entry as new comment with a custom field type Counterparty by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}]}},"Add data tag entry as new comment with a custom field type Counterparty by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}]}},"Add data tag entry as new comment with a custom field type Group, employee, or contact":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}]}},"Add data tag entry as new comment with a custom field type List of users":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}]}},"Add data tag entry as new comment with a custom field type Set of directory values":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}]}},"Add data tag entry as new comment with a custom field type Task":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}]}},"Add data tag entry as new comment with a custom field type Task set":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}]}},"Add data tag entry as new comment with a custom field type Set of values":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}]}},"Add data tag entry as new comment with a custom field type Files":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}]}},"Add data tag entry as new comment with a custom field type Project":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}]}},"Add data tag entry as new comment with a custom field type Location":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}]}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"keys":{"type":"array","items":{"type":"number"}},"commentId":{"type":"number"}}},"examples":{"example":{"value":{"result":"success","keys":[11,12],"commentId":1523}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6001,"error":"Error add entry"}}}}}}}}},"/contact/{id}/datatags/{commentId}":{"post":{"tags":["Contact"],"summary":"Add a data tag entry to an existing comment","operationId":"post-contact-add-data-tag-entry-existing-comment","description":"This method lets you add a data tag entry to an existing comment","parameters":[{"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"},"name":"id","in":"path","required":true,"description":"Number of contact"},{"schema":{"type":"integer"},"name":"commentId","in":"path","required":true,"description":"Number of comment"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataTagEntryCreateRequest"},"examples":{"Add data tag entry to an existing comment with a custom field type Number":{"value":{"dataTag":{"id":1},"items":[{"customFieldData":[{"field":{"id":20},"value":99}]}]}},"Add data tag entry to an existing comment with a custom field type Date and Period of time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":6},"value":{"date":"11-10-2022"}},{"field":{"id":7},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"Add data tag entry to an existing comment with a custom field type Time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}]}},"Add data tag entry to an existing comment with a custom field type Date and time from string":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}]}},"Add data tag entry to an existing comment with a custom field type Date and time from object":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}]}},"Add data tag entry to an existing comment with a custom field type Period of time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"Add data tag entry to an existing comment with a custom field type type Checkbox":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":70},"value":true}]}]}},"Add data tag entry to an existing comment with a custom field type Directory entry":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}]}},"Add data tag entry to an existing comment with a custom field type Directory entry, set empty value":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}]}},"Add data tag entry to an existing comment with a custom field type Contact by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}]}},"Add data tag entry to an existing comment with a custom field type Contact by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}]}},"Add data tag entry to an existing comment with a custom field type Employee by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}]}},"Add data tag entry to an existing comment with a custom field type Employee by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}]}},"Add data tag entry to an existing comment with a custom field type Counterparty by prefixedId'":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}]}},"Add data tag entry to an existing comment with a custom field type Counterparty by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}]}},"Add data tag entry to an existing comment with a custom field type Group, employee, or contact":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}]}},"Add data tag entry to an existing comment with a custom field type List of users":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}]}},"Add data tag entry to an existing comment with a custom field type Set of directory values":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}]}},"Add data tag entry to an existing comment with a custom field type Task":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}]}},"Add data tag entry to an existing comment with a custom field type Task set":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}]}},"Add data tag entry to an existing comment with a custom field type Set of values":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}]}},"Add data tag entry to an existing comment with a custom field type Files":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}]}},"Add data tag entry to an existing comment with a custom field type Project":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}]}},"Add data tag entry to an existing comment with a custom field type Location":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}]}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"keys":{"type":"array","items":{"type":"integer"}}},"x-examples":{"example-1":{"result":"success","keys":[11,12]}}},"examples":{"example":{"value":{"result":"success","keys":[11,12]}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6001,"error":"Error add entry"}}}}}}}}},"/contact/{id}/comments/{commentId}":{"post":{"tags":["Contact"],"summary":"Update comment","operationId":"post-contact-update-comment","description":"This method lets you update a comment","parameters":[{"name":"id","in":"path","description":"Number of contact","required":true,"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"}},{"schema":{"type":"integer"},"name":"commentId","in":"path","required":true,"description":"Number of comment"},{"schema":{"type":"boolean","default":"false"},"in":"query","name":"silent","description":"Silent mode"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommentUpdateRequest"},"examples":{"Update exist comment, attach exist file":{"value":{"description":"New text","isPinned":true,"recipients":{"users":[{"id":"contact:10"}],"groups":[{"id":1}]},"files":[{"id":115234}]}}}}}},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":5000,"error":"Comment not found by id 115"}}}}}}}}},"/contact/{id}/files":{"get":{"tags":["Contact"],"summary":"Get contact files","operationId":"get-contact-files","description":"This method lets you get contatc files","parameters":[{"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"},"name":"id","in":"path","required":true,"description":"Number of contact"},{"schema":{"type":"boolean","default":"false"},"in":"query","name":"onlyFromDescription","description":"Flag to get files from description only"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileResponse"}}}},"examples":{"example":{"value":{"result":"success","files":[{"id":10,"size":1024,"name":"My first file"},{"id":20,"size":2048,"name":"My second file"}]}}}}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/contact/templates":{"get":{"tags":["Contact"],"summary":"Get list of contact or company templates","operationId":"get-contact-list-templates","description":"This method lets you get a list of all contact or company templates","parameters":[{"name":"offset","description":"Offset from beginning of list","in":"query","schema":{"type":"number","format":"int64","minimum":0,"default":0}},{"name":"pageSize","in":"query","description":"Size of requested list","schema":{"type":"number","format":"int64","maximum":100,"minimum":1,"default":100}},{"name":"isCompany","in":"query","description":"True for companies / false for contacts","required":false,"style":"form","explode":true,"schema":{"type":"boolean","default":false}},{"schema":{"type":"string"},"in":"query","name":"sourceId","description":"Unique identifier of external application"},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, template, object, name, midname, lastname, gender, description, address, site, email, additionalEmailAddresses, skype, telegramId, telegram, facebook, instagram, vk, position, group, isCompany, isDeleted, birthDate, dateOfLastUpdate, supervisors, phones, companies, contacts, files, sourceObjectId, sourceDataVersion"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"templates":{"type":"array","items":{"$ref":"#/components/schemas/ContactResponse"}}}},"examples":{"example":{"value":{"result":"success","templates":[{"id":1,"name":"My contact template"}]}}}}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/contact/groups":{"get":{"tags":["Contact"],"summary":"Get list of contact groups","operationId":"get-contact-list-groups","description":"This method lets you get a list of all company groups","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited description: <br>*Possible:* id, name","example":"id,name"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupResponse"}}}},"examples":{"example":{"value":{"result":"success","groups":[{"id":1,"name":"My contact group"}]}}}}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/contact/filters":{"post":{"tags":["Contact"],"summary":"Get list contact filters","operationId":"post-contact-filters","description":"This method lets you get list contact filters","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/Filter"}}}},"examples":{"example":{"value":{"result":"success","filters":[{"id":":contact","name":"Contacts"},{"id":":company","name":"Companies"},{"id":"4115","name":"My custom filter","owner":{"id":"user:1","name":"John"}}]}}}}},"headers":{}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/task/{id}":{"get":{"tags":["Task"],"summary":"Get task by number","operationId":"get-task-by-id","description":"This method lets you get a task by number","parameters":[{"name":"id","in":"path","description":"Number of task","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"name":"fields","in":"query","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, description, priority, status, processId, resultChecking, type, assigner, parent, object, template, project, counterparty, dateTime, startDateTime, endDateTime, hasStartDate, hasEndDate, hasStartTime, hasEndTime, delayedTillDate, actualCompletionDate, dateOfLastUpdate, duration, durationUnit, durationType, overdue, closeToDeadLine, notAcceptedInTime, inFavorites, isSummary, isSequential, assignees, participants, auditors, recurrence, isDeleted, files, dataTags, sourceObjectId, sourceDataVersion","required":false,"style":"form","explode":true,"example":"id,name,description,101,115","schema":{"type":"string"}},{"schema":{"type":"string"},"in":"query","name":"sourceId","description":"Unique identifier of external application"}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"task":{"$ref":"#/components/schemas/TaskResponse"}}},"examples":{"example for field: name":{"value":{"result":"success","task":{"id":10,"name":"Task name"}}},"example for field: files":{"value":{"result":"success","task":{"id":10,"files":[{"id":10,"size":1024,"name":"My first file"},{"id":20,"size":2048,"name":"My second file"}]}}},"example for field: dataTags":{"value":{"result":"success","task":{"id":10,"dataTags":[{"dataTag":{"id":10,"name":"My first data tag"},"key":1},{"dataTag":{"id":20,"name":"My second data tag"},"key":1}]}}},"example for fields: name,description,10 (id task custom field type Line)":{"value":{"result":"success","task":{"id":10,"name":"Task name","description":"Task description","customFieldData":[{"field":{"id":10,"name":"My test string field","type":0,"objectType":1},"value":"Test value"}]}}},"example for fields: name,startDateTime,20 (id task custom field type Number)":{"value":{"result":"success","task":{"id":10,"name":"Task name","startDateTime":{"date":"01-12-2022","time":"00:00","datetime":"2022-12-01T00:00Z"},"customFieldData":[{"field":{"id":20,"name":"My test number field","type":1,"objectType":1},"value":99}]}}},"example for field: 30 (id task custom field type Date)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":30,"name":"My test date field","type":3,"objectType":1},"value":{"date":"11-11-2021","time":"00:00","datetime":"2021-11-11T00:00Z"}}]}}},"example for field: 40 (id task custom field type Time)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":40,"name":"My test time field","type":4,"objectType":1},"value":{"time":"17:50"}}]}}},"example for field: 50 (id task custom field type Date and time)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":50,"name":"My test date and time field","type":5,"objectType":0},"value":{"date":"21-12-2021","time":"12:15"}}]}}},"example for field: 60 (id task custom field type Period of time)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":60,"name":"My test time period field","type":6,"objectType":1},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}}},"example for field: 70 (id task custom field type Checkbox)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":70,"name":"My test checkbox field","type":7,"objectType":1},"value":true}]}}},"example for field: 80 (id task custom field type List)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":80,"name":"My test enum field","type":8,"objectType":1},"value":"Enum value"}]}}},"example for field: 90 (id task custom field type Directory entry)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":90,"name":"My test directory entry field","type":9,"objectType":1,"directoryId":10},"value":{"id":2,"value":"Item value"}}]}}},"example for field: 100 (id task custom field type Contact)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":100,"name":"My test counterparty field","type":10,"objectType":1},"value":{"id":"contact:5","name":"Ivanov Ivan"}}]}}},"example for field: 110 (id task custom field type Employee)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":110,"name":"My test employee field","type":11,"objectType":1},"value":{"id":"user:3","name":"Petrov Petr"}}]}}},"example for field: 120 (id task custom field type Counterparty)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":120,"name":"My test counterparty field","type":12,"objectType":1},"value":{"id":"contact:10","name":"Ivanov Ivan"}}]}}},"example for field: 130 (id task custom field type Group, employee, or contact)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":130,"name":"My test group, employee, or contact field","type":13,"objectType":1},"value":{"id":"user:1","name":"Petrov Petr"}}]}}},"example for field: 140 (id task custom field type List of users)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":140,"name":"My test list of users field","type":14,"objectType":1},"value":[{"id":"user:1","name":"Petrov Petr"},{"id":"contact:7","name":"Ivanov Ivan"},{"id":"group:5","name":"Work group"}]}]}}},"example for field: 150 (id task custom field type Set of directory values)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":150,"name":"My test set of directory values field","type":15,"objectType":1,"directoryId":10},"value":[{"id":1,"value":"Item value one"},{"id":2,"value":"Item value two"},{"id":3,"value":"Item value three"}]}]}}},"example for field: 160 (id task custom field type Task)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":160,"name":"My test task field","type":16,"objectType":1},"value":{"id":111,"name":"My task"}}]}}},"example for field: 170 (id task custom field type Task set)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":170,"name":"My test task set field","type":17,"objectType":1},"value":[{"id":111,"name":"My task 1"},{"id":112,"name":"My task 2"},{"id":113,"name":"My task 3"}]}]}}},"example for field: 200 (id task custom field type Set of values)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":200,"name":"My test set of values field","type":20,"objectType":1},"value":["First element","Two element","Three element"]}]}}},"example for field: 210 (id task custom field type Files)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":210,"name":"My test files field","type":21,"objectType":1},"value":[204308,205305]}]}}},"example for field: 220 (id task custom field type Project)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":220,"name":"My test project field","type":22,"objectType":1},"value":{"id":5,"name":"My project"}}]}}},"example for field: 230 (id task custom field type Data tag summaries)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":230,"name":"My test data tag summaries field","type":23,"objectType":1},"value":{"id":1.2}}]}}},"example for field: 240 (id task custom field type Calculated field)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":240,"name":"My test calculated field","type":24,"objectType":1},"value":{"id":"Formula result"}}]}}},"example for field: 250 (id task custom field type Location)":{"value":{"result":"success","task":{"id":10,"customFieldData":[{"field":{"id":250,"name":"My test location field","type":25,"objectType":1},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}}},"400":{"description":"Invalid status value","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}},"post":{"tags":["Task"],"summary":"Update task by number","operationId":"post-task-by-id","description":"This method lets you update a task by number","parameters":[{"name":"id","in":"path","description":"Number of task","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"schema":{"type":"boolean","default":"false"},"in":"query","name":"silent","description":"Silent mode"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskUpdateRequest"},"examples":{"example name update":{"value":{"name":"New task name"}},"example description update":{"value":{"description":"New task description"}},"example status update":{"value":{"status":{"id":6}}},"example priority update":{"value":{"priority":"Urgent"}},"example project update":{"value":{"project":{"id":1}}},"example parent update":{"value":{"parent":{"id":1}}},"example object update":{"value":{"object":{"id":1}}},"example template update":{"value":{"template":{"id":1}}},"example process update":{"value":{"processId":1}},"example duration update":{"value":{"duration":5,"durationUnit":"Day"}},"example inFavorites update":{"value":{"inFavorites":true}},"example assigner and assignees update":{"value":{"assigner":{"id":"user:1"},"assignees":{"users":[{"id":"user:5"},{"id":"contact:1"}],"groups":[{"id":3}]}}},"example update counterparty":{"value":{"counterparty":{"id":5}}},"example of updating dates from an object":{"value":{"startDateTime":{"date":"01-01-2023","time":"12:15"},"endDateTime":{"date":"01-02-2023"}}},"example of updating dates from a string":{"value":{"startDateTime":"01-01-2023 00:05:00","endDateTime":"01-02-2023 00:00:00"}},"example of updating dates, setting empty values":{"value":{"hasStartDate":false,"hasEndDate":false}},"example update files":{"value":{"files":[{"id":10},{"id":15}]}},"example field update: custom field type Line":{"value":{"customFieldData":[{"field":{"id":10},"value":"Test value"}]}},"example field update: custom field type Number":{"value":{"customFieldData":[{"field":{"id":20},"value":99}]}},"example field update: custom field type Date":{"value":{"customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}},"example field update: custom field type Time":{"value":{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example field update from string: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example field update frpm object: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":{"date":"12-12-2021","time":"12:15"}}]}},"example field update: custom field type Period of time":{"value":{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example field update: custom field type Checkbox":{"value":{"customFieldData":[{"field":{"id":70},"value":true}]}},"example field update: custom field type List":{"value":{"customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example field update: custom field type Directory entry":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}},"example field update: custom field type Directory entry, set empty value":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}},"example field update: custom field type Contact by prefixedId":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example field update: custom field type Contact by id":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example field update: custom field type Employee by prefixedId":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example field update: custom field type Employee by id":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example field update: custom field type Counterparty by prefixedId":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example field update: custom field type Counterparty by id":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example field update: custom field type Group, employee, or contact":{"value":{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example field update: custom field type List of users":{"value":{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example field update: custom field type Set of directory values":{"value":{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example field update: custom field type Task":{"value":{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example field update: custom field type Task set":{"value":{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example field update: custom field type Set of values":{"value":{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example field update: custom field type Files":{"value":{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example field update: custom field type Project":{"value":{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example field update: custom field type Location":{"value":{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"failures":{"type":"array","items":{"type":"object","properties":{"field":{"type":"string"},"error":{"type":"string"}}}}}},"examples":{"example":{"value":{"failures":{"field":"counterparty","error":"Field change failed"}}}}}}},"202":{"description":"Accepted"},"404":{"description":"Task not found","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1000,"error":"Task for update not found by id 1"}}}}}},"405":{"description":"Method Not Allowed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":5,"error":"Scope denied, method not allowed"}}}}}}}}},"/task/list":{"post":{"tags":["Task"],"summary":"Get list of tasks","operationId":"get-task-list","description":"This method lets you get a list of tasks","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"filterId":{"type":"string","description":"Id for task filter, get list by method '/task/filters'"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/ComplexTaskFilter"}},"fields":{"type":"string","example":"id,name,description,10","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, description, priority, status, processId, resultChecking, type, assigner, parent, object, template, project, counterparty, dateTime, startDateTime, endDateTime, hasStartDate, hasEndDate, hasStartTime, hasEndTime, delayedTillDate, actualCompletionDate, dateOfLastUpdate, duration, durationUnit, durationType, overdue, closeToDeadLine, notAcceptedInTime, inFavorites, isSummary, isSequential, assignees, participants, auditors, recurrence, isDeleted, files, sourceObjectId, sourceDataVersion"},"sourceId":{"type":"string","maximum":100,"description":"Unique identifier of external application","format":"uuid"}}},"encoding":{"historyMetadata":{"contentType":"plain/text; charset=utf-8"}},"examples":{"example: without filter":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description","sourceId":"797f5a94-3689-4ac8-82fd-d749511ea2b2"}},"example:  outgoing tasks and filter by start date":{"value":{"offset":0,"pageSize":100,"filterId":"out","filters":[{"type":13,"operator":"equal","value":{"dateType":"otherDate","dateValue":"22-03-2022"}}],"fields":"id,name,description,startDateTime","sourceId":"797f5a94-3689-4ac8-82fd-d749511ea2b2"}},"example: filter by start date with time":{"value":{"offset":0,"pageSize":100,"filters":[{"type":13,"operator":"equal","value":{"dateType":"otherRange_withTime","dateFrom":"22-03-2022 00:15","dateTo":"22-03-2022 03:35"}}],"fields":"id,name,description,startDateTime"}},"example: filter  by end date":{"value":{"offset":0,"pageSize":100,"filters":[{"type":14,"operator":"equal","value":{"dateType":"yesterday"}}],"fields":"id,name,description,endDateTime"}},"example: filter by assigner":{"value":{"offset":0,"pageSize":100,"filters":[{"type":1,"operator":"equal","value":"user:1"}],"fields":"id,name,description,assigner"}},"example: filter by assignees":{"value":{"offset":0,"pageSize":100,"filters":[{"type":2,"operator":"equal","value":"contact:5"}],"fields":"id,name,description,assignees"}},"example: filter by auditors":{"value":{"offset":0,"pageSize":100,"filters":[{"type":3,"operator":"equal","value":"group:1"}],"fields":"id,name,description,auditors"}},"example: filter by has start date time":{"value":{"offset":0,"pageSize":100,"filters":[{"type":25,"operator":"equal","value":true}],"fields":"id,name,description,startDateTime"}},"example: filter by processId":{"value":{"offset":0,"pageSize":100,"filters":[{"type":24,"operator":"equal","value":"12"}],"fields":"id,name,description,processId"}},"example: filter by project":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5,"operator":"equal","value":"5"}],"fields":"id,name,description,project"}},"example: filter by some project":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5,"operator":"equal","value":[5,7]}],"fields":"id,name,description,project"}},"example: filter by counterparty":{"value":{"offset":0,"pageSize":100,"filters":[{"type":7,"operator":"equal","value":3}],"fields":"id,name,description,counterparty"}},"example: filter by priority":{"value":{"offset":0,"pageSize":100,"filters":[{"type":9,"operator":"equal","value":"Urgent"}],"fields":"id,name,description,priority"}},"example: filter by status and has start time":{"value":{"offset":0,"pageSize":100,"filters":[{"type":10,"operator":"equal","value":5},{"type":25,"operator":"equal","value":true}],"fields":"id,name,description,startDateTime"}},"example: filter by multiple statuses":{"value":{"offset":0,"pageSize":100,"filters":[{"type":10,"operator":"equal","value":[2,3]}],"fields":"id,name,description,status"}},"example: filter by number":{"value":{"offset":0,"pageSize":100,"filters":[{"type":57,"operator":"equal","value":5}],"fields":"id,name,description"}},"example: filter by some numbers":{"value":{"offset":0,"pageSize":100,"filters":[{"type":57,"operator":"equal","value":[5,7]}],"fields":"id,name,description"}},"example: filter by template number":{"value":{"offset":0,"pageSize":100,"filters":[{"type":51,"operator":"equal","value":1}],"fields":"id,name,description,template"}},"example: filter by some template numbers":{"value":{"offset":0,"pageSize":100,"filters":[{"type":51,"operator":"equal","value":[1,2]}],"fields":"id,name,description,template"}},"example: filter by object number":{"value":{"offset":0,"pageSize":100,"filters":[{"type":51,"operator":"equal","value":3}],"fields":"id,name,description,object"}},"example: filter by some object numbers":{"value":{"offset":0,"pageSize":100,"filters":[{"type":51,"operator":"equal","value":[4,5]}],"fields":"id,name,description,object"}},"example: filter by data tag entry value with custom field String":{"value":{"offset":0,"pageSize":100,"filters":[{"type":93,"operator":"equals","value":"Test value","subfilter":{"dataTagId":6,"filter":{"type":3108,"field":20}}}],"fields":"id,name,description,dataTags"}},"example: filter by data tag entry value with custom field Directory entry":{"value":{"offset":0,"pageSize":100,"filters":[{"type":93,"operator":"equals","value":1,"subfilter":{"dataTagId":6,"filter":{"type":3105,"field":110}}}],"fields":"id,name,description,dataTags"}},"example: filter by custom field Line":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,87","filters":[{"type":101,"operator":"equal","value":"Test string value","field":87}]}},"example: filter by custom field List of users":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,15","filters":[{"type":113,"field":15,"operator":"equal","value":"user:50"}]}},"example: filter by custom field Employee":{"value":{"offset":0,"pageSize":100,"filters":[{"type":109,"operator":"equal","value":"user:3","field":87}],"fields":"id,name,description,87"}},"example: filter by custom field Date":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,88","filters":[{"type":103,"field":88,"operator":"equal","value":{"dateType":"otherRange","dateFrom":"15-11-2022","dateTo":"17-11-2022"}}]}},"example: filter by custom field Directory entry":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,20","filters":[{"type":107,"field":20,"operator":"equal","value":"47 // Directory entry key"}]}},"example: filter by custom field Set of directory values":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,21","filters":[{"type":114,"field":21,"operator":"equal","value":"47;48;50"}]}},"example: filter by custom field Contact":{"value":{"offset":0,"pageSize":100,"filters":[{"type":108,"operator":"equal","value":"contact:15","field":87}],"onlyChanged":false,"fields":"id,name,description,87"}},"example: filter by custom field List":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,11","filters":[{"type":106,"field":11,"operator":"equal","value":"Main"}]}},"example: filter by custom field Number":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,5","filters":[{"type":102,"field":5,"operator":"equal","value":999}]}},"example: filter by custom field Group, employee or contact":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,96","filters":[{"type":112,"field":96,"operator":"equal","value":"group:5"}]}},"example: filter by custom field Checkbox":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,97","filters":[{"type":105,"field":97,"operator":"equal","value":true}]}},"example: filter by custom field Task":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,50","filters":[{"type":115,"field":50,"operator":"equal","value":10}]}},"example: filter by custom field Project":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,50","filters":[{"type":117,"field":50,"operator":"equal","value":10}]}},"example: filter by custom field Counterparty":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,5","filters":[{"type":110,"field":5,"operator":"equal","value":10}]}}}}}},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"tasks":{"type":"array","items":{"$ref":"#/components/schemas/TaskResponse"}}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":30,"error":"Rest API error"}}}}}}}}},"/task/":{"post":{"tags":["Task"],"summary":"Create task","operationId":"post-task","description":"This method lets you create a new task","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskCreateRequest"},"examples":{"example create task":{"value":{"name":"New task name","description":"Task description"}},"example create task by object":{"value":{"name":"New task name by object","description":"Task description by object","object":{"id":1}}},"example create task by template":{"value":{"name":"New task name by template","description":"Task description by template","template":{"id":1}}},"example create task, set assigner and assignees":{"value":{"name":"New task name","description":"Task description","assigner":{"id":"user:1"},"assignees":{"users":[{"id":"user:5"},{"id":"contact:1"}],"groups":[{"id":3}]}}},"example create task, set counterparty":{"value":{"name":"New task name","description":"Task description","counterparty":{"id":5}}},"example create task, set status":{"value":{"name":"New task name","description":"Task description","status":{"id":4}}},"example create task, set priority":{"value":{"name":"New task name","description":"Task description","priority":"Urgent"}},"example create task, set project":{"value":{"name":"New task name","description":"Task description","project":{"id":1}}},"example create task, set parent":{"value":{"name":"New task name","description":"Task description","parent":{"id":1}}},"example create task, set duration":{"value":{"name":"New task name","description":"Task description","duration":5,"durationUnit":"Day","durationType":"CalendarDays"}},"example create task, set inFavorites":{"value":{"name":"New task name","description":"Task description","inFavorites":true}},"example create task, set creation date":{"value":{"name":"New task name","description":"Task description","dateTime":{"date":"01-01-2023","time":"12:15"}}},"example create task, set dates from object":{"value":{"name":"New task name","description":"Task description","startDateTime":{"date":"01-01-2023","time":"12:15"},"endDateTime":{"date":"01-02-2023"}}},"example create task, set dates from string":{"value":{"name":"New task name","description":"Task description","startDateTime":"01-01-2023 12:15:00","endDateTime":"01-02-2023 00:00:00"}},"example create task, set files":{"value":{"name":"New task name","description":"Task description","files":[{"id":10},{"id":15}]}},"example create task with set field: custom field type Line":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":10},"value":"Test string"}]}},"example create task with set field: custom field type Number":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":20},"value":99}]}},"example create task with set field: custom field type Date":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}},"example create task with set field: custom field type Time":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example create task with set field from string: custom field type Date and time":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example create task with set field from object: custom field type Date and time":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":40},"value":{"date":"21-12-2021","time":"12:15"}}]}},"example create task with set field: custom field type Period of time":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example create task with set field: custom field type Checkbox":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":70},"value":true}]}},"example create task with set field: custom field type List":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example create task with set field: custom field type Directory entry":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":90},"value":{"id":2}}]}},"example create task with set field: custom field type Contact by prefixedId":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example create task with set field: custom field type Contact by id":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example create task with set field: custom field type Employee by prefixedId":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example create task with set field: custom field type Employee by id":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example create task with set field: custom field type Counterparty by prefixedId":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example create task with set field: custom field type Counterparty by id":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example create task with set field: custom field type Group, employee, or contact":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example create task with set field: custom field type List of users":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example create task with set field: custom field type Set of directory entry":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example create task with set field: custom field type Task":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example create task with set field: custom field type Task set":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example create task with set field: custom field type Set of values":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example create task with set field: custom field type Files":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example create task with set field: custom field type Project":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example create task with set field: custom field type Location":{"value":{"template":{"id":1},"name":"New task name","description":"Task description","customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":1}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":41,"error":"Status not find by id 2"}}}}}}}}},"/task/{id}/comments/list":{"post":{"tags":["Task"],"summary":"Get task comments","operationId":"get-task-comments","description":"This method lets you get a list of comments on a task","parameters":[{"name":"id","in":"path","description":"Number of task","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"id,description","description":"Fields returned - names, comma-delimited"},"typeList":{"type":"string","enum":["Comments","All","New","Deleted"]},"resultOrder":{"type":"array","items":{"type":"object","properties":{"filed":{"type":"string","description":"System field name - *Possible for system fields:* id, dateTime"},"direction":{"type":"string","enum":["Asc","Desc"]}}}}}},"examples":{"example":{"value":{"offset":0,"pageSize":100,"fields":"id,description,recipients","typeList":"Comments","resultOrder":[{"field":"id","direction":"Asc"},{"field":"dateTime","direction":"Desc"}]}}}}}},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"comments":{"type":"array","items":{"$ref":"#/components/schemas/CommentResponse"}}}},"examples":{"Comments from task by id 5":{"value":{"result":"success","comments":[{"id":1,"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","dateTime":{"date":"01-06-2022","time":"12:25","datetime":"2022-06-01T12:25Z"},"type":"Comment","fromType":"None","description":"Text comment","task":{"id":5},"project":{"id":3},"owner":{"id":"user:2","name":"Alex"},"isDeleted":false,"isPinned":false,"isHidden":false,"isNotRead":true,"recipients":{"users":[{"id":"contact:5","name":"Ivan"}],"groups":[{"id":1,"name":"Develop"}]},"reminders":[],"dataTags":[]}]}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1000,"error":"Task not found by id 10"}}}}}}}}},"/task/{id}/comments/":{"post":{"tags":["Task"],"summary":"Add comment","operationId":"post-task-add-comment","description":"This method lets you add a new comment to a task","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"Number of task"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommentCreateRequest"},"examples":{"Add new comment":{"value":{"sourceId":"797f5a94-3689-4ac8-82fd-d749511ea2b2","sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","dateTime":{"date":"12-06-2022","time":"12:15","datetime":"2022-06-12T12:15Z"},"description":"New comment text","owner":{"id":"contact:10"},"isPinned":true,"isHidden":false,"recipients":{"users":[{"id":"user:5"}],"groups":[{"id":1}],"roles":["auditor","assigner"]}}},"Add comment with file":{"value":{"files":[{"id":1245}]}},"Add comment with file and notify recipients":{"value":{"files":[{"id":1245}],"recipients":{"users":[{"id":"user:5"}]}}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":1}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6,"error":"New comments not allowed in this process"}}}}}}}}},"/task/{id}/comments/{commentId}":{"post":{"tags":["Task"],"summary":"Updating comments","operationId":"post-task-update-comment","description":"This method lets you update a comment","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"Number of task"},{"schema":{"type":"integer"},"name":"commentId","in":"path","required":true,"description":"Number of comment"},{"schema":{"type":"boolean","default":"false"},"in":"query","name":"silent","description":"Silent mode"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommentUpdateRequest"},"examples":{"Update exist comment, attach exist file":{"value":{"description":"Text updated","isPinned":true,"recipients":{"users":[{"id":"user:5"}],"groups":[{"id":5}]},"files":[{"id":115234}]}}}}}},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":5000,"error":"Comment not found by id 115"}}}}}}}}},"/task/{id}/datatags/":{"post":{"tags":["Task"],"summary":"Add data tag entry as new comment","operationId":"post-task-add-data-tag-entry-new-comment","description":"This method lets you add data tag entry as new comment","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"Number of task"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataTagEntryCreateRequest"},"examples":{"Add data tag entry as new comment with a custom field type Line":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":10},"value":"Test value"}]}]}},"Add two data tag entry as new comment with a custom field type Date and Period of time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":6},"value":{"date":"11-10-2022"}},{"field":{"id":7},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"Add two data tag entry as new comment with a custom field type Line":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":10},"value":"Test value 1"}]},{"customFieldData":[{"field":{"id":10},"value":"Test value 2"}]}]}},"Add data tag entry as new comment with a custom field type Time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}]}},"Add two data tag entry as new comment with a custom field type Date and time from string":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}]}},"Add two data tag entry as new comment with a custom field type Date and time from object":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}]}},"Add data tag entry as new comment with a custom field type Period of time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"Add data tag entry as new comment with a custom field type type Checkbox":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":70},"value":true}]}]}},"Add data tag entry as new comment with a custom field type Directory entry":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}]}},"Add data tag entry as new comment with a custom field type Directory entry, set empty value":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}]}},"Add data tag entry as new comment with a custom field type Contact by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}]}},"Add data tag entry as new comment with a custom field type Contact by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}]}},"Add data tag entry as new comment with a custom field type Employee by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}]}},"Add data tag entry as new comment with a custom field type Employee by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}]}},"Add data tag entry as new comment with a custom field type Counterparty by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}]}},"Add data tag entry as new comment with a custom field type Counterparty by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}]}},"Add data tag entry as new comment with a custom field type Group, employee, or contact":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}]}},"Add data tag entry as new comment with a custom field type List of users":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}]}},"Add data tag entry as new comment with a custom field type Set of directory values":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}]}},"Add data tag entry as new comment with a custom field type Task":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}]}},"Add data tag entry as new comment with a custom field type Task set":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}]}},"Add data tag entry as new comment with a custom field type Set of values":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}]}},"Add data tag entry as new comment with a custom field type Files":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}]}},"Add data tag entry as new comment with a custom field type Project":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}]}},"Add data tag entry as new comment with a custom field type Location":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}]}}}}},"description":""},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"keys":{"type":"array","items":{"type":"integer"}},"commentId":{"type":"integer"}},"x-examples":{"example-1":{"result":"success","keys":[15,16],"commentId":1520}}},"examples":{"example":{"value":{"result":"success","keys":[15,16],"commentId":1520}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6001,"error":"Error add entry"}}}}}}}}},"/task/{id}/datatags/{commentId}":{"post":{"tags":["Task"],"summary":"Add a data tag entry to an existing comment","operationId":"post-task-add-data-tag-entry-existing-comment","description":"This method lets you add a data tag entry to an existing comment","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"Number of task"},{"schema":{"type":"integer"},"name":"commentId","in":"path","required":true,"description":"Number of comment"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataTagEntryCreateRequest"},"examples":{"Add data tag entry to an existing comment with a custom field type Number":{"value":{"dataTag":{"id":1},"items":[{"customFieldData":[{"field":{"id":20},"value":99}]}]}},"Add data tag entry to an existing comment with a custom field type Date and Period of time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":6},"value":{"date":"11-10-2022"}},{"field":{"id":7},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"Add data tag entry to an existing comment with a custom field type Time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}]}},"Add data tag entry to an existing comment with a custom field type Date and time from string":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}]}},"Add data tag entry to an existing comment with a custom field type Date and time from object":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}]}},"Add data tag entry to an existing comment with a custom field type Period of time":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}]}},"Add data tag entry to an existing comment with a custom field type type Checkbox":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":70},"value":true}]}]}},"Add data tag entry to an existing comment with a custom field type Directory entry":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}]}},"Add data tag entry to an existing comment with a custom field type Directory entry, set empty value":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}]}},"Add data tag entry to an existing comment with a custom field type Contact by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}]}},"Add data tag entry to an existing comment with a custom field type Contact by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}]}},"Add data tag entry to an existing comment with a custom field type Employee by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}]}},"Add data tag entry to an existing comment with a custom field type Employee by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}]}},"Add data tag entry to an existing comment with a custom field type Counterparty by prefixedId":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}]}},"Add data tag entry to an existing comment with a custom field type Counterparty by id":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}]}},"Add data tag entry to an existing comment with a custom field type Group, employee, or contact":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}]}},"Add data tag entry to an existing comment with a custom field type List of users":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}]}},"Add data tag entry to an existing comment with a custom field type Set of directory values":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}]}},"Add data tag entry to an existing comment with a custom field type Task":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}]}},"Add data tag entry to an existing comment with a custom field type Task set":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}]}},"Add data tag entry to an existing comment with a custom field type Set of values":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}]}},"Add data tag entry to an existing comment with a custom field type Files":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}]}},"Add data tag entry to an existing comment with a custom field type Project":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}]}},"Add data tag entry to an existing comment with a custom field type Location":{"value":{"dataTag":{"id":4},"items":[{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}]}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"keys":{"type":"array","items":{"type":"integer"}}},"x-examples":{"example-1":{"result":"success","keys":[15,16]}}},"examples":{"example":{"value":{"result":"success","keys":[15,16]}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6001,"error":"Error add entry"}}}}}}}}},"/task/{id}/files":{"get":{"tags":["Task"],"summary":"Get task files","operationId":"get-task-files","description":"This method lets you get task files","parameters":[{"schema":{"type":"string"},"name":"id","in":"path","required":true,"description":"Number of task"},{"schema":{"type":"boolean","default":"false"},"in":"query","description":"Flag to get files from description only","name":"onlyFromDescription"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileResponse"}}}},"examples":{"example":{"value":{"result":"success","files":[{"id":10,"size":1024,"name":"My first file"},{"id":20,"size":2048,"name":"My second file"}]}}}}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/task/templates":{"get":{"tags":["Task"],"summary":"Get list of task templates","operationId":"get-task-list-templates","description":"This method lets you get a list of all task templates","parameters":[{"name":"offset","description":"Offset from beginning of list","in":"query","schema":{"type":"number","format":"int64","minimum":0,"default":0}},{"name":"pageSize","in":"query","description":"Size of requested list","schema":{"type":"number","format":"int64","maximum":100,"minimum":1,"default":100}},{"schema":{"type":"string"},"in":"query","description":"Unique identifier of external application","name":"sourceId"},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, description, priority, status, processId, resultChecking, type, assigner, parent, object, template, project, counterparty, dateTime, startDateTime, endDateTime, hasStartDate, hasEndDate, hasStartTime, hasEndTime, delayedTillDate, dateOfLastUpdate, duration, durationUnit, durationType, overdue, closeToDeadLine, notAcceptedInTime, inFavorites, isSummary, isSequential, assignees, participants, auditors, recurrence, isDeleted, files, sourceObjectId, sourceDataVersion"}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"templates":{"type":"array","items":{"$ref":"#/components/schemas/TaskResponse"}}}}}}},"400":{"description":"Invalid status value","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/task/recurring":{"get":{"tags":["Task"],"summary":"Get a list of recurring tasks","operationId":"get-task-list-recurring","description":"This method allows you to get a list of recurring tasks.","parameters":[{"name":"offset","description":"Offset from beginning of list","in":"query","schema":{"type":"number","format":"int64","minimum":0,"default":0}},{"name":"pageSize","in":"query","description":"Size of requested list","schema":{"type":"number","format":"int64","maximum":100,"minimum":1,"default":100}},{"schema":{"type":"string"},"in":"query","description":"Unique identifier of external application","name":"sourceId"},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, description, priority, status, processId, resultChecking, type, assigner, parent, object, template, project, counterparty, dateTime, startDateTime, endDateTime, hasStartDate, hasEndDate, hasStartTime, hasEndTime, delayedTillDate, dateOfLastUpdate, duration, durationUnit, durationType, overdue, closeToDeadLine, notAcceptedInTime, inFavorites, isSummary, isSequential, assignees, participants, auditors, recurrence, isDeleted, files, sourceObjectId, sourceDataVersion"}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"tasks":{"type":"array","items":{"$ref":"#/components/schemas/TaskResponse"}}}}}}},"400":{"description":"Invalid status value","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/task/filters":{"post":{"tags":["Task"],"summary":"Get list task filters","operationId":"post-task-filters","description":"This method lets you get list task filters","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/Filter"}}}},"examples":{"example":{"value":{"result":"success","filters":[{"id":":all","name":"All"},{"id":":in","name":"Incoming"},{"id":":audit","name":"Audited"},{"id":"40578","name":"My custom filter","owner":{"id":"user:1","name":"John"}}]}}}}},"headers":{}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/task/{id}/checklist/list":{"post":{"tags":["Task"],"summary":"Get task checklist items","operationId":"get-task-checklist","description":"This method lets you get task checklist items","parameters":[{"name":"id","in":"path","description":"Number of task","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"id,name,parent","description":"Fields returned - names, comma-delimited"}}}}}},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"items":{"type":"array","items":{"$ref":"#/components/schemas/ChecklistItemResponse"}}}},"examples":null}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/comment/{id}":{"get":{"tags":["Comments"],"summary":"Get comment by number","operationId":"get-comment-id","description":"This method lets you get a comment by number","parameters":[{"name":"id","in":"path","description":"Number of comment","required":true,"schema":{"type":"string","example":"4251"}},{"name":"fields","in":"query","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, dateTime, type, fromType, description, task, project, contact, owner, isDeleted, isPinned, isHidden, isNotRead, recipients, reminders, dataTags, files, changeTaskStartDate, changeTaskExpectDate, changeStatus, sourceObjectId, sourceDataVersion","required":false,"style":"form","explode":true,"example":"description,dateTime,10","schema":{"type":"string"}},{"name":"sourceId","in":"query","description":"Unique identifier of external application","required":false,"style":"form","explode":true,"schema":{"type":"string","maximum":100,"format":"uuid"}}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"comment":{"$ref":"#/components/schemas/CommentResponse"}}}}}}}},"delete":{"tags":["Comments"],"summary":"Delete comment","operationId":"delete-comment-id","description":"This method lets you delete a comment by number","parameters":[{"name":"id","in":"path","description":"Number of comment","required":true,"schema":{"type":"string","example":"4251"}}],"responses":{"200":{"description":"OK"}}}},"/datatag/{id}":{"get":{"tags":["Data tags"],"summary":"Get data tag by identifier","operationId":"get-datatag-id","description":"This method lets you get a data tag by its ID","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","description":"Data tag identifier","required":true},{"schema":{"type":"string"},"name":"fields","in":"query","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, group, fields","required":false,"style":"form","explode":true,"example":"id,name,group,fields"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"dataTag":{"$ref":"#/components/schemas/DataTag"}}},"examples":{"example":{"value":{"result":"success","dataTag":{"id":1,"name":"My first data tag","group":{"id":1,"name":"First group"},"fields":[{"id":10,"name":"String field","type":10,"objectType":4}]}}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6000,"error":"Data tag not found by id 13"}}}}}}}}},"/datatag/list":{"post":{"tags":["Data tags"],"summary":"Get data tags","operationId":"get-data-tags","description":"This method lets you get a list of data tags","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"id,name,group,fields","description":"Fields returned - names separated by commas"}}},"examples":{"example":{"value":{"offset":0,"pageSize":100,"fields":"id,name,group,fields"}}}}}},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"dataTags":{"type":"array","items":{"$ref":"#/components/schemas/DataTag"}}},"example":{"value":{"result":"success","dataTag":[{"id":1,"name":"My first data tag","group":{"id":1,"name":"First group"},"fields":[{"id":10,"name":"String field","type":10,"objectType":4}]},{"id":2,"name":"My second data tag","group":{"id":2,"name":"second group"},"fields":[{"id":10,"name":"String field","type":10,"objectType":4}]}]}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/datatag/entry/{key}":{"get":{"tags":["Data tags"],"summary":"Get data tag entry","operationId":"get-datatag-entry-key","description":"This method lets you get a data tag entry by key","parameters":[{"schema":{"type":"integer","example":155},"name":"key","in":"path","required":true,"description":"Key of the data tag entry"},{"name":"fields","in":"query","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* dataTag, key, task, contact, commentId","required":false,"style":"form","explode":true,"example":"key,dataTag,10","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"entry":{"$ref":"#/components/schemas/DataTagEntryResponse"}}},"examples":{"example":{"value":{"result":"success","dataTag":{"id":5,"name":"My data tag","fields":[{"id":10,"name":"Line field","type":10,"objectType":4}]},"key":155,"commentId":159756,"task":{"id":1546,"name":"My task"},"customFieldData":[{"field":{"id":10,"name":"Line field","type":10,"objectType":4},"value":"String value"}]}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6000,"error":"Entry not found by key - 155"}}}}}}}},"post":{"tags":["Data tags"],"summary":"Update data tag entry","operationId":"post-update-data-tag-entry","description":"This method lets you update a data tag entry","parameters":[{"schema":{"type":"integer","example":155},"name":"key","in":"path","required":true,"description":"Key of the data tag entry"},{"schema":{"type":"boolean","default":"false"},"in":"query","name":"silent","description":"Silent mode"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataTagEntryUpdateRequest"},"examples":{"example field update: custom field type Line":{"value":{"customFieldData":[{"field":{"id":10},"value":"Test value"}]}},"example field update: custom field type Number":{"value":{"customFieldData":[{"field":{"id":20},"value":99}]}},"example field update: custom field type Date":{"value":{"customFieldData":[{"field":{"id":30},"value":{"date":"31-12-2022"}}]}},"example field update: custom field type Time":{"value":{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example field update from string: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":"21-12-2023 12:15:00"}]}},"example field update from object: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2023","time":"12:15"}}]}},"example field update: custom field type Period of time":{"value":{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example field update: custom field type Checkbox":{"value":{"customFieldData":[{"field":{"id":70},"value":true}]}},"example field update: custom field type List":{"value":{"customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example field update: custom field type Directory entry":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}},"example field update: custom field type Directory entry, set empty value":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}},"example field update: custom field type Contact by prefixedId":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example field update: custom field type Contact by id":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example field update: custom field type Employee by prefixedId":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example field update: custom field type Employee by id":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example field update: custom field type Counterparty by prefixedId":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example field update: custom field type Counterparty by id":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example field update: custom field type Group, employee, or contact":{"value":{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example field update: custom field type List of users":{"value":{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example field update: custom field type Set of directory values":{"value":{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example field update: custom field type Task":{"value":{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example field update: custom field type Task set":{"value":{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example field update: custom field type Set of values":{"value":{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example field update: custom field type Files":{"value":{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example field update: custom field type Project":{"value":{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example field update: custom field type Location":{"value":{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6002,"error":"Update error"}}}}}}}},"delete":{"tags":["Data tags"],"summary":"Delete data tag entry","operationId":"delete-datatag-entry-key","description":"This method lets you delete a data tag entry by key","parameters":[{"schema":{"type":"integer","example":155},"name":"key","in":"path","required":true,"description":"Key of the data tag entry"}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6,"error":"Access denied for data tag entry by key 13"}}}}}}}}},"/datatag/{id}/entry/list":{"post":{"tags":["Data tags"],"summary":"Get list of data tag entries","operationId":"post-list-data-tag-entries","description":"This method lets you get a list of data tag entries","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"Identifier of data tag"}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"dataTag,key,10","description":"Fields returned - names, comma-delimited"},"taskId":{"type":"integer","format":"int64","default":0,"example":10,"description":"Number of task"},"contactId":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]","description":"Number of contact"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/ComplexDataTagFilter"}}}},"examples":{"example":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,commentId,task,contact,10"}},"example for a specific task":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,10","taskId":5}},"example for a specific contact":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,10","contactId":"contact:12"}},"example: filter by task template and start date":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,3,5","filters":[{"type":12,"operator":"gt","value":{"dateType":"otherDate","dateValue":"01-06-2024"}},{"type":51,"operator":"equal","value":200}]}},"example: filter by task project":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,3,5","filters":[{"type":5,"operator":"equal","value":341}]}},"example: filter by task statuses":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,3,5","filters":[{"type":10,"operator":"equal","value":[1,2]}]}},"example: filter by task process and task counterparty":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,3,5","filters":[{"type":24,"operator":"equal","value":24948},{"type":7,"operator":"equal","value":1713}]}},"example: filter by task object and task assigner":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,3,5","filters":[{"type":325,"operator":"equal","value":[24954]},{"type":1,"operator":"equal","value":"user:2"}]}},"example: filter by custom field Date":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,3,5","filters":[{"type":3101,"field":3,"operator":"equal","value":{"dateType":"otherRange","dateFrom":"15-11-2022","dateTo":"17-11-2022"}}]}},"example: filter by custom field List of users":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,2273","filters":[{"type":3103,"field":2273,"operator":"equal","value":"user:46"}]}},"example: filter by custom field Employee":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,2270","filters":[{"type":3104,"field":2270,"operator":"equal","value":"user:46"}]}},"example: filter by custom field Directory entry":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,5","filters":[{"type":3105,"field":5,"operator":"equal","value":"47 // Directory entry key"}]}},"example: filter by custom field Counterparty":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,155","filters":[{"type":3106,"field":155,"operator":"equal","value":"contact:12"}]}},"example: filter by custom field Contact":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,156","filters":[{"type":3116,"field":156,"operator":"equal","value":"contact:15"}]}},"example: filter by custom field Task":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,9729","filters":[{"type":3117,"field":9729,"operator":"equal","value":15}]}},"example: filter by custom field Line":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,9682","filters":[{"type":3108,"field":9682,"operator":"equal","value":"Test value"}]}},"example: filter by custom field Number":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,9676","filters":[{"type":3109,"field":9676,"operator":"equal","value":535}]}},"example: filter by custom field Group, employee or contact":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,9655","filters":[{"type":3111,"field":9655,"operator":"equal","value":"group:5"}]}},"example: filter by custom field Checkbox":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,9708","filters":[{"type":3115,"field":9708,"operator":"equal","value":true}]}},"example: filter by custom field Date and Employee":{"value":{"offset":0,"pageSize":100,"fields":"dataTag,key,3,2273","filters":[{"type":3101,"field":3,"operator":"equal","value":{"dateType":"otherRange","dateFrom":"15-11-2022","dateTo":"17-11-2022"}},{"type":3104,"field":2273,"operator":"equal","value":"user:46"}]}}}}}},"responses":{"200":{"description":"OK","headers":{},"content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"dataTagEntries":{"type":"array","items":{"$ref":"#/components/schemas/DataTagEntryResponse"}}}},"examples":{"example":{"value":{"result":"string","dataTagEntries":[{"dataTag":{"id":0,"name":"string","group":{"id":0,"name":"string"},"fields":[{"id":0,"name":"string","type":0,"objectType":0,"groupId":0,"directoryId":0,"directoryFields":[0],"enumValues":["string"]}]},"key":0,"commentId":0,"task":{"id":0,"name":"string"},"customFieldData":[{"field":{"id":0,"name":"string","type":0,"objectType":0,"groupId":0,"directoryId":0,"directoryFields":[0],"enumValues":["string"]},"value":{}}]}]}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/file/{id}":{"get":{"tags":["File"],"summary":"Get file by identifier","operationId":"get-file-id","description":"This method lets you get a file by its ID","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"File identifier"},{"name":"fields","in":"query","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, size, downloadUrl","required":false,"style":"form","explode":true,"example":"name,size","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"file":{"$ref":"#/components/schemas/FileResponse"}}},"examples":{"example":{"value":{"result":"success","file":{"id":10,"size":1024,"name":"My file"}}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":7000,"error":"File not found by id 13"}}}}}}}},"post":{"tags":["File"],"summary":"Update file","operationId":"post-file-update","description":"This method lets you update a file name","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"File identifier"}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","required":["name"]}}},"examples":{"example of update a file name":{"value":{"name":"Main file - New"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"}}},"examples":{"example":{"value":{"result":"success"}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"file","code":6,"error":"Access denied for file by id - 13"}}}}}}}},"delete":{"tags":["File"],"summary":"Delete file","operationId":"delete-file-id","description":"This method lets you delete a file by its ID","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"File identifier"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"}}},"examples":{"example":{"value":{"result":"success"}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"file","code":7000,"error":"File not found by id 13"}}}}}}}}},"/file/{id}/download":{"get":{"tags":["File"],"summary":"Download file","operationId":"get-file-id-download","description":"This method lets you download file","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"File identifier"}],"responses":{"302":{"description":"Redirects to a download location","headers":{"Location":{"description":"URL to download the file","schema":{"type":"string"}}},"content":{"application/gzip":{"schema":{"type":"string","format":"binary"},"example":"Binary content of file in gzip format"},"application/octet-stream":{"schema":{"type":"string","format":"binary"},"example":"Binary content of file in generic binary format"}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":7000,"error":"File not found by id"}}}}}}}}},"/file/{id}/attach/task":{"post":{"tags":["File"],"summary":"Attach file to task","operationId":"attach-file-to-task","description":"This method lets you attach file to target task","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"File identifier"},{"schema":{"type":"integer"},"in":"query","name":"id","required":true,"description":"Number of task"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"}}},"examples":{"example":{"value":{"result":"success"}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6,"error":"Access denied for task by id - 10"}}}}}}}}},"/file/{id}/attach/contact":{"post":{"tags":["File"],"summary":"Attach file to contact","operationId":"attach-file-to-contact","description":"This method lets you attach file to target contact","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"File identifier"},{"schema":{"type":"integer"},"in":"query","name":"id","required":true,"description":"Number of contact"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"}}},"examples":{"example":{"value":{"result":"success"}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6,"error":"Access denied for contact by id - 20"}}}}}}}}},"/file/{id}/attach/project":{"post":{"tags":["File"],"summary":"Attach file to project","operationId":"attach-file-to-project","description":"This method lets you attach file to target project","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"File identifier"},{"schema":{"type":"integer"},"in":"query","name":"id","required":true,"description":"Number of project"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"}}},"examples":{"example":{"value":{"result":"success"}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6,"error":"Access denied for project by id - 5"}}}}}}}}},"/file/":{"post":{"tags":["File"],"summary":"Upload file","operationId":"post-file-upload","description":"This method lets you upload file to Planfix","requestBody":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"description":"File for upload","type":"string","format":"binary"}},"required":["file"]},"examples":{}}},"description":""},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"id":{"type":"integer"}}},"examples":{"example":{"value":{"result":"success","id":124}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":7001,"error":"Rest API error upload file my file"}}}}}}}}},"/file/from-url/":{"post":{"tags":["File"],"summary":"Upload file by link","operationId":"post-file-upload-by-url","description":"This method lets you upload a file to Planfix using a link","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileUploadRequest"},"examples":{"example":{"value":{"name":"My upload file","url":"https://cloud.my/69582925112467.jpg"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"id":{"type":"integer"}}},"examples":{"example":{"value":{"result":"success","id":147}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":7002,"error":"Rest API error"}}}}}}}}},"/project/{id}":{"get":{"tags":["Project"],"summary":"Get project by number","operationId":"get-project-by-id","description":"This method lets you get a project by number","parameters":[{"name":"id","in":"path","description":"Number of project","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"name":"fields","in":"query","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, description, status, owner, parent, template, group, counterparty, startDate, endDate, hiddenForEmployees, hiddenForClients, overdue, isCloseToDeadline, hasEndDate, assignees, participants, auditors, clientManagers, isDeleted, sourceObjectId, sourceDataVersion","required":false,"style":"form","explode":true,"example":"id,name,description,10","schema":{"type":"string"}},{"$ref":"#/components/parameters/sourceId"}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"project":{"$ref":"#/components/schemas/ProjectResponse"}}},"examples":{"example":{"value":{"result":"success","project":{"id":5,"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","name":"My project","description":"Test","status":{"id":1},"owner":{"id":"user:5","name":"Mark"},"parent":{"id":1},"template":{"id":2},"group":{"id":1,"name":"Project group"},"counterparty":{"id":"contact:2","name":"Djon"},"startDate":{"date":"01-12-2022","time":"00:00","datetime":"2022-12-01T00:00Z"},"endDate":{"date":"01-12-2023","time":"00:00","datetime":"2023-12-01T00:00Z"},"hiddenForEmployees":true,"hiddenForClients":true,"overdue":true,"isCloseToDeadline":true,"hasEndDate":true,"assignees":{"users":[{"id":"user:5","name":"Alex"}],"groups":[{"id":1,"name":"Developers"}]},"participants":{"users":[{"id":"user:5","name":"Alex"}],"groups":[{"id":1,"name":"Developers"}]},"auditors":{"users":[{"id":"user:5","name":"Alex"}],"groups":[{"id":1,"name":"Developers"}]},"clientManagers":{"users":[{"id":"user:5","name":"Alex"}]},"isDeleted":false,"customFieldData":[{"field":{"id":1,"name":"Line","type":0,"objectType":3,"groupId":0},"value":"Test string value"}]}}},"example for fields: name,description,10 (id project custom field type Line)":{"value":{"result":"success","project":{"id":5,"name":"Project name","description":"Project description","customFieldData":[{"field":{"id":10,"name":"My test string field","type":0,"objectType":3},"value":"Test value"}]}}},"example for fields: name,startDate,20 (id project custom field type Number)":{"value":{"result":"success","project":{"id":5,"name":"Project name","startDate":{"date":"01-12-2022","time":"00:00","datetime":"2022-12-01T00:00Z"},"customFieldData":[{"field":{"id":20,"name":"My test number field","type":1,"objectType":3},"value":99}]}}},"example for field: 30 (id project custom field type Date)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":30,"name":"My test date field","type":3,"objectType":3},"value":{"date":"11-11-2021","time":"00:00","datetime":"2021-11-11T00:00Z"}}]}}},"example for field: 40 (id project custom field type Time)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":40,"name":"My test time field","type":4,"objectType":3},"value":{"time":"17:50"}}]}}},"example for field: 50 (id project custom field type Date and time)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":50,"name":"Date and time","type":5,"objectType":3,"groupId":9},"value":{"datetime":"2023-05-31T03:10Z","date":"31-05-2023","time":"03:10"},"stringValue":"31-05-2023 03:10"}]}}},"example for field: 60 (id project custom field type Period of time)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":60,"name":"My test time period field","type":6,"objectType":3},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}}},"example for field: 70 (id project custom field type Checkbox)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":70,"name":"My test checkbox field","type":7,"objectType":3},"value":true}]}}},"example for field: 80 (id project custom field type List)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":80,"name":"My test enum field","type":8,"objectType":3},"value":"Enum value"}]}}},"example for field: 90 (id project custom field type Directory entry)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":90,"name":"My test directory entry field","type":9,"objectType":3,"directoryId":10},"value":{"id":2,"value":"Item value"}}]}}},"example for field: 100 (id project custom field type Contact)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":100,"name":"My test counterparty field","type":10,"objectType":3},"value":{"id":"contact:5","name":"Ivanov Ivan"}}]}}},"example for field: 110 (id project custom field type Employee)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":110,"name":"My test employee field","type":11,"objectType":3},"value":{"id":"user:3","name":"Petrov Petr"}}]}}},"example for field: 120 (id project custom field type Counterparty)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":120,"name":"My test counterparty field","type":12,"objectType":1},"value":{"id":"contact:10","name":"Ivanov Ivan"}}]}}},"example for field: 130 (id project custom field type Group, employee, or contact)":{"value":{"result":"success","project":{"id":10,"customFieldData":[{"field":{"id":130,"name":"My test group, employee, or contact field","type":13,"objectType":3},"value":{"id":"user:1","name":"Petrov Petr"}}]}}},"example for field: 140 (id project custom field type List of users)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":140,"name":"My test list of users field","type":14,"objectType":3},"value":[{"id":"user:1","name":"Petrov Petr"},{"id":"contact:7","name":"Ivanov Ivan"},{"id":"group:5","name":"Work group"}]}]}}},"example for field: 150 (id project custom field type Set of directory values)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":150,"name":"My test set of directory values field","type":15,"objectType":3,"directoryId":10},"value":[{"id":1,"value":"Item value one"},{"id":2,"value":"Item value two"},{"id":3,"value":"Item value three"}]}]}}},"example for field: 160 (id project custom field type Task)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":160,"name":"My test task field","type":16,"objectType":3},"value":{"id":111,"name":"My task"}}]}}},"example for field: 170 (id project custom field type Task set)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":170,"name":"My test task set field","type":17,"objectType":3},"value":[{"id":111,"name":"My task 1"},{"id":112,"name":"My task 2"},{"id":113,"name":"My task 3"}]}]}}},"example for field: 200 (id project custom field type Set of values)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":200,"name":"My test set of values field","type":20,"objectType":3},"value":["First element","Two element","Three element"]}]}}},"example for field: 210 (id project custom field type Files)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":210,"name":"My test files field","type":21,"objectType":3},"value":[204308,205305]}]}}},"example for field: 220 (id project custom field type Project)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":220,"name":"My test project field","type":22,"objectType":3},"value":{"id":5,"name":"My project"}}]}}},"example for field: 230 (id project custom field type Data tag summaries)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":230,"name":"My test data tag summaries field","type":23,"objectType":3},"value":{"id":1.2}}]}}},"example for field: 240 (id project custom field type Calculated field)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":240,"name":"My test calculated field","type":24,"objectType":3},"value":{"id":"Formula result"}}]}}},"example for field: 250 (id project custom field type Location)":{"value":{"result":"success","project":{"id":5,"customFieldData":[{"field":{"id":250,"name":"My test location field","type":25,"objectType":3},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}}},"400":{"description":"Invalid status value","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}},"post":{"tags":["Project"],"summary":"Update project by number","operationId":"post-project-by-id","description":"This method lets you update the project data by number","parameters":[{"name":"id","in":"path","description":"Number of project","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"schema":{"type":"boolean","default":false},"in":"query","name":"silent","description":"Silent mode"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectUpdateRequest"},"examples":{"example name update":{"value":{"name":"New project name"}},"example description update":{"value":{"name":"New project description"}},"example status update":{"value":{"status":{"id":6}}},"example owner and assignees update":{"value":{"owner":{"id":"user:1"},"assignees":{"users":[{"id":"user:5"},{"id":"contact:1"}],"groups":[{"id":3}]}}},"example update counterparty":{"value":{"counterparty":{"id":5}}},"example end date update from object":{"value":{"endDate":{"date":"01-02-2023"}}},"example end date update from string":{"value":{"endDate":"01-02-2023"}},"example end date update set empty value":{"value":{"hasEndDate":false}},"example field update: custom field type Line":{"value":{"customFieldData":[{"field":{"id":10},"value":"Test value"}]}},"example field update: custom field type Number":{"value":{"customFieldData":[{"field":{"id":20},"value":99}]}},"example field update: custom field type Date":{"value":{"customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}},"example field update: custom field type Time":{"value":{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example field update from string: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example field update frpm object: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":{"date":"12-12-2021","time":"12:15"}}]}},"example field update: custom field type Period of time":{"value":{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example field update: custom field type Checkbox":{"value":{"customFieldData":[{"field":{"id":70},"value":true}]}},"example field update: custom field type List":{"value":{"customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example field update: custom field type Directory entry":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}},"example field update: custom field type Directory entry, set empty value":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}},"example field update: custom field type Contact by prefixedId":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example field update: custom field type Contact by id":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example field update: custom field type Employee by prefixedId":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example field update: custom field type Employee by id":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example field update: custom field type Counterparty by prefixedId":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example field update: custom field type Counterparty by id":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example field update: custom field type Group, employee, or contact":{"value":{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example field update: custom field type List of users":{"value":{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example field update: custom field type Set of directory values":{"value":{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example field update: custom field type Task":{"value":{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example field update: custom field type Task set":{"value":{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example field update: custom field type Set of values":{"value":{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example field update: custom field type Files":{"value":{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example field update: custom field type Project":{"value":{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example field update: custom field type Location":{"value":{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"failures":{"type":"array","items":{"type":"object","properties":{"field":{"type":"string"},"error":{"type":"string"}}}}}},"examples":{"example":{"value":{"failures":{"field":"name","error":"Field change failed"}}}}}}},"404":{"description":"Project not found","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":3000,"error":"Project for update not found by id 1"}}}}}},"405":{"description":"Method Not Allowed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":5,"error":"Scope denied, method not allowed"}}}}}}}}},"/project/list":{"post":{"tags":["Project"],"summary":"Get list of projects","operationId":"get-project-list","description":"This method lets you get a list of projects","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"id,name,description,10","description":"Fields returned - custom field identifiers, system field names, comma-delimited"},"sourceId":{"type":"string","maximum":100,"description":"Unique identifier of external application","format":"uuid"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/ComplexProjectFilter"}}}},"encoding":{"historyMetadata":{"contentType":"plain/text; charset=utf-8"}},"examples":{"example: filter by name":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5001,"operator":"equal","value":"My project"}],"fields":"id,name,description"}},"example: filter by group":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5002,"operator":"equal","value":1666}],"fields":"id,name,group"}},"example: filter by start date":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5013,"operator":"equal","value":{"dateType":"otherDate","dateValue":"23-03-2022"}}],"fields":"id,name,description,startDate","sourceId":"797f5a94-3689-4ac8-82fd-d749511ea2b2"}},"example: filter by end date":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5005,"operator":"equal","value":{"dateType":"yesterday"}}],"fields":"id,name,description,endDate"}},"example: filter by owner":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5004,"operator":"equal","value":"user:1"}],"fields":"id,name,description,owner"}},"example: filter by assignees":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5011,"operator":"equal","value":"contact:5"}],"fields":"id,name,description,assignees"}},"example: filter by auditors":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5012,"operator":"equal","value":"group:1"}],"fields":"id,name,description,auditors"}},"example: filter by counterparty":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5003,"operator":"equal","value":3}],"fields":"id,name,description,counterparty"}},"example: filter by status":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5006,"operator":"equal","value":2}],"fields":"id,name,description,status"}},"example: filter by number":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5007,"operator":"equal","value":15}],"fields":"id,name,description"}},"example: filter by some numbers":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5007,"operator":"equal","value":[15,17]}],"fields":"id,name,description"}},"example: filter by client manager":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5008,"operator":"equal","value":"user:3"}],"fields":"id,name,clientManagers"}},"example: filter by template":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5010,"operator":"equal","value":1510}],"fields":"id,name,template"}},"example: filter by parent project":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5014,"operator":"equal","value":1496}],"fields":"id,name,parent"}},"example: filter by custom field Employee":{"value":{"offset":0,"pageSize":100,"filters":[{"type":5109,"operator":"equal","value":"user:3","field":35}],"fields":"id,name,description,35"}},"example: filter by custom field Date":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,36","filters":[{"type":5103,"field":36,"operator":"equal","value":{"dateType":"otherRange","dateFrom":"15-11-2022","dateTo":"17-11-2022"}}]}},"example: filter by custom field List of users":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,37","filters":[{"type":5113,"field":37,"operator":"equal","value":"user:46"}]}},"example: filter by custom field Directory entry":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,38","filters":[{"type":5107,"field":38,"operator":"equal","value":"47 // Directory entry key"}]}},"example: filter by custom field Counterparty":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,139","filters":[{"type":5110,"field":39,"operator":"equal","value":"contact:12"}]}},"example: filter by custom field Contact":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,40","filters":[{"type":5108,"field":40,"operator":"equal","value":"contact:15"}]}},"example: filter by custom field Line":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,41","filters":[{"type":5101,"field":41,"operator":"equal","value":"Test value"}]}},"example: filter by custom field Number":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,42","filters":[{"type":5102,"field":42,"operator":"equal","value":535}]}},"example: filter by custom field Data and custom field Employee":{"value":{"offset":0,"pageSize":100,"fields":"id,name,description,36,35","filters":[{"type":5103,"field":36,"operator":"equal","value":{"dateType":"otherRange","dateFrom":"15-11-2022","dateTo":"17-11-2022"}},{"type":5109,"operator":"equal","value":"user:3","field":35}]}}}}}},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"projects":{"type":"array","items":{"$ref":"#/components/schemas/ProjectResponse"}}}},"examples":{"example":{"value":{"result":"string","projects":[{"result":"success","project":{"id":5,"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","name":"My project","description":"Test","status":{"id":1},"owner":{"id":"user:5","name":"Mark"},"parent":{"id":1},"template":{"id":2},"group":{"id":1,"name":"Project group"},"counterparty":{"id":"contact:2","name":"Djon"},"startDate":{"date":"01-12-2022","time":"00:00","datetime":"2022-12-01T00:00Z"},"endDate":{"date":"01-12-2023","time":"00:00","datetime":"2023-12-01T00:00Z"},"hiddenForEmployees":true,"hiddenForClients":true,"overdue":true,"isCloseToDeadline":true,"hasEndDate":true,"assignees":{"users":[{"id":"user:5","name":"Alex"}],"groups":[{"id":1,"name":"Developers"}]},"participants":{"users":[{"id":"user:5","name":"Alex"}],"groups":[{"id":1,"name":"Developers"}]},"auditors":{"users":[{"id":"user:5","name":"Alex"}],"groups":[{"id":1,"name":"Developers"}]},"clientManagers":{"users":[{"id":"user:5","name":"Alex"}]},"isDeleted":false,"customFieldData":[{"field":{"id":1,"name":"Line","type":0,"objectType":3,"groupId":0},"value":"Test string value"}]}}]}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":30,"error":"Rest API error"}}}}}}}}},"/project/":{"post":{"tags":["Project"],"summary":"Create project","operationId":"post-project","description":"This method lets you create a new project","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProjectRequest"},"examples":{"example create project":{"value":{"name":"My new project","description":"Project description","status":{"id":1},"owner":{"id":"user:1"},"template":{"id":1},"group":{"id":5},"counterparty":{"id":"contact:3"},"assignees":{"users":[{"id":"user:3"}],"groups":[{"id":4}]},"participants":{"users":[{"id":"contact:5"},{"id":"user:5"}]},"clientManagers":{"users":[{"id":"user:1"}]},"customFieldData":[]}},"example create project, set assigner and assignees":{"value":{"name":"My new project","description":"Project description","assigner":{"id":"user:1"},"assignees":{"users":[{"id":"user:5"},{"id":"contact:1"}],"groups":[{"id":3}]}}},"example create project, set counterparty":{"value":{"name":"My new project","description":"Project description","counterparty":{"id":5}}},"example create project, set status":{"value":{"name":"My new project","description":"Project description","status":{"id":8}}},"example create project, set parent":{"value":{"name":"My new project","description":"Project description","parent":{"id":1}}},"example create project, set group":{"value":{"name":"My new project","description":"Project description","group":{"id":4}}},"example create project, set overdue":{"value":{"name":"My new project","description":"Project description","overdue":true}},"example create project, set dates from object":{"value":{"name":"My new project","description":"Project description","startDateTime":{"date":"01-01-2023"},"endDateTime":{"date":"01-02-2023"}}},"example create project, set dates from string":{"value":{"name":"My new project","description":"Project description","startDateTime":"01-01-2023","endDateTime":"01-02-2023"}},"example create project, set files":{"value":{"name":"My new project","description":"Project description","files":[{"id":10},{"id":15}]}},"example create project with set field: custom field type Line":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":10},"value":"Test string"}]}},"example create project with set field: custom field type Number":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":20},"value":99}]}},"example create project with set field: custom field type Date":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}},"example create project with set field: custom field type Time":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example create project with set field from string: custom field type Date and time":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":50},"value":"21-12-2023 12:15:00"}]}},"example create project with set field from object: custom field type Date and time":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2023","time":"12:15"}}]}},"example create project with set field: custom field type Period of time":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example create project with set field: custom field type Checkbox":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":70},"value":true}]}},"example create project with set field: custom field type List":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example create project with set field: custom field type Directory entry":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":90},"value":{"id":2}}]}},"example create project with set field: custom field type Contact by prefixedId":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example create project with set field: custom field type Contact by id":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example create project with set field: custom field type Employee by prefixedId":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example create project with set field: custom field type Employee by id":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example create project with set field: custom field type Counterparty by prefixedId":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example create project with set field: custom field type Counterparty by id":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example create project with set field: custom field type Group, employee, or contact":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example create project with set field: custom field type List of users":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example create project with set field: custom field type Set of directory entry":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example create project with set field: custom field type Task":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example create project with set field: custom field type Task set":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example create project with set field: custom field type Set of values":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example create project with set field: custom field type Files":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example create project with set field: custom field type Project":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example create project with set field: custom field type Location":{"value":{"template":{"id":1},"name":"New project name","description":"Project description","customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":1}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":3001,"error":"Rest API error"}}}}}}}}},"/project/{id}/files":{"get":{"tags":["Project"],"summary":"Get project files","operationId":"get-project-files","description":"This method lets you get project files","parameters":[{"schema":{"type":"string"},"name":"id","in":"path","required":true,"description":"Number of project"},{"schema":{"type":"number","minimum":1,"maximum":100,"default":100},"in":"query","name":"pageSize","description":"Size of requested list"},{"schema":{"type":"number","minimum":0,"default":0},"in":"query","name":"offset","description":"Offset from beginning of list"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileResponse"}}}},"examples":{"example":{"value":{"result":"success","files":[{"id":10,"size":1024,"name":"My first file"},{"id":20,"size":2048,"name":"My second file"}]}}}}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/project/templates":{"get":{"tags":["Project"],"summary":"Get list of project templates","operationId":"get-project-list-templates","description":"This method lets you get a list of all project templates","parameters":[{"name":"offset","description":"Offset from beginning of list","in":"query","schema":{"type":"number","format":"int64","minimum":0,"default":0}},{"name":"pageSize","in":"query","description":"Size of requested list","schema":{"type":"number","format":"int64","maximum":100,"minimum":1,"default":100}},{"schema":{"type":"string"},"in":"query","description":"Unique identifier of external application","name":"sourceId"},{"schema":{"type":"string","example":"name,description,10"},"in":"query","name":"fields","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, description, status, owner, parent, template, group, counterparty, startDate, endDate, hiddenForEmployees, hiddenForClients, overdue, isCloseToDeadline, hasEndDate, assignees, participants, auditors, clientManagers, isDeleted, sourceObjectId, sourceDataVersion"}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"templates":{"type":"array","items":{"$ref":"#/components/schemas/ProjectResponse"}}}}}}},"400":{"description":"Invalid status value","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/project/groups":{"get":{"tags":["Project"],"summary":"Get list of project groups","operationId":"get-project-groups","description":"This method lets you get a list of project groups","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name","example":"id,name"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupResponse"}}}},"examples":{"example":{"value":{"result":"success","groups":[{"id":1,"name":"My project group"}]}}}}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/user/{id}":{"get":{"tags":["Employee"],"summary":"Get employee by number","operationId":"get-user-id","description":"This method lets you get an employee by number","parameters":[{"schema":{"type":"string","example":"user:1 OR 1","pattern":"[a-zA-Z:0-9]"},"name":"id","in":"path","description":"Number of employee","required":true},{"name":"fields","in":"query","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, midname, lastname, gender, isDeleted, birthDate, groups, role, login, email, secondaryEmails, telegramId, telegram, status, phones, customFieldData, languageCode, position, sourceObjectId, sourceDataVersion","required":false,"style":"form","explode":true,"example":"id,name,description,10","schema":{"type":"string"}},{"schema":{"type":"string"},"in":"query","name":"sourceId","description":"Unique identifier of external application"}],"responses":{"200":{"description":"OK","headers":{},"content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"user":{"$ref":"#/components/schemas/UserResponse"}}},"examples":{"example for fields: name,midname,lastname,10 (id employee custom field type Line)":{"value":{"result":"success","user":{"id":1,"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":10,"name":"My test line field","type":0,"objectType":6},"value":"Test value"}]}}},"example for fields: name,birthDate,20 (id employee custom field type Number)":{"value":{"result":"success","user":{"id":1,"name":"Ivan","birthDate":{"date":"01-12-1995","time":"00:00","datetime":"1995-12-01T00:00Z"},"customFieldData":[{"field":{"id":20,"name":"My test number field","type":1,"objectType":6},"value":99}]}}},"example for fields: 30 (id employee custom field type Date)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":30,"name":"My test date field","type":3,"objectType":6},"value":{"date":"11-11-2021","time":"00:00","datetime":"2021-11-11T00:00Z"}}]}}},"example for field: 40 (id employee custom field type Time)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":40,"name":"My test time field","type":4,"objectType":6},"value":{"time":"17:50"}}]}}},"example for field: 50 (id employee custom field type Date and time)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":50,"name":"My test date and time field","type":5,"objectType":6},"value":{"date":"21-12-2021","time":"12:15"}}]}}},"example for field: 60 (id employee custom field type Period of time)":{"value":{"result":"success","couserntact":{"id":1,"customFieldData":[{"field":{"id":60,"name":"My test time period field","type":6,"objectType":6},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}}},"example for field: 70 (id employee custom field type Checkbox)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":70,"name":"My test checkbox field","type":7,"objectType":6},"value":true}]}}},"example for field: 80 (id employee custom field type List)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":80,"name":"My test enum field","type":8,"objectType":6},"value":"Enum value"}]}}},"example for field: 90 (id employee custom field type Directory entry)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":90,"name":"My test directory entry field","type":9,"objectType":6,"directoryId":10},"value":{"id":2,"value":"Item value"}}]}}},"example for field: 100 (id employee custom field type Contact)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":100,"name":"My test counterparty field","type":10,"objectType":6},"value":{"id":"contact:5","name":"Ivanov Ivan"}}]}}},"example for field: 110 (id employee custom field type Employee)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":110,"name":"My test employee field","type":11,"objectType":3},"value":{"id":"user:3","name":"Petrov Petr"}}]}}},"example for field: 120 (id employee custom field type Counterparty)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":120,"name":"My test counterparty field","type":12,"objectType":6},"value":{"id":"contact:10","name":"Ivanov Ivan"}}]}}},"example for field: 130 (id employee custom field type Group, employee, or contact)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":130,"name":"My test group, employee, or contact field","type":13,"objectType":6},"value":{"id":"user:1","name":"Petrov Petr"}}]}}},"example for field: 140 (id employee custom field type List of users)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":140,"name":"My test list of users field","type":14,"objectType":6},"value":[{"id":"user:1","name":"Petrov Petr"},{"id":"contact:7","name":"Ivanov Ivan"},{"id":"group:5","name":"Work group"}]}]}}},"example for field: 150 (id employee custom field type Set of directory values)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":150,"name":"My test set of directory values field","type":15,"objectType":6,"directoryId":10},"value":[{"id":1,"value":"Item value one"},{"id":2,"value":"Item value two"},{"id":3,"value":"Item value three"}]}]}}},"example for field: 160 (id employee custom field type Task)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":160,"name":"My test task field","type":16,"objectType":6},"value":{"id":111,"name":"My task"}}]}}},"example for field: 170 (id employee custom field type Task set)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":170,"name":"My test task set field","type":17,"objectType":6},"value":[{"id":111,"name":"My task 1"},{"id":112,"name":"My task 2"},{"id":113,"name":"My task 3"}]}]}}},"example for field: 200 (id employee custom field type Set of values)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":200,"name":"My test set of values field","type":20,"objectType":6},"value":["First element","Two element","Three element"]}]}}},"example for field: 210 (id employee custom field type Files)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":210,"name":"My test files field","type":21,"objectType":6},"value":[204308,205305]}]}}},"example for field: 220 (id employee custom field type Project)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":220,"name":"My test project field","type":22,"objectType":6},"value":{"id":5,"name":"My project"}}]}}},"example for field: 230 (id employee custom field type Data tag summaries)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":230,"name":"My test data tag summaries field","type":23,"objectType":6},"value":{"id":1.2}}]}}},"example for field: 240 (id employee custom field type Calculated field)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":240,"name":"My test calculated field","type":24,"objectType":6},"value":{"id":"Formula result"}}]}}},"example for field: 250 (id employee custom field type Location)":{"value":{"result":"success","user":{"id":1,"customFieldData":[{"field":{"id":250,"name":"My test location field","type":25,"objectType":6},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example-1":{"value":{"result":"fail","code":4000,"error":"Employee for update not found by id - 1"}}}}}}}},"post":{"tags":["Employee"],"summary":"Update employee by number","operationId":"post-user-id","description":"This method lets you update an employee by number","parameters":[{"schema":{"type":"string","example":"user:1 OR 1","pattern":"[a-zA-Z:0-9]"},"name":"id","in":"path","description":"Number of employee","required":true},{"schema":{"type":"boolean","default":false},"in":"query","name":"silent","description":"Silent mode"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRequest"},"examples":{"example update: name, groups, role and email":{"value":{"name":"Ivan","groups":[{"id":2}],"role":"User","email":"new@example.com"}},"example update: gender, birthDate":{"value":{"gender":"Male","birthDate":{"date":"01-12-2000","time":"00:00","datetime":"2000-12-01T00:00Z"}}},"example update language":{"value":{"languageCode":"En"}},"example update position by id":{"value":{"position":{"id":23}}},"example update position by name":{"value":{"position":{"name":"manager"}}},"example update position set empty":{"value":{"position":{"id":0}}},"example field update: custom field type Line":{"value":{"customFieldData":[{"field":{"id":10},"value":"Test value"}]}},"example field update: custom field type Number":{"value":{"customFieldData":[{"field":{"id":20},"value":99}]}},"example field update: custom field type Date":{"value":{"customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}},"example field update: custom field type Time":{"value":{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example field update from string: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example field update from object: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}},"example field update: custom field type Period of time":{"value":{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example field update: custom field type Checkbox":{"value":{"customFieldData":[{"field":{"id":70},"value":true}]}},"example field update: custom field type List":{"value":{"customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example field update: custom field type Directory entry":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}},"example field update: custom field type Directory entry, set empty value":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}},"example field update: custom field type Contact by prefixedId":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example field update: custom field type Contact by id":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example field update: custom field type Employee by prefixedId":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example field update: custom field type Employee by id":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example field update: custom field type Counterparty by prefixedId":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example field update: custom field type Counterparty by id":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example field update: custom field type Group, employee, or contact":{"value":{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example field update: custom field type List of users":{"value":{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example field update: custom field type Set of directory values":{"value":{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example field update: custom field type Task":{"value":{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example field update: custom field type Task set":{"value":{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example field update: custom field type Set of values":{"value":{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example field update: custom field type Files":{"value":{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example field update: custom field type Project":{"value":{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example field update: custom field type Location":{"value":{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"failures":{"type":"array","items":{"type":"object","properties":{"field":{"type":"string"},"error":{"type":"string"}}}}}},"examples":{"example":{"value":{"failures":{"field":"position","error":"Position not found by name - manager"}}}}}}},"404":{"description":"Employee not found","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":4000,"error":"Employee not found by id - 1"}}}}}},"405":{"description":"Method Not Allowed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":5,"error":"Scope denied, method not allowed"}}}}}}}}},"/user/list":{"post":{"tags":["Employee"],"summary":"Get list of employees","operationId":"get-user-list","description":"This method lets you get a list of employees","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"onlyActive":{"type":"boolean","description":"Flag for retrieving only active employees","default":false},"prefixedId":{"type":"boolean","description":"Flag for retrieving id with a prefix"},"fields":{"type":"string","example":"id,name,description,10","description":"Fields returned - custom field identifiers, system field names, comma-delimited"},"sourceId":{"type":"string","maximum":100,"description":"Unique identifier of external application","format":"uuid"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/ComplexUserFilter"}}}},"encoding":{"historyMetadata":{"contentType":"plain/text; charset=utf-8"}},"examples":{"example: without filter":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname"}},"example: to get an id with a prefix":{"value":{"offset":0,"pageSize":100,"prefixedId":true,"fields":"id"}},"example: filter by group":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,group","filters":[{"type":9001,"operator":"equal","value":10}]}},"example: filter by phone":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,phone","filters":[{"type":9002,"operator":"equal","value":"+1052456789"}]}},"example: filter by extension number":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,extensionNumber","filters":[{"type":9004,"operator":"equal","value":"456789"}]}},"example: filter by external email":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,email","filters":[{"type":9003,"operator":"equal","value":"test@email.com"}]}},"example: filter by birth date":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,birthDate","filters":[{"type":9120,"operator":"equal","value":{"dateType":"otherDate","dateValue":"01-12-2002"}}]}},"example: filter by position name as string":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,position","filters":[{"type":9005,"operator":"equal","value":"manager"}]}},"example: filter by position name as object":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,position","filters":[{"type":9005,"operator":"equal","value":{"name":"manager"}}]}},"example: filter by position id as number":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,position","filters":[{"type":9127,"operator":"equal","value":23}]}},"example: filter by position id as object":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,position","filters":[{"type":9127,"operator":"equal","value":{"id":23}}]}},"example: filter by part of name":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":9006,"operator":"equal","value":"Ivanov Ivan Ivanovich"}]}},"example: filter by first name":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":9121,"operator":"equal","value":"Ivan"}]}},"example: filter by middle name":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":9122,"operator":"equal","value":"Ivanovich"}]}},"example: filter by last name":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":9123,"operator":"equal","value":"Ivanov"}]}},"example: filter by telegramId":{"value":{"offset":0,"pageSize":100,"fields":"id,name,telegramId","filters":[{"type":9126,"operator":"equal","value":123456}]}},"example: filter by language code":{"value":{"offset":0,"pageSize":100,"fields":"id,name,languagecode","filters":[{"type":9124,"operator":"equal","value":"En"}]}},"example: filter by number":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname","filters":[{"type":9008,"operator":"equal","value":5}]}},"example: filter by custom field Line":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,87","filters":[{"type":9101,"operator":"equal","value":"Test string value","field":87}]}},"example: filter by custom field List of users":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,15","filters":[{"type":9113,"field":15,"operator":"equal","value":"user:50"}]}},"example: filter by custom field Employee":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,10","filters":[{"type":9109,"field":10,"operator":"equal","value":"user:50"}]}},"example: filter by custom field Directory entry":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,20","filters":[{"type":9107,"field":20,"operator":"equal","value":"47 // Directory entry key"}]}},"example: filter by custom field Set of directory values":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,21","filters":[{"type":9114,"field":21,"operator":"equal","value":"47;48;50"}]}},"example: filter by custom field Contact":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,25","filters":[{"type":9108,"field":25,"operator":"equal","value":"contact:12"}]}},"example: filter by custom field List":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,11","filters":[{"type":9106,"field":11,"operator":"equal","value":"Main"}]}},"example: filter by custom field Number":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,5","filters":[{"type":9102,"field":5,"operator":"equal","value":999}]}},"example: filter by custom field Group, employee or contact":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,96","filters":[{"type":9112,"field":96,"operator":"equal","value":"group:5"}]}},"example: filter by custom field Checkbox":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,97","filters":[{"type":9105,"field":97,"operator":"equal","value":true}]}},"example: filter by custom field Task":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,50","filters":[{"type":9115,"field":50,"operator":"equal","value":10}]}},"example: filter by custom field Project":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,50","filters":[{"type":9117,"field":50,"operator":"equal","value":10}]}},"example: filter by custom field Counterparty":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,5","filters":[{"type":9110,"field":5,"operator":"equal","value":10}]}},"example: filter by custom field Date and Employee":{"value":{"offset":0,"pageSize":100,"fields":"id,name,midname,lastname,3,5","filters":[{"type":9103,"field":3,"operator":"equal","value":{"dateType":"otherRange","dateFrom":"15-12-2022","dateTo":"17-12-2022"}},{"type":9109,"field":5,"operator":"equal","value":"user:50"}]}}}}}},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"users":{"type":"array","items":{"$ref":"#/components/schemas/UserResponse"}}}},"examples":{"example":{"value":{"result":"success","users":[{"id":1,"sourceObjectId":"0c091b1f-a735-44e9-a56c-43435e7a40b6","sourceDataVersion":"AADJIgAAAAA=","name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","gender":"Male","birthDate":{"date":"01-12-2000","time":"00:00","datetime":"2000-12-01T00:00Z"},"groups":[{"id":1,"name":"Managers"}],"role":"User","login":"ivan","email":"ivan@example.com","secondaryEmails":[],"status":"Active","phones":[{"number":"+123456789","maskedNumber":"Mobile phone","type":1}],"customFieldData":[]}]}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":30,"error":"Rest API error"}}}}}}}}},"/user/":{"post":{"tags":["Employee"],"summary":"Create employee","operationId":"post-user","description":"This method lets you create a new employee","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRequest"},"examples":{"create employee":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","gender":"Male","languageCode":"En","birthDate":{"date":"01-12-2000","time":"00:00","datetime":"2000-12-01T00:00Z"},"groups":[{"id":1}],"role":"User","login":"test","password":"testpass","email":"test@test.com","secondaryEmails":[],"status":"Active","phones":[{"number":"Test phone","maskedNumber":"+123456789","type":0}],"position":{"id":23,"name":"manager"}}},"example create employee with set field: custom field type Line":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":10},"value":"Test string"}]}},"example create employee with set field: custom field type Number":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":20},"value":99}]}},"example create employee with set field: custom field type Date":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":30},"value":{"date":"11-11-2021"}}]}},"example create employee with set field: custom field type Time":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example create employee with set field from string: custom field type Date and time":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example create employee with set field from object: custom field type Date and time":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}},"example create employee with set field: custom field type Period of time":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example create employee with set field: custom field type Checkbox":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":70},"value":true}]}},"example create employee with set field: custom field type List":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example create employee with set field: custom field type Directory entry":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":90},"value":{"id":2}}]}},"example create employee with set field: custom field type Contact by prefixedId":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example create employee with set field: custom field type Contact by id":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example create employee with set field: custom field type Employee by prefixedId":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example create employee with set field: custom field type Employee by id":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example create employee with set field: custom field type Counterparty by prefixedId":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example create employee with set field: custom field type Counterparty by id":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example create employee with set field: custom field type Group, employee, or contact":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example create employee with set field: custom field type List of users":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example create employee with set field: custom field type Set of directory values":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example create employee with set field: custom field type Task":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example create employee with set field: custom field type Task set":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example create contact with set field: custom field type Set of values":{"value":{"templateId":1,"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example create employee with set field: custom field type Files":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example create employee with set field: custom field type Project":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example create employee with set field: custom field type Location":{"value":{"name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","email":"test@test.com","customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":1}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":24,"error":"Billing limit - user not created - {\"name\": \"Ivan\", \"midname\": \"Ivanovich\", \"lastname\": \"Ivanov\"}"}}}}}}}}},"/user/positions":{"get":{"tags":["Employee"],"summary":"Get list of employee positions","operationId":"get-user-positions","description":"This method lets you get a list of employee positions","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name","example":"id,name"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"positions":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"}}}}}},"examples":{"example":{"value":{"result":"success","posts":[{"id":1,"name":"Product manager"}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/user/groups":{"get":{"tags":["Employee"],"summary":"Get list of employee groups","operationId":"get-user-groups","description":"This method lets you get a list of employee groups","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name","example":"id,name"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupResponse"}}}},"examples":{"example":{"value":{"result":"success","groups":[{"id":1,"name":"My emploeey group"}]}}}}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/directory/{id}":{"get":{"tags":["Directory"],"summary":"Get directory by identifier","operationId":"get-directory-by-id","description":"This method lets you get a directory from its ID","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"Directory identifier"},{"schema":{"type":"string"},"name":"fields","in":"query","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, group, fields, sourceObjectId, sourceDataVersion","required":false,"style":"form","explode":true,"example":"id,name,fields"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"directory":{"$ref":"#/components/schemas/Directory"}}},"examples":{"example":{"value":{"result":"success","directory":{"id":5,"name":"Products","group":{"id":1,"name":"Appliances"},"fields":[{"id":1,"name":"Name","type":0,"objectType":2}]}}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":8000,"error":"Directory not found by id -  13"}}}}}}}}},"/directory/list":{"post":{"tags":["Directory"],"summary":"Get list of directories","operationId":"get-list-directories","description":"This method lets you get a list of directories","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"groupId":{"type":"number"},"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"id,name,group,fields","description":"Fields returned - custom field identifiers, system field names, comma-delimited"}}},"examples":{"example":{"value":{"offset":0,"pageSize":100,"fields":"id,name,group,fields"}}}}},"description":""},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"directories":{"type":"array","items":{"$ref":"#/components/schemas/Directory"}}}},"examples":{"example":{"value":{"result":"success","directory":[{"id":1,"name":"Milk products","group":{"id":1,"name":"Food"},"fields":[{"id":0,"name":"Name","type":10,"objectType":2}]},{"id":2,"name":"Auto parts","group":{"id":2,"name":"Auto"},"fields":[{"id":10,"name":"Name","type":0,"objectType":2}]}]}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/directory/{id}/entry/":{"post":{"tags":["Directory"],"summary":"Add directory entry","operationId":"post-add-directory-entry","description":"This method lets you add a directory entry","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"Directory identifier"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DirectoryEntryRequest"},"examples":{"example add directory entry with custom field type Line":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":10},"value":"Test item name"}]}},"example add directory entry with custom field type Number":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":20},"value":1}]}},"example add directory entry with custom field type Date":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":30},"value":{"date":"31-12-2023"}}]}},"example add directory entry with custom field type Time":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example add directory entry with custom field type Date and time from string":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example add directory entry with custom field type Date and time from object":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":50},"value":{"date":"21-12-2021","time":"12:15"}}]}},"example add directory entry with custom field type Period of time":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example add directory entry with custom field type Checkbox":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":70},"value":true}]}},"example add directory entry with custom field type List":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example add directory entry with custom field type Directory entry":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}},"example add directory entry with custom field type Directory entry, set empty value":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}},"example add directory entry with custom field type Contact by prefixedId":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example add directory entry with custom field type Contact by id":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example add directory entry with custom field type Employee by prefixedId":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example add directory entry with custom field type Employee by id":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example add directory entry with custom field type Counterparty by prefixedId":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example add directory entry with custom field type Counterparty by id":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example add directory entry with custom field type Group, employee, or contact":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example add directory entry with custom field type List of users":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example add directory entry with custom field type Set of directory values":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example add directory entry with custom field type Task":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example add directory entry with custom field type Task set":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example add directory entry with custom field type Set of values":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example add directory entry with custom field type Files":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example add directory entry with custom field type Project":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example add directory entry with custom field type Location":{"value":{"parentKey":1,"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":8011,"error":"Error add entry"}}}}}}}}},"/directory/{id}/entry/{key}":{"get":{"tags":["Directory"],"summary":"Get directory entry","operationId":"get-directory-id-entry-key","description":"This method lets you geta directory entry by its key","parameters":[{"schema":{"type":"string"},"name":"id","in":"path","required":true,"description":"Directory identifier"},{"schema":{"type":"integer"},"name":"key","in":"path","required":true,"description":"Key of the directory entry"},{"name":"fields","in":"query","description":"Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* directory, key, parentKey, archived, isGroup","required":false,"style":"form","explode":true,"example":"directory,parentKey,key,archived,isGroup,1296,1298","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","x-examples":{"example-1":{"result":"success","entry":{"directory":{"id":175,"name":"Products"},"key":12,"customFieldData":[{"field":{"id":1296,"name":"Name","type":0,"objectType":2},"value":"Component","stringValue":"Component"},{"field":{"id":1298,"name":"Description","type":2,"objectType":2},"value":"<p>test<br></p>","stringValue":"<p>test<br></p>"}]}}},"properties":{"result":{"type":"string"},"entry":{"$ref":"#/components/schemas/DirectoryEntryResponse"}}},"examples":{"example":{"value":{"result":"success","entry":{"directory":{"id":175,"name":"Products"},"key":12,"parentKey":0,"archived":false,"isGroup":false,"customFieldData":[{"field":{"id":1296,"name":"Name","type":0,"objectType":2},"value":"Tomato","stringValue":"Tomato"},{"field":{"id":1298,"name":"Description","type":2,"objectType":2},"value":"Test","stringValue":"Test"}]}}}}}}}}},"post":{"tags":["Directory"],"summary":"Update directory entry","operationId":"post-update-directory-entry","description":"This method lets you update a directory entry","parameters":[{"schema":{"type":"integer"},"name":"key","in":"path","required":true,"description":"Key of the directory entry"},{"schema":{"type":"string"},"name":"id","in":"path","required":true,"description":"Directory identifier"},{"schema":{"type":"boolean","default":false},"in":"query","name":"silent","description":"Silent mode"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DirectoryEntryRequest"},"examples":{"example field update: archived":{"value":{"archived":true}},"example field update: custom field type Line":{"value":{"customFieldData":[{"field":{"id":10},"value":"Test value"}]}},"example field update: custom field type Number":{"value":{"customFieldData":[{"field":{"id":20},"value":99}]}},"example field update: custom field type Date":{"value":{"customFieldData":[{"field":{"id":30},"value":{"date":"31-12-2022"}}]}},"example field update: custom field type Time":{"value":{"customFieldData":[{"field":{"id":40},"value":{"time":"17:55"}}]}},"example field update from string: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":50},"value":"21-12-2021 12:15:00"}]}},"example field update from object: custom field type Date and time":{"value":{"customFieldData":[{"field":{"id":40},"value":{"date":"21-12-2021","time":"12:15"}}]}},"example field update: custom field type Period of time":{"value":{"customFieldData":[{"field":{"id":60},"value":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}]}},"example field update: custom field type Checkbox":{"value":{"customFieldData":[{"field":{"id":70},"value":true}]}},"example field update: custom field type List":{"value":{"customFieldData":[{"field":{"id":80},"value":"Enum value"}]}},"example field update: custom field type Directory entry":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":2}},{"field":{"id":95},"value":{"id":"5"}}]}},"example field update: custom field type Directory entry, set empty value":{"value":{"customFieldData":[{"field":{"id":90},"value":{"id":0}},{"field":{"id":95},"value":{"id":""}}]}},"example field update: custom field type Contact by prefixedId":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":"contact:5"}}]}},"example field update: custom field type Contact by id":{"value":{"customFieldData":[{"field":{"id":100},"value":{"id":5}}]}},"example field update: custom field type Employee by prefixedId":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":"user:3"}}]}},"example field update: custom field type Employee by id":{"value":{"customFieldData":[{"field":{"id":110},"value":{"id":3}}]}},"example field update: custom field type Counterparty by prefixedId":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":"contact:10"}}]}},"example field update: custom field type Counterparty by id":{"value":{"customFieldData":[{"field":{"id":120},"value":{"id":10}}]}},"example field update: custom field type Group, employee, or contact":{"value":{"customFieldData":[{"field":{"id":130},"value":{"id":"group:1"}}]}},"example field update: custom field type List of users":{"value":{"customFieldData":[{"field":{"id":140},"value":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}]}},"example field update: custom field type Set of directory values":{"value":{"customFieldData":[{"field":{"id":150},"value":[{"id":1},{"id":2},{"id":3}]}]}},"example field update: custom field type Task":{"value":{"customFieldData":[{"field":{"id":160},"value":{"id":111}}]}},"example field update: custom field type Task set":{"value":{"customFieldData":[{"field":{"id":170},"value":[{"id":111},{"id":112},{"id":113}]}]}},"example field update: custom field type Set of values":{"value":{"customFieldData":[{"field":{"id":200},"value":["First element"]}]}},"example field update: custom field type Files":{"value":{"customFieldData":[{"field":{"id":210},"value":[204308,205305]}]}},"example field update: custom field type Project":{"value":{"customFieldData":[{"field":{"id":220},"value":{"id":5}}]}},"example field update: custom field type Location":{"value":{"customFieldData":[{"field":{"id":250},"value":{"address":"New York","longitude":40.71041692830323,"latitude":-74.00097407111207}}]}}}}}},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":8012,"error":"Entry update error"}}}}}}}},"delete":{"tags":["Directory"],"summary":"Delete directory entry","operationId":"delete-directory-entry-key","description":"This method lets you delete a directory entry by key","parameters":[{"schema":{"type":"integer"},"name":"key","in":"path","required":true,"description":"Key of the directory entry"},{"schema":{"type":"string"},"name":"id","in":"path","required":true,"description":"Directory identifier"}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":6,"error":"Access denied for directory entry by key 10"}}}}}}}}},"/directory/{id}/entry/list":{"post":{"tags":["Directory"],"summary":"Get list of directory entries","operationId":"post-list-directory-entries","description":"This method lets you to get a list of directory entries","parameters":[{"schema":{"type":"string"},"name":"id","in":"path","required":true,"description":"Directory identifier"}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"directory,parentKey,key,archived,isGroup,10","description":"Fields returned - names, comma-delimited"},"groupsOnly":{"type":"boolean"},"entriesOnly":{"type":"boolean"},"filterId":{"type":"string","description":"Id for directory entries filter, get list by method '/directory/{id}/filters'"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/ComplexDirectoryFilter"}}}},"examples":{"example: filter by key":{"value":{"offset":0,"pageSize":100,"filters":[{"type":6006,"operator":"equal","value":5}],"fields":"directory,parentKey,name,key"}},"example: filter by some keys":{"value":{"offset":0,"pageSize":100,"filters":[{"type":6006,"operator":"equal","value":[5,7]}],"fields":"directory,parentKey,name,key"}},"example: getting only groups":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key","groupsOnly":true}},"example: getting only entries":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key","entriesOnly":true}},"example: filter by custom directory entries filter":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key","filterId":4115}},"example: filter by custom field Date":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,3","filters":[{"type":6103,"field":3,"operator":"equal","value":{"dateType":"otherRange","dateFrom":"15-12-2022","dateTo":"17-12-2022"}}]}},"example: filter by custom field List of users":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,15","filters":[{"type":6113,"field":15,"operator":"equal","value":"user:50"}]}},"example: filter by custom field Employee":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,10","filters":[{"type":6109,"field":10,"operator":"equal","value":"user:50"}]}},"example: filter by custom field Directory entry":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,20","filters":[{"type":6107,"field":20,"operator":"equal","value":"47 // Directory entry key"}]}},"example: filter by custom field Set of directory values":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,21","filters":[{"type":6114,"field":20,"operator":"equal","value":"47;48;50"}]}},"example: filter by custom field Contact":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,25","filters":[{"type":6108,"field":25,"operator":"equal","value":"contact:12"}]}},"example: filter by custom field Line":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,10","filters":[{"type":6101,"field":10,"operator":"equal","value":"Test value"}]}},"example: filter by custom field List":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,11","filters":[{"type":6106,"field":11,"operator":"equal","value":"Main"}]}},"example: filter by custom field Number":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,5","filters":[{"type":6102,"field":5,"operator":"equal","value":999}]}},"example: filter by custom field Group, employee or contact":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,96","filters":[{"type":6112,"field":96,"operator":"equal","value":"group:5"}]}},"example: filter by custom field Checkbox":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,97","filters":[{"type":6105,"field":97,"operator":"equal","value":true}]}},"example: filter by custom field Task":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,50","filters":[{"type":6115,"field":50,"operator":"equal","value":10}]}},"example: filter by custom field Project":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,50","filters":[{"type":6117,"field":50,"operator":"equal","value":10}]}},"example: filter by custom field Counterparty":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,5","filters":[{"type":6110,"field":5,"operator":"equal","value":10}]}},"example: filter by custom field Date and Employee":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,key,10","filters":[{"type":1,"field":0,"operator":"equal","value":null}]}},"example: filter archived entries":{"value":{"offset":0,"pageSize":100,"fields":"directory,parentKey,name,key,archived","filters":[{"type":6005,"operator":"equal","value":true}]}}}}}},"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"directoryEntries":{"type":"array","items":{"$ref":"#/components/schemas/DirectoryEntryResponse"}}}},"examples":{"example":{"value":{"result":"success","directoryEntries":[{"directory":{"id":1,"name":"Products"},"key":1,"parentKey":0,"archived":false,"isGroup":false,"customFieldData":[{"field":{"id":10,"name":"Name","type":0,"objectType":2},"value":"Milk"}]},{"directory":{"id":1,"name":"Products"},"key":2,"parentKey":0,"name":"Products group 1"}]}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/directory/groups":{"get":{"tags":["Directory"],"summary":"Get list of directory groups","operationId":"get-directories-groups","description":"This method lets you get a list of directory groups","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name","example":"id,name"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupResponse"}}}},"examples":{"example":{"value":{"result":"success","groups":[{"id":1,"name":"My first directories group"}]}}}}}},"401":{"description":"Authorization failure","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}}}}},"/directory/{id}/filters":{"post":{"tags":["Directory"],"summary":"Get list directory entries filters","operationId":"post-directory-entries-filters","description":"This method lets you get list directory entries filters","parameters":[{"schema":{"type":"string"},"name":"id","in":"path","required":true,"description":"Directory identifier"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"filters":{"type":"array","items":{"$ref":"#/components/schemas/Filter"}}}},"examples":{"example":{"value":{"result":"success","filters":[{"id":"4115","name":"My custom entries filter","owner":{"id":"user:1","name":"John"}}]}}}}},"headers":{}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/type":{"get":{"tags":["Custom fields"],"summary":"Get a list of a custom field types","operationId":"get-customfield-types","description":"This method lets you get a list of custom field types","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customFieldTypes":{"type":"array","items":{"$ref":"#/components/schemas/ShortEntity"}}}},"examples":{"example":{"value":{"result":"success","customFieldTypes":[{"id":0,"name":"Line"},{"id":1,"name":"Number"},{"id":2,"name":"Text"},{"id":3,"name":"Date"},{"id":4,"name":"Time"},{"id":5,"name":"Date and time"},{"id":6,"name":""},{"id":7,"name":"Checkbox"},{"id":8,"name":"List"},{"id":9,"name":"Directory entry"},{"id":10,"name":"Contact"},{"id":11,"name":"Employee"},{"id":12,"name":"Counterparty"},{"id":13,"name":"Group, employee, or contact"},{"id":14,"name":"List of users"},{"id":15,"name":"Set of directory values"},{"id":16,"name":"Task"},{"id":17,"name":"Task set"},{"id":20,"name":"Set of values"},{"id":21,"name":"Files"},{"id":22,"name":"Project"},{"id":23,"name":"Data tag summaries"},{"id":24,"name":"Calculated field"},{"id":25,"name":"Location"},{"id":26,"name":"Subtask total"},{"id":27,"name":"AI results field"},{"id":28,"name":"Date with time frame"},{"id":29,"name":"Totals field"}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/contact":{"get":{"tags":["Custom fields - Contact"],"summary":"Get a list of a custom contact fields","operationId":"get-customfield-contact","description":"This method lets you get a list of custom contact and company fields","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, names, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,names,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"objectType":1,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/contact/{id}":{"get":{"tags":["Custom fields - Contact"],"summary":"Get a list of a custom fields for contact","operationId":"get-customfields-for-contact","description":"This method lets you get a list of custom fields for contact or company","parameters":[{"name":"id","in":"path","description":"Number of contact","required":true,"schema":{"type":"string","example":"contact:12 OR 12","pattern":"[a-zA-Z:0-9]"}},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, names, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,names,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"objectType":1,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/contact/":{"post":{"tags":["Custom fields - Contact"],"summary":"Create a custom field for contact","operationId":"post-customfield-add","description":"This method lets you create a custom field for contact","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomField"},"examples":{"example":{"value":{"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"groupId":1}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/group/contact":{"get":{"tags":["Custom fields - Contact"],"summary":"Get a list of a custom contact fields set","operationId":"get-customfield-sets-contact","description":"This method lets you get a list of custom contact and company fields sets","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customFieldSets":{"type":"array","items":{"$ref":"#/components/schemas/ShortEntity"}}}},"examples":{"example":{"value":{"result":"success","customFieldSets":[{"id":10,"name":"My custom fields set for contacts"}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/group/contact/":{"post":{"tags":["Custom fields - Contact"],"summary":"Create a custom fields set for contact","operationId":"post-customfield-set-add","description":"This method lets you create a custom fields set for contact","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShortEntity"},"examples":{"example":{"value":{"name":"My custom fields set for contacts"}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/task":{"get":{"tags":["Custom fields - Task"],"summary":"Get list of custom task fields","operationId":"get-customfield-task","description":"This method lets you get a list of custom task fields","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, names, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,names,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"objectType":0,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/task/{id}":{"get":{"tags":["Custom fields - Task"],"summary":"Get list of custom fields for task","operationId":"get-customfields-for-task","description":"This method lets you get a list of custom fields for task","parameters":[{"name":"id","in":"path","description":"Number of task","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, names, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,names,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"objectType":0,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/task/":{"post":{"tags":["Custom fields - Task"],"summary":"Create a custom field for task","operationId":"post-customfield-task-add","description":"This method lets you create a custom field for task","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomField"},"examples":{"example":{"value":{"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"groupId":1}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/group/task":{"get":{"tags":["Custom fields - Task"],"summary":"Get a list of a custom task fields set","operationId":"get-customfield-sets-task","description":"This method lets you get a list of custom task fields sets","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customFieldSets":{"type":"array","items":{"$ref":"#/components/schemas/ShortEntity"}}}},"examples":{"example":{"value":{"result":"success","customFieldSets":[{"id":10,"name":"My custom fields set for tasks"}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/group/task/":{"post":{"tags":["Custom fields - Task"],"summary":"Create a custom fields set for task","operationId":"post-customfield-set-task-add","description":"This method lets you create a custom fields set for task","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShortEntity"},"examples":{"example":{"value":{"name":"My custom fields set for tasks"}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/project":{"get":{"tags":["Custom fields - Project"],"summary":"Get a list of custom project fields","operationId":"get-customfield-project","description":"This method lets you get a list of custom project fields","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, names, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,names,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"objectType":3,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/project/{id}":{"get":{"tags":["Custom fields - Project"],"summary":"Get list of custom fields for project","operationId":"get-customfields-for-project","description":"This method lets you get a list of custom fields for project","parameters":[{"name":"id","in":"path","description":"Number of project","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, names, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,type,names"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"objectType":3,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/project/":{"post":{"tags":["Custom fields - Project"],"summary":"Create a custom field for project","operationId":"post-customfield-project-add","description":"This method lets you create a custom field for project","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomField"},"examples":{"example":{"value":{"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"groupId":1}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/group/project":{"get":{"tags":["Custom fields - Project"],"summary":"Get a list of a custom project fields set","operationId":"get-customfield-sets-project","description":"This method lets you get a list of custom project fields sets","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customFieldSets":{"type":"array","items":{"$ref":"#/components/schemas/ShortEntity"}}}},"examples":{"example":{"value":{"result":"success","customFieldSets":[{"id":10,"name":"My custom fields set for project"}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/group/project/":{"post":{"tags":["Custom fields - Project"],"summary":"Create a custom fields set for project","operationId":"post-customfield-set-project-add","description":"This method lets you create a custom fields set for project","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShortEntity"},"examples":{"example":{"value":{"name":"My custom fields set for project"}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/user":{"get":{"tags":["Custom fields - Employee"],"summary":"Get list of custom employee fields","operationId":"get-customfield-user","description":"This method lets you get a list of custom employee fields","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, names, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,names,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"objectType":6,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/user/{id}":{"get":{"tags":["Custom fields - Employee"],"summary":"Get list of custom fields for employee","operationId":"get-customfields-for-user","description":"This method lets you get a list of custom fields for employee","parameters":[{"schema":{"type":"string","pattern":"[a-zA-Z:0-9]"},"name":"id","in":"path","required":true,"description":"Number of employee","example":"user:1 OR 1"},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, names, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,names,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"objectType":6,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/user/":{"post":{"tags":["Custom fields - Employee"],"summary":"Create a custom field for user","operationId":"post-customfield-user-add","description":"This method lets you create a custom field for user","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomField"},"examples":{"example":{"value":{"name":"Line","names":{"en":"Line","fr":"Ligne"},"type":0,"groupId":1}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/group/user":{"get":{"tags":["Custom fields - Employee"],"summary":"Get a list of a custom user fields set","operationId":"get-customfield-sets-user","description":"This method lets you get a list of custom user fields sets","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customFieldSets":{"type":"array","items":{"$ref":"#/components/schemas/ShortEntity"}}}},"examples":{"example":{"value":{"result":"success","customFieldSets":[{"id":10,"name":"My custom fields set for user"}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/group/user/":{"post":{"tags":["Custom fields - Employee"],"summary":"Create a custom fields set for user","operationId":"post-customfield-set-user-add","description":"This method lets you create a custom fields set for user","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShortEntity"},"examples":{"example":{"value":{"name":"My custom fields set for user"}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/datatag/{id}":{"get":{"tags":["Custom fields"],"summary":"Get list of custom fields for data tag","operationId":"get-customfields-for-datatag","description":"This method lets you get a list of custom fields for data tag","parameters":[{"schema":{"type":"string","pattern":"[a-zA-Z:0-9]"},"name":"id","in":"path","required":true,"description":"Data tag identifier"},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","type":0,"objectType":4,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/directory/{id}":{"get":{"tags":["Custom fields"],"summary":"Get list of custom fields for directory","operationId":"get-customfields-for-directory","description":"This method lets you get a list of custom fields for directory","parameters":[{"schema":{"type":"string","pattern":"[a-zA-Z:0-9]"},"name":"id","in":"path","required":true,"description":"Directory identifier"},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, type, objectType, groupId, directoryId, directoryFields, enumValues","example":"id,name,type"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","type":0,"objectType":2,"groupId":1}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/main":{"get":{"tags":["Custom fields"],"summary":"Get list of custom main fields","operationId":"get-customfield-generic","description":"This method lets you get a list of custom main fields","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, type, objectType, directoryId, directoryFields, enumValues, mainValue","example":"id,name,group,type,objectType,directoryId,mainValue"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"customfields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"examples":{"example":{"value":{"result":"success","customfields":[{"id":10,"name":"Line","type":0,"objectType":5,"mainValue":"Test string value"}]}}}}}},"500":{"description":"Internal Server Error","headers":{},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/customfield/main/":{"post":{"tags":["Custom fields"],"summary":"Create a custom main field","operationId":"post-customfield-main-add","description":"This method lets you create a custom main field","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomField"},"examples":{"example of creating a main field with type Line":{"value":{"name":"Main field - Line","names":{"de":"Hauptfeld - Linie","fr":"Champ principal - Ligne"},"type":0,"mainValue":"Test string value"}},"example of creating a main field with type Number":{"value":{"name":"Main field - Number","names":{"de":"Hauptfeld - Nummer","fr":"Champ principal - Numéro"},"type":1,"mainValue":99}},"example of creating a main field with type Text":{"value":{"name":"Main field - Text","names":{"de":"Hauptfeld - Text","fr":"Champ principal - Texte"},"type":2,"mainValue":"Test text value"}},"example of creating a main field with type Date":{"value":{"name":"Main field - Date","names":{"de":"Hauptfeld - Datum","fr":"Champ principal - Date"},"type":3,"mainValue":{"date":"11-12-2024"}}},"example of creating a main field with type Time":{"value":{"name":"Main field - Time","names":{"de":"Hauptfeld - Zeit","fr":"Champ principal - Heure"},"type":4,"mainValue":{"time":"17:55"}}},"example of creating a main field of type Date and time from a string":{"value":{"name":"Main field - Date and time","names":{"de":"Hauptfeld - Datum und Uhrzeit","fr":"Champ principal - Date et heure"},"type":5,"mainValue":"21-12-2024 12:15:00"}},"example of creating a main field of type Date and time from an object":{"value":{"name":"Main field - Date and time","names":{"de":"Hauptfeld - Datum und Uhrzeit","fr":"Champ principal - Date et heure"},"type":5,"mainValue":{"date":"21-12-2024","time":"12:15"}}},"example of creating a main field of type Period of time":{"value":{"name":"Main field - Period of time","names":{"de":"Hauptfeld - Zeitperiode","fr":"Champ principal - Période de temps"},"type":6,"mainValue":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}},"example of creating a main field of type Checkbox":{"value":{"name":"Main field - Checkbox","names":{"de":"Hauptfeld - Kontrollkästchen","fr":"Champ principal - Case à cocher"},"type":7,"mainValue":true}},"example of creating a main field of type Directory entry":{"value":{"name":"Main field - Directory entry","names":{"de":"Hauptfeld - Verzeichniseintrag","fr":"Champ principal - Entrée du répertoire"},"type":9,"directoryId":1,"mainValue":{"id":2}}},"example of creating a main field of type Contact by prefixedId":{"value":{"name":"Main field - Contact","names":{"de":"Hauptfeld - Kontakt","fr":"Champ principal - Contact"},"type":10,"mainValue":{"id":"contact:5"}}},"example of creating a main field of type Contact by id":{"value":{"name":"Main field - Contact","names":{"de":"Hauptfeld - Kontakt","fr":"Champ principal - Contact"},"type":10,"mainValue":{"id":5}}},"example of creating a main field of type Employee by prefixedId":{"value":{"name":"Main field - Employee","names":{"de":"Hauptfeld - Mitarbeiter/in","fr":"Champ principal - Employé"},"type":11,"mainValue":{"id":"user:3"}}},"example of creating a main field of type Employee by id":{"value":{"name":"Main field - Employee","names":{"de":"Hauptfeld - Mitarbeiter/in","fr":"Champ principal - Employé"},"type":11,"mainValue":{"id":3}}},"example of creating a main field of type Counterparty by prefixedId":{"value":{"name":"Main field - Counterparty","names":{"de":"Hauptfeld - Auftraggeber/in","fr":"Champ principal - Contrepartie"},"type":12,"mainValue":{"id":"contact:10"}}},"example of creating a main field of type Counterparty by id":{"value":{"name":"Main field - Counterparty","names":{"de":"Hauptfeld - Auftraggeber/in","fr":"Champ principal - Contrepartie"},"type":12,"mainValue":{"id":10}}},"example of creating a main field of type Group, employee, or contact":{"value":{"name":"Main field - Group, employee, or contact","names":{"de":"Hauptfeld - Gruppe, Mitarbeiter/in oder Kontakt","fr":"Champ principal - Groupe, employé ou contact"},"type":13,"mainValue":{"id":"group:1"}}},"example of creating a main field of type List of users":{"value":{"name":"Main field - List of users","names":{"de":"Hauptfeld - Liste der Benutzer","fr":"Champ principal - Liste des utilisateurs"},"type":14,"mainValue":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}},"example of creating a main field of type Set of directory values":{"value":{"name":"Main field - Set of directory values","names":{"de":"Hauptfeld - Set von Verzeichniswerten","fr":"Champ principal - Ensemble de valeurs du répertoire"},"type":15,"directoryId":1,"mainValue":[{"id":1},{"id":2},{"id":3}]}},"example of creating a main field of type Task":{"value":{"name":"Main field - Task","names":{"de":"Hauptfeld - Aufgabe","fr":"Champ principal - Tâche"},"type":16,"mainValue":{"id":111}}},"example of creating a main field of type Task set":{"value":{"name":"Main field - Task set","names":{"de":"Hauptfeld - Aufgabensatz","fr":"Champ principal - Ensemble de tâches"},"type":17,"mainValue":[{"id":111},{"id":112},{"id":113}]}},"example of creating a main field of type Files":{"value":{"name":"Main field - Files","names":{"de":"Hauptfeld - Dateien","fr":"Champ principal - Fichiers"},"type":21,"mainValue":[204308,205305]}},"example of creating a main field of type Project":{"value":{"name":"Main field - Project","names":{"de":"Hauptfeld - Projekt","fr":"Champ principal - Projet"},"type":22,"mainValue":{"id":5}}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"id":{"type":"number"}},"required":["result","id"]},"examples":{"example":{"value":{"result":"success","id":123}}}}}}}}},"/customfield/main/{id}":{"post":{"tags":["Custom fields"],"summary":"Update a custom main field","operationId":"post-customfield-main-update","description":"This method lets you update a custom main field","parameters":[{"schema":{"type":"string","pattern":"[0-9]"},"name":"id","in":"path","required":true,"description":"Main field identifier"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomField"},"examples":{"example of update a main field name":{"value":{"name":"Main field - New"}},"example of update a main field names":{"value":{"name":"Main field - New","names":{"de":"Hauptfeld - Neu","fr":"Champ principal - Nouvelle"}}},"example of update a main field with type Line":{"value":{"mainValue":"Test string value"}},"example of update a main field with type Number":{"value":{"mainValue":99}},"example of update a main field with type Text":{"value":{"mainValue":"Test text value"}},"example of update a main field with type Date":{"value":{"mainValue":{"date":"11-12-2024"}}},"example of update a main field with type Time":{"value":{"mainValue":{"time":"17:55"}}},"example of update a main field of type Date and time from a string":{"value":{"mainValue":"21-12-2024 12:15:00"}},"example of update a main field of type Date and time from an object":{"value":{"mainValue":{"date":"21-12-2024","time":"12:15"}}},"example of update a main field of type Period of time":{"value":{"mainValue":{"from":{"time":"01:15"},"to":{"time":"04:40"}}}},"example of update a main field of type Checkbox":{"value":{"mainValue":true}},"example of update a main field of type Directory entry":{"value":{"mainValue":{"id":2}}},"example of update a main field of type Contact by prefixedId":{"value":{"mainValue":{"id":"contact:5"}}},"example of update a main field of type Contact by id":{"value":{"mainValue":{"id":5}}},"example of creating a main field of type Employee by prefixedId":{"value":{"mainValue":{"id":"user:3"}}},"example of update a main field of type Employee by id":{"value":{"mainValue":{"id":3}}},"example of creating a main field of type Counterparty by prefixedId":{"value":{"mainValue":{"id":"contact:10"}}},"example of update a main field of type Counterparty by id":{"value":{"mainValue":{"id":10}}},"example of update a main field of type Group, employee, or contact":{"value":{"mainValue":{"id":"group:1"}}},"example of update a main field of type List of users":{"value":{"mainValue":[{"id":"user:1"},{"id":"contact:7"},{"id":"group:5"}]}},"example of update a main field of type Set of directory values":{"value":{"mainValue":[{"id":1},{"id":2},{"id":3}]}},"example of update a main field of type Task":{"value":{"mainValue":{"id":111}}},"example of update a main field of type Task set":{"value":{"mainValue":[{"id":111},{"id":112},{"id":113}]}},"example of update a main field of type Files":{"value":{"mainValue":[204308,205305]}},"example of update a main field of type Project":{"value":{"mainValue":{"id":5}}}}}}},"responses":{"200":{"description":"Ok","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1}},"required":["result"]},"examples":{"example":{"value":{"result":"success"}}}}}}}}},"/process/task":{"get":{"tags":["Process"],"summary":"Get list of task processes","operationId":"get-task-process-list","description":"This method lets you get a list of task processes","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name","example":"id,name"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"processes":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"}}}}}},"examples":{"example":{"value":{"result":"success","processes":[{"id":1,"name":"My task process"}]}}}}}}}}},"/process/task/{id}/statuses":{"get":{"tags":["Process"],"summary":"Get list of task statuses for process","operationId":"get-task-status-list","description":"This method lets you get a list of task statuses for process","parameters":[{"name":"id","in":"path","description":"Process identifier","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, color, isActive, hasDeadline, isAppliedIndividually, texts","example":"name,isActive,texts"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"statuses":{"type":"array","items":{"$ref":"#/components/schemas/TaskStatus"}}}},"examples":{"example":{"value":{"result":"success","statuses":[{"id":1,"name":"New","color":"#4573b1","isActive":true,"hasDeadline":true,"isAppliedIndividually":false,"texts":[{"lang":"Ru","name":"Новая"},{"lang":"En","name":"New"}]}]}}}}}}}}},"/process/contact":{"get":{"tags":["Process"],"summary":"Get list of contact processes","operationId":"get-contact-process-list","description":"This method lets you get a list of contact processes","parameters":[{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name","example":"id,name"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"processes":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"}}}}},"x-examples":{"example-1":{"result":"success","processes":[{"id":1,"name":"My contact process"}]}}},"examples":{"example":{"value":{"result":"success","processes":[{"id":1,"name":"My contact process"}]}}}}}}}}},"/report/{id}":{"get":{"tags":["Report"],"summary":"Get report by identifier","operationId":"get-report-id","description":"This method lets you get a report by its ID","parameters":[{"schema":{"type":"integer"},"name":"id","in":"path","required":true,"description":"Report identifier"},{"name":"fields","in":"query","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, fields","required":false,"style":"form","explode":true,"example":"id,name,fields","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"report":{"$ref":"#/components/schemas/Report"}}},"examples":{"example":{"value":{"result":"success","report":{"id":3,"name":"My report","fields":[{"id":1,"num":1,"formula":"","name":"Quantity","hidden":false},{"id":4,"num":2,"formula":"","name":"Cost","hidden":false},{"id":3,"num":2,"formula":"Quantity*Cost","name":"Amount","hidden":false}]}}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":9000,"error":"Report not found by id 3"}}}}}}}}},"/report/list":{"post":{"tags":["Report"],"summary":"Get list of reports","operationId":"get-report-list","description":"This method lets you get a list of reports","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"},"fields":{"type":"string","example":"id,name,fields","description":"Fields returned - custom field identifiers, system field names, comma-delimited"}}},"encoding":{"historyMetadata":{"contentType":"plain/text; charset=utf-8"}},"examples":{"example:":{"value":{"offset":0,"pageSize":100,"fields":"id,name"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","x-examples":{"example-1":{"result":"success","reports":[{"id":1,"name":"My report"}]}},"properties":{"result":{"type":"string"},"reports":{"type":"array","items":{"$ref":"#/components/schemas/Report"}}}},"examples":{"example":{"value":{"result":"success","reports":[{"id":1,"name":"My report"}]}}}}}}}}},"/report/{id}/save/list":{"post":{"tags":["Report"],"summary":"Get list of saved reports","operationId":"get-report-save-list","description":"This method lets you get a list of saved reports","parameters":[{"name":"id","in":"path","description":"Report identifier","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"fields":{"type":"string","example":"id,reportId,dateTime,name,chunks,chunksCount","description":"Fields returned - system field names, comma-delimited"}}},"encoding":{"historyMetadata":{"contentType":"plain/text; charset=utf-8"}},"examples":{"example:":{"value":{"fields":"id,reportId,dateTime,name,chunks,chunksCount"}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","x-examples":{"example-1":{"result":"success","saves":[{"reportId":1},{"id":3,"name":"My report save"}]}},"properties":{"result":{"type":"string"},"saves":{"type":"array","items":{"$ref":"#/components/schemas/ReportSave"}}}},"examples":{"Example":{"value":{"result":"success","saves":[{"id":1,"reportId":1,"dateTime":{"date":"01-12-2023 (dd-MM-yyyy)","time":"00:00 (HH:mm)","datetime":"2023-12-01T00:00Z (yyyy-MM-dd'T'HH:mm'Z')"},"name":"Save first for my report","chunks":4,"chunksCount":5}]}}}}}}}}},"/report/{id}/save/{saveId}/data":{"post":{"tags":["Report"],"summary":"Get data from saved report","operationId":"get-report-save-data","description":"This method lets you get data from a saved report","parameters":[{"name":"id","in":"path","description":"Report identifier","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"name":"saveId","in":"path","description":"Saved report identifier","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"name":"chunk","in":"query","description":"Index of chunk from saved report data","schema":{"minimum":0,"type":"integer","format":"int64","default":0}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReportSaveData"},"examples":{"Example 1":{"value":{"chunk":0,"rows":[{"type":"Header","depth":0,"items":[{"text":"Quantity","link":"","hidden":false},{"text":"Cost","link":"","hidden":false},{"text":"Amount","link":"","hidden":false}]},{"type":"Normal","depth":0,"items":[{"text":2,"link":"","hidden":false},{"text":750,"link":"","hidden":false},{"text":1500,"link":"","hidden":false}]}]}}}}}}}}},"/report/{id}/generate":{"post":{"tags":["Report"],"summary":"Generate report","operationId":"generate-report","description":"This method lets you generate a report","parameters":[{"name":"id","in":"path","description":"Report identifier","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}}],"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"description":"","type":"object","properties":{"result":{"type":"string","minLength":1},"requestId":{"type":"string"}},"required":["result","requestId"]},"examples":{"example":{"value":{"result":"success","requestId":"F558lgNHoNkkkG7BCKaQNk0C49SXHaTc"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example billing error":{"value":{"result":"fail","code":9001,"error":"Report billing error"}},"example rate limit error":{"value":{"result":"fail","code":9002,"error":"Report already in progress by requestId - F558lgNHoNkkkG7BCKaQNk0C49SXHaTc"}}}}}}}}},"/report/status/{requestId}":{"get":{"tags":["Report"],"summary":"Check report status and get saved report by request identifier","operationId":"check-get-report-save-by-request-id","description":"This method allows you to check the status of a report generation request. If the report is completed, it also returns the saved report data.","parameters":[{"name":"requestId","in":"path","description":"Request identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"status":{"type":"string"},"save":{"$ref":"#/components/schemas/ReportSave"}}},"examples":{"example ready":{"value":{"result":"success","status":"ready","save":{"id":3,"name":"Generated report save","reportId":1}}},"example in progress":{"value":{"result":"success","status":"in_progress"}}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":9003,"error":"Request id does not exist"}}}}}}}}},"/ping":{"get":{"summary":"Checks the availability of the REST service","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"}},"x-examples":{"example-1":{"result":"success"}}},"examples":{"example":{"value":{"result":"success"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":1,"error":"Access denied, unknown token"}}}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}},"operationId":"ping","description":"Checks the availability of the REST service","tags":["Monitoring"]}},"/object/{id}":{"get":{"tags":["Object"],"summary":"Get object by number","operationId":"get-object-by-id","description":"This method lets you get a object by number","parameters":[{"name":"id","in":"path","description":"Number of object","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"object":{"$ref":"#/components/schemas/ObjectResponse"}}}}}},"400":{"description":"Invalid status value","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponseError"},"examples":{"example":{"value":{"result":"fail","code":0,"error":"Rest API error"}}}}}}}}},"/object/list":{"post":{"tags":["Object"],"summary":"Get list of objects","operationId":"get-object-list","description":"This method lets you get a list of objects","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"offset":{"type":"integer","format":"int32","minimum":0,"default":0,"description":"Offset from beginning of list"},"pageSize":{"type":"integer","format":"int64","maximum":100,"minimum":1,"default":100,"description":"Size of requested list"}}},"examples":{"example:":{"value":{"offset":0,"pageSize":100}}}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","x-examples":{"example-1":{"result":"success","reports":[{"id":1,"name":"My object"}]}},"properties":{"result":{"type":"string"},"objects":{"type":"array","items":{"$ref":"#/components/schemas/ObjectResponse"}}}},"examples":{"example":{"value":{"result":"success","objects":[{"id":1,"name":"My object"}]}}}}}}}}},"/object/{id}/statuses":{"get":{"tags":["Object"],"summary":"Get list of task statuses for object","operationId":"get-object-task-status-list","description":"This method lets you get a list of task statuses for object","parameters":[{"name":"id","in":"path","description":"Number of object","required":true,"schema":{"minimum":1,"type":"integer","format":"int64"}},{"schema":{"type":"string"},"in":"query","name":"fields","description":"Fields returned - system field names, comma-delimited. <br>*Possible for system fields:* id, name, color, isActive, hasDeadline, isAppliedIndividually, texts","example":"name,isActive,texts"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"string"},"statuses":{"type":"array","items":{"$ref":"#/components/schemas/TaskStatus"}}}},"examples":{"example":{"value":{"result":"success","statuses":[{"id":1,"name":"New","color":"#4573b1","isActive":true,"hasDeadline":true,"isAppliedIndividually":false,"texts":[{"lang":"Ru","name":"Новая"},{"lang":"En","name":"New"}]}]}}}}}}}}}},"components":{"schemas":{"BaseEntity":{"title":"BaseEntity","type":"object","properties":{"id":{"type":"integer","format":"int64"}}},"ShortEntity":{"title":"ShortEntity","type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}}},"ContactResponse":{"title":"ContactResponse","type":"object","x-examples":{"example":{"id":1,"template":{"id":1},"sourceObjectId":"","sourceDataVersion":"","name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","gender":"Male","description":"Description for contact","createdDate":{"date":"01-12-1990","time":"00:00","datetime":"1990-12-01T00:00Z"},"address":"Cosima 123 High Street, Apt. 16 City, ST 12345","site":"https://ivan.ivanow.com","email":"ivan@mail.com","additionalEmailAddresses":["ivan_additional_1@mail.com","ivan_additional_2@mail.com"],"skype":"ivan-ivanov","group":{"id":1,"name":"Workers"},"isCompany":false,"isDeleted":false,"birthDate":{"date":"01-12-1990","time":"00:00","datetime":"1990-12-01T00:00Z"},"dateOfLastUpdate":{"date":"10-11-2021","time":"14:16","datetime":"2021-11-10T14:16Z"},"phones":[{"number":"89643752416","maskedNumber":"+8 (964) 375-24-16","type":1}],"companies":[],"contacts":[],"customFieldData":[{"field":{"id":10,"name":"String custom field","type":0,"objectType":1},"value":"Test string"}]}},"properties":{"id":{"type":"integer","format":"int64"},"template":{"$ref":"#/components/schemas/BaseEntity"},"processId":{"type":"integer","format":"int64"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"midname":{"type":"string"},"lastname":{"type":"string"},"gender":{"type":"string","example":"Male","enum":["NotDefined","Female","Male"]},"description":{"type":"string"},"address":{"type":"string"},"site":{"type":"string","format":"uri"},"email":{"type":"string","format":"email"},"additionalEmailAddresses":{"type":"array","items":{"type":"string"}},"skype":{"type":"string"},"telegramId":{"type":"string"},"telegram":{"type":"string"},"facebook":{"type":"string"},"instagram":{"type":"string"},"vk":{"type":"string"},"position":{"type":"string"},"group":{"$ref":"#/components/schemas/GroupResponse"},"isCompany":{"type":"boolean"},"isDeleted":{"type":"boolean"},"birthDate":{"$ref":"#/components/schemas/TimePoint"},"createdDate":{"$ref":"#/components/schemas/TimePoint"},"dateOfLastUpdate":{"$ref":"#/components/schemas/TimePoint"},"supervisors":{"$ref":"#/components/schemas/PeopleResponse"},"phones":{"type":"array","items":{"$ref":"#/components/schemas/PhoneResponse"}},"companies":{"type":"array","items":{"$ref":"#/components/schemas/CompanyEntity"}},"contacts":{"type":"array","items":{"$ref":"#/components/schemas/PersonResponse"}},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueResponse"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileResponse"}},"dataTags":{"type":"array","items":{"type":"object","properties":{"dataTag":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"}}},"key":{"type":"integer"}}}}}},"ContactRequest":{"title":"ContactRequest","type":"object","x-examples":{"example":{"id":1,"template":{"id":1},"sourceObjectId":"","sourceDataVersion":"","name":"Ivan","midname":"Ivanovich","lastname":"Ivanov","gender":"Male","description":"Descritption for contact","address":"Cosima 123 High Street, Apt. 16 City, ST 12345","site":"https://ivan.ivanow.com","email":"ivan@mail.com","skype":"ivan-ivanov","group":{"id":1},"isCompany":false,"isDeleted":false,"birthDate":{"date":"01-12-1990"},"phones":[{"number":"89643752416","maskedNumber":"+8 (964) 375-24-16","type":1}],"companies":[],"contacts":[],"customFieldData":[{"field":{"id":10},"value":"Test string"}]}},"properties":{"id":{"type":"integer","format":"int64"},"template":{"$ref":"#/components/schemas/BaseEntity"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"midname":{"type":"string"},"lastname":{"type":"string"},"gender":{"type":"string","example":"Male","enum":["NotDefined","Female","Male"]},"description":{"type":"string"},"address":{"type":"string"},"site":{"type":"string","format":"uri"},"email":{"type":"string","format":"email"},"skype":{"type":"string"},"telegramId":{"type":"string"},"telegram":{"type":"string"},"facebook":{"type":"string"},"instagram":{"type":"string"},"vk":{"type":"string"},"position":{"type":"string"},"group":{"$ref":"#/components/schemas/GroupRequest"},"isCompany":{"type":"boolean"},"isDeleted":{"type":"boolean"},"birthDate":{"anyOf":[{}],"properties":{"date":{"type":"string"}}},"supervisors":{"$ref":"#/components/schemas/PeopleRequest"},"phones":{"type":"array","items":{"$ref":"#/components/schemas/PhoneRequest"}},"companies":{"type":"array","items":{"$ref":"#/components/schemas/BaseEntity"}},"contacts":{"type":"array","items":{"$ref":"#/components/schemas/BaseEntity"}},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileRequest"}}}},"CompanyEntity":{"title":"Company","type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}}},"TaskResponse":{"title":"TaskResponse","type":"object","description":"","properties":{"id":{"type":"integer","format":"int64"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"description":{"type":"string"},"priority":{"type":"string","enum":["NotUrgent","Urgent"]},"status":{"$ref":"#/components/schemas/TaskStatus"},"processId":{"type":"integer","format":"int64"},"resultChecking":{"type":"boolean"},"type":{"type":"string","enum":["Task","Template","Checkmark"]},"assigner":{"$ref":"#/components/schemas/PersonResponse"},"parent":{"$ref":"#/components/schemas/BaseEntity"},"template":{"$ref":"#/components/schemas/BaseEntity"},"object":{"$ref":"#/components/schemas/BaseEntity"},"project":{"$ref":"#/components/schemas/BaseEntity"},"counterparty":{"$ref":"#/components/schemas/PersonResponse"},"dateTime":{"$ref":"#/components/schemas/TimePoint"},"startDateTime":{"$ref":"#/components/schemas/TimePoint"},"endDateTime":{"$ref":"#/components/schemas/TimePoint"},"hasStartDate":{"type":"boolean"},"hasEndDate":{"type":"boolean"},"hasStartTime":{"type":"boolean"},"hasEndTime":{"type":"boolean"},"delayedTillDate":{"$ref":"#/components/schemas/TimePoint"},"actualCompletionDate":{"$ref":"#/components/schemas/TimePoint"},"dateOfLastUpdate":{"$ref":"#/components/schemas/TimePoint"},"duration":{"type":"integer","format":"int64"},"durationUnit":{"type":"string","enum":["Minute","Hour","Day","Week","Month"]},"durationType":{"type":"string","enum":["CalendarDays","WorkerDays"]},"overdue":{"type":"boolean"},"closeToDeadLine":{"type":"boolean"},"notAcceptedInTime":{"type":"boolean"},"inFavorites":{"type":"boolean"},"isSummary":{"type":"boolean"},"isSequential":{"type":"boolean"},"assignees":{"$ref":"#/components/schemas/PeopleResponse"},"participants":{"$ref":"#/components/schemas/PeopleResponse"},"auditors":{"$ref":"#/components/schemas/PeopleResponse"},"recurrence":{"$ref":"#/components/schemas/Recurrence"},"isDeleted":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueResponse"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileResponse"}},"dataTags":{"type":"array","items":{"type":"object","properties":{"dataTag":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"}}},"key":{"type":"integer"}}}}}},"TaskCreateRequest":{"title":"TaskCreateRequest","type":"object","description":"","properties":{"id":{"type":"integer","format":"int64"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"description":{"type":"string"},"priority":{"type":"string","enum":["NotUrgent","Urgent"]},"status":{"$ref":"#/components/schemas/BaseEntity"},"processId":{"type":"integer","format":"int64"},"resultChecking":{"type":"boolean"},"assigner":{"$ref":"#/components/schemas/PersonRequest"},"parent":{"$ref":"#/components/schemas/BaseEntity"},"template":{"$ref":"#/components/schemas/BaseEntity"},"object":{"$ref":"#/components/schemas/BaseEntity"},"project":{"$ref":"#/components/schemas/BaseEntity"},"counterparty":{"$ref":"#/components/schemas/PersonRequest"},"dateTime":{"$ref":"#/components/schemas/TimePoint"},"startDateTime":{"$ref":"#/components/schemas/TimePoint"},"endDateTime":{"$ref":"#/components/schemas/TimePoint"},"delayedTillDate":{"$ref":"#/components/schemas/TimePoint"},"duration":{"type":"integer","format":"int64"},"durationUnit":{"type":"string","enum":["Minute","Hour","Day","Week","Month"]},"durationType":{"type":"string","enum":["CalendarDays","WorkerDays"]},"overdue":{"type":"boolean"},"closeToDeadLine":{"type":"boolean"},"notAcceptedInTime":{"type":"boolean"},"inFavorites":{"type":"boolean"},"isSummary":{"type":"boolean"},"isSequential":{"type":"boolean"},"assignees":{"$ref":"#/components/schemas/PeopleRequest"},"participants":{"$ref":"#/components/schemas/PeopleRequest"},"auditors":{"$ref":"#/components/schemas/PeopleRequest"},"isDeleted":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileRequest"}}}},"TaskUpdateRequest":{"title":"TaskUpdateRequest","type":"object","description":"","properties":{"id":{"type":"integer","format":"int64"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"description":{"type":"string"},"priority":{"type":"string","enum":["NotUrgent","Urgent"]},"status":{"$ref":"#/components/schemas/BaseEntity"},"processId":{"type":"integer","format":"int64"},"resultChecking":{"type":"boolean"},"assigner":{"$ref":"#/components/schemas/PersonRequest"},"parent":{"$ref":"#/components/schemas/BaseEntity"},"template":{"$ref":"#/components/schemas/BaseEntity"},"object":{"$ref":"#/components/schemas/BaseEntity"},"project":{"$ref":"#/components/schemas/BaseEntity"},"counterparty":{"$ref":"#/components/schemas/PersonRequest"},"dateTime":{"$ref":"#/components/schemas/TimePoint"},"startDateTime":{"$ref":"#/components/schemas/TimePoint"},"endDateTime":{"$ref":"#/components/schemas/TimePoint"},"hasStartDate":{"type":"boolean"},"hasEndDate":{"type":"boolean"},"hasStartTime":{"type":"boolean"},"hasEndTime":{"type":"boolean"},"delayedTillDate":{"$ref":"#/components/schemas/TimePoint"},"duration":{"type":"integer","format":"int64"},"durationUnit":{"type":"string","enum":["Minute","Hour","Day","Week","Month"]},"durationType":{"type":"string","enum":["CalendarDays","WorkerDays"]},"overdue":{"type":"boolean"},"closeToDeadLine":{"type":"boolean"},"notAcceptedInTime":{"type":"boolean"},"inFavorites":{"type":"boolean"},"isSummary":{"type":"boolean"},"isSequential":{"type":"boolean"},"assignees":{"$ref":"#/components/schemas/PeopleRequest"},"participants":{"$ref":"#/components/schemas/PeopleRequest"},"auditors":{"$ref":"#/components/schemas/PeopleRequest"},"isDeleted":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileRequest"}}}},"ChecklistItemResponse":{"title":"ChecklistItemResponse","type":"object","description":"","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"},"status":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}}},"parent":{"$ref":"#/components/schemas/BaseEntity"},"dateTime":{"$ref":"#/components/schemas/TimePoint"},"assignees":{"$ref":"#/components/schemas/PeopleResponse"}}},"CommentResponse":{"title":"CommentResponse","type":"object","x-examples":{},"properties":{"id":{"type":"integer","format":"int64"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"dateTime":{"$ref":"#/components/schemas/TimePoint"},"type":{"type":"string","enum":["Comment","Reminder","None"]},"fromType":{"type":"string","enum":["Planfix","Telegram","Facebook","Viber","WhatsApp","Mobile","Email","Charta","Skype","YandexChat","Avito","WebChatApi","None"]},"description":{"type":"string"},"task":{"$ref":"#/components/schemas/BaseEntity"},"project":{"$ref":"#/components/schemas/BaseEntity"},"contact":{"$ref":"#/components/schemas/PersonResponse"},"owner":{"$ref":"#/components/schemas/PersonResponse"},"isDeleted":{"type":"boolean"},"isPinned":{"type":"boolean"},"isHidden":{"type":"boolean"},"isNotRead":{"type":"boolean"},"recipients":{"$ref":"#/components/schemas/PeopleResponse"},"reminders":{"type":"array","items":{"$ref":"#/components/schemas/Reminder"}},"dataTags":{"type":"array","items":{"type":"object","properties":{"dataTag":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"}}},"key":{"type":"integer"}}}},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileResponse"}},"changeTaskStartDate":{"$ref":"#/components/schemas/ChangeDate"},"changeTaskExpectDate":{"$ref":"#/components/schemas/ChangeDate"},"changeStatus":{"type":"object","properties":{"newStatusId":{"type":"integer"},"oldStatusId":{"type":"integer"}}}}},"CommentCreateRequest":{"title":"CommentCreateRequest","type":"object","properties":{"sourceId":{"type":"string","format":"uuid"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"dateTime":{"$ref":"#/components/schemas/TimePoint"},"description":{"type":"string"},"owner":{"$ref":"#/components/schemas/PersonRequest"},"isPinned":{"type":"boolean"},"isHidden":{"type":"boolean"},"recipients":{"$ref":"#/components/schemas/NotifiedRequest"},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileRequest"}}}},"CommentUpdateRequest":{"type":"object","properties":{"sourceId":{"type":"string","format":"uuid"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"description":{"type":"string"},"isPinned":{"type":"boolean"},"isHidden":{"type":"boolean"},"recipients":{"$ref":"#/components/schemas/NotifiedRequest"},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileRequest"}}}},"CustomField":{"title":"CustomField","type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"},"names":{"type":"object","additionalProperties":{"type":"string","description":"Name of any language"}},"type":{"type":"integer","format":"int64","enum":["0 // Line","1 // Number","2 // Text","3 // Date","4 // Time","5 // Date and time","6 // Period of time","7 // Checkbox","8 // List","9 // Directory entry","10 // Contact","11 // Employee","12 // Counterparty","13 // Group, employee, or contact","14 // List of users","15 // Set of directory values","16 // Task","17 // Task set","20 // Set of values","21 // Files","22 // Project","23 // Data tag summaries","24 // Calculated field","25 // Location","26 // Subtask total","27 // AI results field"]},"objectType":{"type":"integer","format":"int64","enum":["0 // Task","1 // Contact","2 // Directory","3 // Project","4 // Data tag","5 // Main","6 // Employee"]},"groupId":{"type":"integer","format":"int64"},"directoryId":{"type":"integer","format":"int64"},"directoryFields":{"type":"array","items":{"type":"integer","format":"int64"}},"enumValues":{"type":"array","items":{"type":"string"}},"mainValue":{"type":"string","description":"Only for main fields"}}},"CustomFieldValueResponse":{"title":"CustomFieldValueResponse","type":"object","properties":{"field":{"$ref":"#/components/schemas/CustomField"},"value":{"type":"object"}}},"CustomFieldValueRequest":{"title":"CustomFieldValueRequest","type":"object","properties":{"field":{"$ref":"#/components/schemas/BaseEntity"},"value":{"type":"object"}}},"TaskStatus":{"title":"TaskStatus","type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"},"color":{"type":"string"},"isActive":{"type":"boolean"},"hasDeadline":{"type":"boolean"},"isAppliedIndividually":{"type":"boolean"},"texts":{"type":"array","items":{"type":"object","properties":{"lang":{"type":"string"},"name":{"type":"string"}}}}}},"Recurrence":{"title":"Recurrence","type":"object","description":"","properties":{"startDate":{"$ref":"#/components/schemas/TimePoint"},"endConditions":{"type":"object","properties":{"type":{"type":"string","enum":["NoEnd","ByCount","ByEndDate"]},"date":{"$ref":"#/components/schemas/TimePoint"},"repeatCount":{"type":"integer","format":"int64"},"notify":{"type":"object","properties":{"type":{"type":"integer"},"day":{"type":"integer"}}}}},"daily":{"type":"object","properties":{"type":{"type":"string","enum":["Every","EveryWorking","AfterComplete"]},"shift":{"type":"integer"}}},"weekly":{"type":"object","properties":{"type":{"type":"string","enum":["Every","AfterComplete"]},"shift":{"type":"integer"},"days":{"type":"array","items":{"type":"integer"}}}},"monthly":{"type":"object","properties":{"type":{"type":"string","enum":["Every","AfterComplete","Exact"]},"dayType":{"type":"string","enum":["Day","WorkDay","FreeDay","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]},"month":{"type":"integer"},"day":{"type":"integer"}}}}},"GroupResponse":{"title":"GroupResponse","type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}}},"GroupRequest":{"title":"GroupRequest","type":"object","properties":{"id":{"type":"integer","format":"int64"}}},"PeopleResponse":{"title":"PeopleResponse","type":"object","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/PersonResponse"}},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupResponse"}}}},"PeopleRequest":{"title":"PeopleRequest","type":"object","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/PersonRequest"}},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupRequest"}}}},"NotifiedRequest":{"title":"PeopleRequest","type":"object","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/PersonRequest"}},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupRequest"}},"roles":{"type":"string","enum":["assignee","participant","auditor","assigner"]}}},"PersonResponse":{"title":"PersonResponse","type":"object","properties":{"id":{"type":"string","format":"int64"},"name":{"type":"string"}}},"PersonRequest":{"title":"PersonRequest","type":"object","properties":{"id":{"type":"string","format":"int64"}}},"PhoneResponse":{"title":"PhoneResponse","type":"object","properties":{"number":{"type":"string"},"maskedNumber":{"type":"string"},"type":{"type":"integer","description":"1 - Mobile, 2 - Work, 3 - Home, 4 - Other"}}},"PhoneRequest":{"title":"PhoneRequest","type":"object","properties":{"number":{"type":"string"},"type":{"type":"integer","description":"1 - Mobile, 2 - Work, 3 - Home, 4 - Other"}}},"DataTag":{"title":"DataTag","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"group":{"$ref":"#/components/schemas/GroupResponse"},"fields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}}},"DataTagEntryResponse":{"title":"DataTagEntryResponse","type":"object","properties":{"dataTag":{"$ref":"#/components/schemas/DataTag"},"task":{"$ref":"#/components/schemas/BaseEntity"},"contact":{"$ref":"#/components/schemas/BaseEntity"},"key":{"type":"integer"},"commentId":{"type":"integer"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueResponse"}}}},"DataTagEntryCreateRequest":{"title":"DataTagEntryCreateRequest","type":"object","properties":{"dataTag":{"$ref":"#/components/schemas/BaseEntity"},"items":{"type":"array","items":{"type":"object","properties":{"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}}}}}},"x-examples":{}},"DataTagEntryUpdateRequest":{"title":"DataTagEntryUpdateRequest","type":"object","properties":{"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}}}},"Reminder":{"title":"Reminder","type":"object","properties":{"id":{"type":"integer"},"commentId":{"type":"integer"},"recurrenceId":{"type":"integer"},"dataTagEntryKey":{"type":"integer"},"reminderDate":{"$ref":"#/components/schemas/TimePoint"},"reminderDateToCreate":{"$ref":"#/components/schemas/TimePoint"},"reminded":{"type":"boolean"},"text":{"type":"string"},"type":{"type":"string","enum":["Exact","Before","None"]},"subtype":{"type":"string","enum":["BeforeTaskStart","BeforeTaskEnd","BeforeDataTagStart","BeforeDataTagEnd","None"]},"owner":{"$ref":"#/components/schemas/PersonResponse"},"recipientsRoles":{"type":"array","items":{"type":"string","enum":["Assigner","Participants","Assignees","Auditors"]}},"recipientsPeople":{"$ref":"#/components/schemas/PeopleResponse"}}},"TimePoint":{"title":"TimePoint","type":"object","properties":{"date":{"type":"string","example":"01-12-1900 (dd-MM-yyyy)"},"time":{"type":"string","example":"00:00 (HH:mm)"},"datetime":{"type":"string","example":"1900-12-01T00:00Z (yyyy-MM-dd'T'HH:mm'Z')","description":"By ISO format"}}},"ChangeDate":{"title":"ChangeDate","type":"object","properties":{"oldDateTime":{"$ref":"#/components/schemas/TimePoint"},"newDateTime":{"$ref":"#/components/schemas/TimePoint"},"hasOldDate":{"type":"boolean"},"hasNewDate":{"type":"boolean"},"hasOldTime":{"type":"boolean"},"hasNewTime":{"type":"boolean"}}},"FileResponse":{"title":"FileResponse","type":"object","properties":{"id":{"type":"integer"},"size":{"type":"integer"},"name":{"type":"string"}}},"FileRequest":{"title":"FileRequest","type":"object","properties":{"id":{"type":"integer"}}},"FileUploadRequest":{"title":"FileUploadRequest","type":"object","properties":{"name":{"type":"string"},"url":{"type":"string"}}},"ComplexTaskFilter":{"title":"Complex task filter","type":"object","x-examples":{"Filter by start date":{"type":13,"operator":"equal","value":{"dateType":"otherDate","dateValue":"22-03-2022"}},"Filter by start date with time":{"type":13,"operator":"equal","value":{"dateType":"otherRange_withTime","dateFrom":"22-03-2022 00:15","dateTo":"22-03-2022 03:35"}},"Filter by end date":{"type":14,"operator":"equal","value":{"dateType":"yesterday"}},"Filter by assigner":{"type":1,"operator":"equal","value":"user:1"},"Filter by assignees":{"type":2,"operator":"equal","value":"contact:5"},"Filter by audiotrs":{"type":3,"operator":"equal","value":"group:1"},"Filter by custom field user":{"type":109,"operator":"equal","value":"user:3","field":87},"Filter by has start date time":{"type":25,"operator":"equal","value":true},"Filter by counterparty":{"type":7,"operator":"equal","value":3}},"properties":{"type":{"type":"number","example":1,"enum":["1 // Task assigner","2 // Task assignee","3 // Task auditor","7 // ...",8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,28,29,33,34,35,38,39,41,51,59,60,69,70,71,72,73,79,93,101,102,103,105,106,107,108,109,112,113,114,152,153]},"operator":{"type":"string","enum":["equal","notequal","gt","lt"],"example":"equal"},"value":{"anyOf":[{}]},"field":{"type":"integer"},"subfilter":{"type":"object","properties":{"dataTagId":{"type":"number"},"filter":{"type":"object","properties":{"type":{"type":"number"},"field":{"type":"number"}}}}}},"required":["type","operator","value"],"description":"Complex task filters, <a target=\"blank\" href=\"https://planfix.com/ru/help/REST_API:_%D0%A1%D0%BB%D0%BE%D0%B6%D0%BD%D1%8B%D0%B5_%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D1%8B_%D0%B7%D0%B0%D0%B4%D0%B0%D1%87\"> more information</a>"},"ComplexProjectFilter":{"title":"Complex project filter","type":"object","properties":{"type":{"type":"number","example":1,"enum":["5001 // Project name","5002 // Project group","5003 // Project counterparty","5004 // Project owner",5005,5006,5007,5008,5009,5010,5011,5012,5013,5014,5015,5101,5102,5103,5104,5105,5106,5107,5108,5109,5110,5111,5112,5113,5115,5116,5117,5118]},"operator":{"type":"string","enum":["equal","notequal","gt","lt"],"example":"equal"},"value":{"anyOf":[{}]},"field":{"type":"integer"}},"required":["type","operator","value"],"description":"Complex project filters, <a target=\"blank\" href=\"https://planfix.com/ru/help/REST_API:_%D0%A1%D0%BB%D0%BE%D0%B6%D0%BD%D1%8B%D0%B5_%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D1%8B_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%BE%D0%B2\"> more information</a>"},"ComplexUserFilter":{"title":"Complex employee filter","type":"object","description":"Complex employee filters, <a target=\"blank\" href=\"https://planfix.com/ru/help/REST_API:_%D0%A1%D0%BB%D0%BE%D0%B6%D0%BD%D1%8B%D0%B5_%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D1%8B_%D1%81%D0%BE%D1%82%D1%80%D1%83%D0%B4%D0%BD%D0%B8%D0%BA%D0%BE%D0%B2\"> more information</a>","properties":{"type":{"type":"number","example":1,"enum":["9001 // Employee group","9002 // Employee phone","9003 // Employee external email","9004 // Employee extension number","9005 // Employee position name","9006 // Employee part of name","9008 // Employee number","9009 // Employee role","9101 // Employee custom field Line","9102 // Employee custom field Number","9103 // Employee custom field Date","9104 // Employee custom field Time","9105 // Employee custom field Checkbox","9106 // Employee custom field List","9107 // Employee custom field Directory entry","9108 // Employee custom field Contact","9109 // Employee custom field Employee","9110 // Employee custom field Counterparty","9111 // Employee custom field Set of values","9112 // Employee custom field Group, employee or contact","9113 // Employee custom field List of users","9114 // Employee custom field Set of directory values","9115 // Employee custom field Task","9116 // Employee custom field Task set","9117 // Employee custom field Project","9118 // Employee custom field Location","9120 // Employee birth date","9121 // Employee First name","9122 // Employee Middle name","9123 // Employee Last name","9126 // Employee telegramId","9127 // Employee position id"]},"operator":{"type":"string","enum":["equal","notequal","gt","lt"],"example":"equal"},"value":{"anyOf":[{}]},"field":{"type":"integer"}},"required":["type","operator","value"]},"ComplexContactFilter":{"title":"Complex contact filters","type":"object","properties":{"type":{"type":"number","example":1,"enum":["1 // Added","2 // Supervisor","12 // Create date","47 // Can see","48 // Can edit","4001 // Contact part of name","4002 // Contact position","4003 // Contact phone","4004 // Contact address","4005 // Contact part of email","4006 // Is company","4007 // Is contact","4008 // Contact group","4010 // Contact with access to Planfix","4011 // Contact birth date","4012 // Can a contact be task participants","4013 // Can a contact be task counterparty","4014 // Contact First name","4015 // Contact Last name","4016 // Contact template","4017 // Can't a contact be task participants","4018 // Can't a contact be task counterparty","4019 // Contact gender","4101 // Contact custom field List","4102 // Contact custom field Number","4103 // Contact custom field Date","4104 // Contact custom field Time","4105 // Contact custom field Checkbox","4106 // Contact custom field List","4107 // Contact custom field Directory entry","4108 // Contact custom field Contact","4109 // Contact custom field Employee","4110 // Contact custom field Counterparty","4111 // Contact custom field Set of values","4112 // Contact custom field Group, employee or contact","4113 // Contact custom field List of users","4114 // Contact custom field Set of directory values","4115 // Contact custom field Task","4116 // Contact custom field Task set","4117 // Contact custom field Project","4118 // Contact custom field Location","4152 // Contact custom field has a value","4153 // Contact custom field has no value","4221 // Contact part of secondary email","4222 // Contact Middle name","4223 // Contact birth date by year","4226 // Contact telegramUsername","4234 // Contact telegramId","4231 // Contact number"]},"operator":{"type":"string","enum":["equal","notequal","gt","lt"],"example":"equal"},"value":{"anyOf":[{}]},"field":{"type":"integer"},"subfilter":{"type":"object","properties":{"dataTagId":{"type":"number"},"filter":{"type":"object","properties":{"type":{"type":"number"},"field":{"type":"number"}}}}}},"required":["type","operator","value"],"description":"Complex contact filters, <a target=\"blank\" href=\"https://help.planfix.com/ru/REST_API:_%D0%A1%D0%BB%D0%BE%D0%B6%D0%BD%D1%8B%D0%B5_%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D1%8B_%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BA%D1%82%D0%BE%D0%B2\"> more information</a>"},"ComplexDataTagFilter":{"title":"Complex data tag filters","type":"object","description":"Complex data tag filters, <a target=\"blank\" href=\"https://planfix.com/ru/help/REST_API:_%D0%A1%D0%BB%D0%BE%D0%B6%D0%BD%D1%8B%D0%B5_%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D1%8B_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D1%82%D0%B8%D0%BA\"> more information</a>","properties":{"type":{"type":"number","example":1,"enum":["3101 // Custom field Date","3103 // Custom field List of users","3104 // Custom field Employee","3105 // Custom field Directory entry","3106 // Custom field Counterparty","3116 // Custom field Contact","3115 // Custom field Checkbox","3117 // Custom field Task","3108 // Custom field Line","3109 // Custom field Number","3111 // Custom field Group, employee or contact"]},"field":{"type":"integer"},"operator":{"type":"string","enum":["equal","notequal","gt","lt"],"example":"equal"},"value":{"anyOf":[{}]}},"required":["type","field","operator","value"]},"ComplexDirectoryFilter":{"title":"Complex directory filters","type":"object","description":"Complex directory filters, <a target=\"blank\" href=\"https://planfix.com/ru/help/REST_API:_%D0%A1%D0%BB%D0%BE%D0%B6%D0%BD%D1%8B%D0%B5_%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D1%8B_%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%BE%D0%B2\"> more information</a>","properties":{"type":{"type":"number","example":1,"enum":["6005 // Archived","6101 // Custom field Line","6102 // Custom field Number","6103 // Custom field Date","6104 // Custom field Time","6105 // Custom field Checkbox","6106 // Custom field List","6107 // Custom field Directory entry","6108 // Custom field Contact","6109 // Custom field Employee","6110 // Custom field Counterparty","6112 // Custom field Group, employee or contact","6113 // Custom field List of users","6114 // Custom field Set of directory values","6115 // Custom field Task","6117 // Custom field Project"]},"field":{"type":"integer"},"operator":{"type":"string","enum":["equal","notequal","gt","lt"],"example":"equal"},"value":{"anyOf":[{}]}},"required":["type","field","operator","value"]},"Filter":{"title":"Filter","type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"owner":{"$ref":"#/components/schemas/PersonResponse"}},"description":""},"UserResponse":{"title":"UserResponse","type":"object","description":"","properties":{"id":{"type":"integer","format":"int64"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"midname":{"type":"string"},"lastname":{"type":"string"},"gender":{"type":"string","example":"Male","enum":["NotDefined","Female","Male"]},"isDeleted":{"type":"boolean"},"birthDate":{"$ref":"#/components/schemas/TimePoint"},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupResponse"}},"role":{"type":"string","enum":["NotDefined","Admin","User","TechAdmin","UserWithoutAccess","Robot"]},"login":{"type":"string"},"email":{"type":"string","format":"email"},"secondaryEmails":{"type":"array","items":{"type":"string"}},"telegramId":{"type":"string"},"telegram":{"type":"string"},"status":{"type":"string","enum":["Active","ActiveWithoutAccess","Inactive"]},"phones":{"type":"array","items":{"$ref":"#/components/schemas/PhoneResponse"}},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueResponse"}},"languageCode":{"type":"string","enum":["En","Ru","Pl","Ka","Ro","Pt","Es","De","Az","Tr"],"example":"En"},"position":{"$ref":"#/components/schemas/PositionEntity"}}},"UserRequest":{"title":"UserRequest","type":"object","properties":{"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"midname":{"type":"string"},"lastname":{"type":"string"},"gender":{"type":"string","example":"Male","enum":["NotDefined","Female","Male"]},"isDeleted":{"type":"boolean"},"birthDate":{"$ref":"#/components/schemas/TimePoint"},"groups":{"type":"array","items":{"$ref":"#/components/schemas/GroupRequest"}},"role":{"type":"string","enum":["NotDefined","Admin","User","TechAdmin","UserWithoutAccess","Robot"]},"login":{"type":"string"},"password":{"type":"string","format":"password"},"email":{"type":"string","format":"email"},"secondaryEmails":{"type":"array","items":{"type":"string"}},"status":{"type":"string","enum":["Active","ActiveWithoutAccess","Inactive"]},"phones":{"type":"array","items":{"$ref":"#/components/schemas/PhoneRequest"}},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}},"languageCode":{"type":"string","enum":["En","Ru","Pl","Ka","Ro","Pt","Es","De","Az","Tr"],"example":"En"},"position":{"$ref":"#/components/schemas/PositionEntity"}}},"PositionEntity":{"title":"Position","type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}}},"ProjectResponse":{"title":"ProjectResponse","type":"object","description":"","properties":{"id":{"type":"integer","format":"int64"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"description":{"type":"string"},"status":{"$ref":"#/components/schemas/BaseEntity"},"owner":{"$ref":"#/components/schemas/PersonResponse"},"parent":{"$ref":"#/components/schemas/BaseEntity"},"template":{"$ref":"#/components/schemas/BaseEntity"},"group":{"$ref":"#/components/schemas/GroupResponse"},"counterparty":{"$ref":"#/components/schemas/PersonResponse"},"startDate":{"$ref":"#/components/schemas/TimePoint"},"endDate":{"$ref":"#/components/schemas/TimePoint"},"hasEndDate":{"type":"boolean"},"hiddenForEmployees":{"type":"boolean"},"hiddenForClients":{"type":"boolean"},"overdue":{"type":"boolean"},"isCloseToDeadline":{"type":"boolean"},"assignees":{"$ref":"#/components/schemas/PeopleResponse"},"participants":{"$ref":"#/components/schemas/PeopleResponse"},"auditors":{"$ref":"#/components/schemas/PeopleResponse"},"clientManagers":{"$ref":"#/components/schemas/PeopleResponse"},"isDeleted":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueResponse"}}},"x-examples":{}},"ProjectRequest":{"title":"ProjectRequest","type":"object","description":"","properties":{"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"description":{"type":"string"},"status":{"$ref":"#/components/schemas/BaseEntity"},"owner":{"$ref":"#/components/schemas/PersonRequest"},"parent":{"$ref":"#/components/schemas/BaseEntity"},"template":{"$ref":"#/components/schemas/BaseEntity"},"group":{"$ref":"#/components/schemas/GroupRequest"},"counterparty":{"$ref":"#/components/schemas/PersonRequest"},"startDate":{"$ref":"#/components/schemas/TimePoint"},"endDate":{"$ref":"#/components/schemas/TimePoint"},"hiddenForEmployees":{"type":"boolean"},"hiddenForClients":{"type":"boolean"},"overdue":{"type":"boolean"},"isCloseToDeadline":{"type":"boolean"},"assignees":{"$ref":"#/components/schemas/PeopleRequest"},"participants":{"$ref":"#/components/schemas/PeopleRequest"},"auditors":{"$ref":"#/components/schemas/PeopleRequest"},"clientManagers":{"$ref":"#/components/schemas/PeopleRequest"},"isDeleted":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileRequest"}}}},"ProjectUpdateRequest":{"title":"ProjectUpdateRequest","type":"object","description":"","properties":{"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"description":{"type":"string"},"status":{"$ref":"#/components/schemas/BaseEntity"},"owner":{"$ref":"#/components/schemas/PersonRequest"},"parent":{"$ref":"#/components/schemas/BaseEntity"},"template":{"$ref":"#/components/schemas/BaseEntity"},"group":{"$ref":"#/components/schemas/GroupRequest"},"counterparty":{"$ref":"#/components/schemas/PersonRequest"},"endDate":{"$ref":"#/components/schemas/TimePoint"},"hasEndDate":{"type":"boolean"},"hiddenForEmployees":{"type":"boolean"},"hiddenForClients":{"type":"boolean"},"overdue":{"type":"boolean"},"isCloseToDeadline":{"type":"boolean"},"assignees":{"$ref":"#/components/schemas/PeopleRequest"},"participants":{"$ref":"#/components/schemas/PeopleRequest"},"auditors":{"$ref":"#/components/schemas/PeopleRequest"},"clientManagers":{"$ref":"#/components/schemas/PeopleRequest"},"isDeleted":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}}}},"Directory":{"title":"Directory","type":"object","properties":{"id":{"type":"integer"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"group":{"$ref":"#/components/schemas/GroupResponse"},"fields":{"type":"array","items":{"$ref":"#/components/schemas/CustomField"}}},"description":""},"DirectoryEntryResponse":{"title":"DirectoryEntryResponse","type":"object","description":"","properties":{"directory":{"$ref":"#/components/schemas/Directory"},"key":{"type":"integer"},"parentKey":{"type":"integer"},"archived":{"type":"boolean"},"isGroup":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueResponse"}}}},"DirectoryEntryRequest":{"title":"DirectoryEntryRequest","type":"object","description":"","properties":{"parentKey":{"type":"number"},"name":{"type":"string"},"archived":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueRequest"}}}},"ApiResponseError":{"title":"ApiResponseError","type":"object","properties":{"result":{"type":"string"},"code":{"type":"integer","format":"int32"},"error":{"type":"string"}}},"ReportSave":{"title":"ReportSave","type":"object","properties":{"id":{"type":"integer"},"reportId":{"type":"integer"},"chunksCount":{"type":"integer"},"dateTime":{"$ref":"#/components/schemas/TimePoint"},"name":{"type":"string"}}},"ReportSaveData":{"title":"ReportSaveData","type":"object","properties":{"chunk":{"type":"integer"},"rows":{"type":"array","items":{"$ref":"#/components/schemas/ReportSaveDataRow"}}}},"ReportSaveDataRow":{"title":"ReportSaveDataRow","type":"object","properties":{"type":{"type":"string","enum":["Header","Normal"]},"depth":{"type":"integer"},"items":{"type":"array","items":{"$ref":"#/components/schemas/ReportSaveDataItem"}}}},"ReportSaveDataItem":{"title":"ReportSaveDataItem","type":"object","properties":{"text":{"type":"string"},"link":{"type":"string"},"hidden":{"type":"boolean"}}},"Report":{"title":"Report","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"fields":{"$ref":"#/components/schemas/ReportField"}}},"ReportField":{"title":"ReportField","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"num":{"type":"integer"},"formula":{"type":"string"},"hidden":{"type":"boolean"}}},"ObjectResponse":{"title":"ObjectResponse","type":"object","description":"","properties":{"id":{"type":"integer","format":"int64"},"sourceObjectId":{"type":"string","format":"uuid"},"sourceDataVersion":{"type":"string","maxLength":100,"example":"AADJIgAAAAA="},"name":{"type":"string"},"description":{"type":"string"},"priority":{"type":"string","enum":["NotUrgent","Urgent"]},"status":{"$ref":"#/components/schemas/TaskStatus"},"resultChecking":{"type":"boolean"},"assigner":{"$ref":"#/components/schemas/PersonResponse"},"parent":{"$ref":"#/components/schemas/BaseEntity"},"project":{"$ref":"#/components/schemas/BaseEntity"},"counterparty":{"$ref":"#/components/schemas/PersonResponse"},"dateTime":{"$ref":"#/components/schemas/TimePoint"},"startDateTime":{"$ref":"#/components/schemas/TimePoint"},"endDateTime":{"$ref":"#/components/schemas/TimePoint"},"hasStartDate":{"type":"boolean"},"hasEndDate":{"type":"boolean"},"hasStartTime":{"type":"boolean"},"hasEndTime":{"type":"boolean"},"dateOfLastUpdate":{"$ref":"#/components/schemas/TimePoint"},"duration":{"type":"integer","format":"int64"},"durationUnit":{"type":"string","enum":["Minute","Hour","Day","Week","Month"]},"durationType":{"type":"string","enum":["CalendarDays","WorkerDays"]},"inFavorites":{"type":"boolean"},"isSummary":{"type":"boolean"},"isSequential":{"type":"boolean"},"assignees":{"$ref":"#/components/schemas/PeopleResponse"},"participants":{"$ref":"#/components/schemas/PeopleResponse"},"auditors":{"$ref":"#/components/schemas/PeopleResponse"},"isDeleted":{"type":"boolean"},"customFieldData":{"type":"array","items":{"$ref":"#/components/schemas/CustomFieldValueResponse"}},"files":{"type":"array","items":{"$ref":"#/components/schemas/FileResponse"}}}}},"securitySchemes":{"rest_auth":{"type":"http","scheme":"bearer"}},"parameters":{"fields":{"name":"fields","in":"query","schema":{"type":"string","example":"id,name,description,10"},"description":"Fields returned - custom field identifiers, system field names, comma-delimited"},"sourceId":{"name":"sourceId","in":"query","required":false,"schema":{"type":"string","format":"uuid"},"description":"Unique identifier of external application"}},"responses":{}},"security":[{"rest_auth":[]}]}
