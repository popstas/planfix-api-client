/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomField } from './CustomField';
import {
    CustomFieldFromJSON,
    CustomFieldFromJSONTyped,
    CustomFieldToJSON,
    CustomFieldToJSONTyped,
} from './CustomField';

/**
 * 
 * @export
 * @interface CustomFieldValueResponse
 */
export interface CustomFieldValueResponse {
    /**
     * 
     * @type {CustomField}
     * @memberof CustomFieldValueResponse
     */
    field?: CustomField;
    /**
     * 
     * @type {object}
     * @memberof CustomFieldValueResponse
     */
    value?: object;
}

/**
 * Check if a given object implements the CustomFieldValueResponse interface.
 */
export function instanceOfCustomFieldValueResponse(value: object): value is CustomFieldValueResponse {
    return true;
}

export function CustomFieldValueResponseFromJSON(json: any): CustomFieldValueResponse {
    return CustomFieldValueResponseFromJSONTyped(json, false);
}

export function CustomFieldValueResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomFieldValueResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'field': json['field'] == null ? undefined : CustomFieldFromJSON(json['field']),
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function CustomFieldValueResponseToJSON(json: any): CustomFieldValueResponse {
    return CustomFieldValueResponseToJSONTyped(json, false);
}

export function CustomFieldValueResponseToJSONTyped(value?: CustomFieldValueResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'field': CustomFieldToJSON(value['field']),
        'value': value['value'],
    };
}

