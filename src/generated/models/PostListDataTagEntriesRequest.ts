/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ComplexDataTagFilter } from './ComplexDataTagFilter';
import {
    ComplexDataTagFilterFromJSON,
    ComplexDataTagFilterFromJSONTyped,
    ComplexDataTagFilterToJSON,
    ComplexDataTagFilterToJSONTyped,
} from './ComplexDataTagFilter';

/**
 * 
 * @export
 * @interface PostListDataTagEntriesRequest
 */
export interface PostListDataTagEntriesRequest {
    /**
     * Offset from beginning of list
     * @type {number}
     * @memberof PostListDataTagEntriesRequest
     */
    offset?: number;
    /**
     * Size of requested list
     * @type {number}
     * @memberof PostListDataTagEntriesRequest
     */
    pageSize?: number;
    /**
     * Fields returned - names, comma-delimited
     * @type {string}
     * @memberof PostListDataTagEntriesRequest
     */
    fields?: string;
    /**
     * Number of task
     * @type {number}
     * @memberof PostListDataTagEntriesRequest
     */
    taskId?: number;
    /**
     * Number of contact
     * @type {string}
     * @memberof PostListDataTagEntriesRequest
     */
    contactId?: string;
    /**
     * 
     * @type {Array<ComplexDataTagFilter>}
     * @memberof PostListDataTagEntriesRequest
     */
    filters?: Array<ComplexDataTagFilter>;
}

/**
 * Check if a given object implements the PostListDataTagEntriesRequest interface.
 */
export function instanceOfPostListDataTagEntriesRequest(value: object): value is PostListDataTagEntriesRequest {
    return true;
}

export function PostListDataTagEntriesRequestFromJSON(json: any): PostListDataTagEntriesRequest {
    return PostListDataTagEntriesRequestFromJSONTyped(json, false);
}

export function PostListDataTagEntriesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostListDataTagEntriesRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'offset': json['offset'] == null ? undefined : json['offset'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'fields': json['fields'] == null ? undefined : json['fields'],
        'taskId': json['taskId'] == null ? undefined : json['taskId'],
        'contactId': json['contactId'] == null ? undefined : json['contactId'],
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(ComplexDataTagFilterFromJSON)),
    };
}

export function PostListDataTagEntriesRequestToJSON(json: any): PostListDataTagEntriesRequest {
    return PostListDataTagEntriesRequestToJSONTyped(json, false);
}

export function PostListDataTagEntriesRequestToJSONTyped(value?: PostListDataTagEntriesRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'offset': value['offset'],
        'pageSize': value['pageSize'],
        'fields': value['fields'],
        'taskId': value['taskId'],
        'contactId': value['contactId'],
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(ComplexDataTagFilterToJSON)),
    };
}

