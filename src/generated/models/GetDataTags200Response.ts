/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataTag } from './DataTag';
import {
    DataTagFromJSON,
    DataTagFromJSONTyped,
    DataTagToJSON,
    DataTagToJSONTyped,
} from './DataTag';

/**
 * 
 * @export
 * @interface GetDataTags200Response
 */
export interface GetDataTags200Response {
    /**
     * 
     * @type {string}
     * @memberof GetDataTags200Response
     */
    result?: string;
    /**
     * 
     * @type {Array<DataTag>}
     * @memberof GetDataTags200Response
     */
    dataTags?: Array<DataTag>;
}

/**
 * Check if a given object implements the GetDataTags200Response interface.
 */
export function instanceOfGetDataTags200Response(value: object): value is GetDataTags200Response {
    return true;
}

export function GetDataTags200ResponseFromJSON(json: any): GetDataTags200Response {
    return GetDataTags200ResponseFromJSONTyped(json, false);
}

export function GetDataTags200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetDataTags200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'result': json['result'] == null ? undefined : json['result'],
        'dataTags': json['dataTags'] == null ? undefined : ((json['dataTags'] as Array<any>).map(DataTagFromJSON)),
    };
}

export function GetDataTags200ResponseToJSON(json: any): GetDataTags200Response {
    return GetDataTags200ResponseToJSONTyped(json, false);
}

export function GetDataTags200ResponseToJSONTyped(value?: GetDataTags200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'result': value['result'],
        'dataTags': value['dataTags'] == null ? undefined : ((value['dataTags'] as Array<any>).map(DataTagToJSON)),
    };
}

