/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomFieldValueResponse } from './CustomFieldValueResponse';
import {
    CustomFieldValueResponseFromJSON,
    CustomFieldValueResponseFromJSONTyped,
    CustomFieldValueResponseToJSON,
    CustomFieldValueResponseToJSONTyped,
} from './CustomFieldValueResponse';
import type { BaseEntity } from './BaseEntity';
import {
    BaseEntityFromJSON,
    BaseEntityFromJSONTyped,
    BaseEntityToJSON,
    BaseEntityToJSONTyped,
} from './BaseEntity';
import type { DataTag } from './DataTag';
import {
    DataTagFromJSON,
    DataTagFromJSONTyped,
    DataTagToJSON,
    DataTagToJSONTyped,
} from './DataTag';

/**
 * 
 * @export
 * @interface DataTagEntryResponse
 */
export interface DataTagEntryResponse {
    /**
     * 
     * @type {DataTag}
     * @memberof DataTagEntryResponse
     */
    dataTag?: DataTag;
    /**
     * 
     * @type {BaseEntity}
     * @memberof DataTagEntryResponse
     */
    task?: BaseEntity;
    /**
     * 
     * @type {BaseEntity}
     * @memberof DataTagEntryResponse
     */
    contact?: BaseEntity;
    /**
     * 
     * @type {number}
     * @memberof DataTagEntryResponse
     */
    key?: number;
    /**
     * 
     * @type {number}
     * @memberof DataTagEntryResponse
     */
    commentId?: number;
    /**
     * 
     * @type {Array<CustomFieldValueResponse>}
     * @memberof DataTagEntryResponse
     */
    customFieldData?: Array<CustomFieldValueResponse>;
}

/**
 * Check if a given object implements the DataTagEntryResponse interface.
 */
export function instanceOfDataTagEntryResponse(value: object): value is DataTagEntryResponse {
    return true;
}

export function DataTagEntryResponseFromJSON(json: any): DataTagEntryResponse {
    return DataTagEntryResponseFromJSONTyped(json, false);
}

export function DataTagEntryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataTagEntryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'dataTag': json['dataTag'] == null ? undefined : DataTagFromJSON(json['dataTag']),
        'task': json['task'] == null ? undefined : BaseEntityFromJSON(json['task']),
        'contact': json['contact'] == null ? undefined : BaseEntityFromJSON(json['contact']),
        'key': json['key'] == null ? undefined : json['key'],
        'commentId': json['commentId'] == null ? undefined : json['commentId'],
        'customFieldData': json['customFieldData'] == null ? undefined : ((json['customFieldData'] as Array<any>).map(CustomFieldValueResponseFromJSON)),
    };
}

export function DataTagEntryResponseToJSON(json: any): DataTagEntryResponse {
    return DataTagEntryResponseToJSONTyped(json, false);
}

export function DataTagEntryResponseToJSONTyped(value?: DataTagEntryResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataTag': DataTagToJSON(value['dataTag']),
        'task': BaseEntityToJSON(value['task']),
        'contact': BaseEntityToJSON(value['contact']),
        'key': value['key'],
        'commentId': value['commentId'],
        'customFieldData': value['customFieldData'] == null ? undefined : ((value['customFieldData'] as Array<any>).map(CustomFieldValueResponseToJSON)),
    };
}

