/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ComplexProjectFilter } from './ComplexProjectFilter';
import {
    ComplexProjectFilterFromJSON,
    ComplexProjectFilterFromJSONTyped,
    ComplexProjectFilterToJSON,
    ComplexProjectFilterToJSONTyped,
} from './ComplexProjectFilter';

/**
 * 
 * @export
 * @interface GetProjectListRequest
 */
export interface GetProjectListRequest {
    /**
     * Offset from beginning of list
     * @type {number}
     * @memberof GetProjectListRequest
     */
    offset?: number;
    /**
     * Size of requested list
     * @type {number}
     * @memberof GetProjectListRequest
     */
    pageSize?: number;
    /**
     * Fields returned - custom field identifiers, system field names, comma-delimited
     * @type {string}
     * @memberof GetProjectListRequest
     */
    fields?: string;
    /**
     * Unique identifier of external application
     * @type {string}
     * @memberof GetProjectListRequest
     */
    sourceId?: string;
    /**
     * 
     * @type {Array<ComplexProjectFilter>}
     * @memberof GetProjectListRequest
     */
    filters?: Array<ComplexProjectFilter>;
}

/**
 * Check if a given object implements the GetProjectListRequest interface.
 */
export function instanceOfGetProjectListRequest(value: object): value is GetProjectListRequest {
    return true;
}

export function GetProjectListRequestFromJSON(json: any): GetProjectListRequest {
    return GetProjectListRequestFromJSONTyped(json, false);
}

export function GetProjectListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProjectListRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'offset': json['offset'] == null ? undefined : json['offset'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'fields': json['fields'] == null ? undefined : json['fields'],
        'sourceId': json['sourceId'] == null ? undefined : json['sourceId'],
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(ComplexProjectFilterFromJSON)),
    };
}

export function GetProjectListRequestToJSON(json: any): GetProjectListRequest {
    return GetProjectListRequestToJSONTyped(json, false);
}

export function GetProjectListRequestToJSONTyped(value?: GetProjectListRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'offset': value['offset'],
        'pageSize': value['pageSize'],
        'fields': value['fields'],
        'sourceId': value['sourceId'],
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(ComplexProjectFilterToJSON)),
    };
}

