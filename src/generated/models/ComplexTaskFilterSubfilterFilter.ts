/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComplexTaskFilterSubfilterFilter
 */
export interface ComplexTaskFilterSubfilterFilter {
    /**
     * 
     * @type {number}
     * @memberof ComplexTaskFilterSubfilterFilter
     */
    type?: number;
    /**
     * 
     * @type {number}
     * @memberof ComplexTaskFilterSubfilterFilter
     */
    field?: number;
}

/**
 * Check if a given object implements the ComplexTaskFilterSubfilterFilter interface.
 */
export function instanceOfComplexTaskFilterSubfilterFilter(value: object): value is ComplexTaskFilterSubfilterFilter {
    return true;
}

export function ComplexTaskFilterSubfilterFilterFromJSON(json: any): ComplexTaskFilterSubfilterFilter {
    return ComplexTaskFilterSubfilterFilterFromJSONTyped(json, false);
}

export function ComplexTaskFilterSubfilterFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplexTaskFilterSubfilterFilter {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'field': json['field'] == null ? undefined : json['field'],
    };
}

export function ComplexTaskFilterSubfilterFilterToJSON(json: any): ComplexTaskFilterSubfilterFilter {
    return ComplexTaskFilterSubfilterFilterToJSONTyped(json, false);
}

export function ComplexTaskFilterSubfilterFilterToJSONTyped(value?: ComplexTaskFilterSubfilterFilter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'field': value['field'],
    };
}

