/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ComplexTaskFilterSubfilterFilter } from './ComplexTaskFilterSubfilterFilter';
import {
    ComplexTaskFilterSubfilterFilterFromJSON,
    ComplexTaskFilterSubfilterFilterFromJSONTyped,
    ComplexTaskFilterSubfilterFilterToJSON,
    ComplexTaskFilterSubfilterFilterToJSONTyped,
} from './ComplexTaskFilterSubfilterFilter';

/**
 * 
 * @export
 * @interface ComplexTaskFilterSubfilter
 */
export interface ComplexTaskFilterSubfilter {
    /**
     * 
     * @type {number}
     * @memberof ComplexTaskFilterSubfilter
     */
    dataTagId?: number;
    /**
     * 
     * @type {ComplexTaskFilterSubfilterFilter}
     * @memberof ComplexTaskFilterSubfilter
     */
    filter?: ComplexTaskFilterSubfilterFilter;
}

/**
 * Check if a given object implements the ComplexTaskFilterSubfilter interface.
 */
export function instanceOfComplexTaskFilterSubfilter(value: object): value is ComplexTaskFilterSubfilter {
    return true;
}

export function ComplexTaskFilterSubfilterFromJSON(json: any): ComplexTaskFilterSubfilter {
    return ComplexTaskFilterSubfilterFromJSONTyped(json, false);
}

export function ComplexTaskFilterSubfilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplexTaskFilterSubfilter {
    if (json == null) {
        return json;
    }
    return {
        
        'dataTagId': json['dataTagId'] == null ? undefined : json['dataTagId'],
        'filter': json['filter'] == null ? undefined : ComplexTaskFilterSubfilterFilterFromJSON(json['filter']),
    };
}

export function ComplexTaskFilterSubfilterToJSON(json: any): ComplexTaskFilterSubfilter {
    return ComplexTaskFilterSubfilterToJSONTyped(json, false);
}

export function ComplexTaskFilterSubfilterToJSONTyped(value?: ComplexTaskFilterSubfilter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataTagId': value['dataTagId'],
        'filter': ComplexTaskFilterSubfilterFilterToJSON(value['filter']),
    };
}

