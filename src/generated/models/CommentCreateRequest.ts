/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileRequest } from './FileRequest';
import {
    FileRequestFromJSON,
    FileRequestFromJSONTyped,
    FileRequestToJSON,
    FileRequestToJSONTyped,
} from './FileRequest';
import type { PersonRequest } from './PersonRequest';
import {
    PersonRequestFromJSON,
    PersonRequestFromJSONTyped,
    PersonRequestToJSON,
    PersonRequestToJSONTyped,
} from './PersonRequest';
import type { TimePoint } from './TimePoint';
import {
    TimePointFromJSON,
    TimePointFromJSONTyped,
    TimePointToJSON,
    TimePointToJSONTyped,
} from './TimePoint';
import type { NotifiedRequest } from './NotifiedRequest';
import {
    NotifiedRequestFromJSON,
    NotifiedRequestFromJSONTyped,
    NotifiedRequestToJSON,
    NotifiedRequestToJSONTyped,
} from './NotifiedRequest';

/**
 * 
 * @export
 * @interface CommentCreateRequest
 */
export interface CommentCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof CommentCreateRequest
     */
    sourceId?: string;
    /**
     * 
     * @type {string}
     * @memberof CommentCreateRequest
     */
    sourceObjectId?: string;
    /**
     * 
     * @type {string}
     * @memberof CommentCreateRequest
     */
    sourceDataVersion?: string;
    /**
     * 
     * @type {TimePoint}
     * @memberof CommentCreateRequest
     */
    dateTime?: TimePoint;
    /**
     * 
     * @type {string}
     * @memberof CommentCreateRequest
     */
    description?: string;
    /**
     * 
     * @type {PersonRequest}
     * @memberof CommentCreateRequest
     */
    owner?: PersonRequest;
    /**
     * 
     * @type {boolean}
     * @memberof CommentCreateRequest
     */
    isPinned?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CommentCreateRequest
     */
    isHidden?: boolean;
    /**
     * 
     * @type {NotifiedRequest}
     * @memberof CommentCreateRequest
     */
    recipients?: NotifiedRequest;
    /**
     * 
     * @type {Array<FileRequest>}
     * @memberof CommentCreateRequest
     */
    files?: Array<FileRequest>;
}

/**
 * Check if a given object implements the CommentCreateRequest interface.
 */
export function instanceOfCommentCreateRequest(value: object): value is CommentCreateRequest {
    return true;
}

export function CommentCreateRequestFromJSON(json: any): CommentCreateRequest {
    return CommentCreateRequestFromJSONTyped(json, false);
}

export function CommentCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'sourceId': json['sourceId'] == null ? undefined : json['sourceId'],
        'sourceObjectId': json['sourceObjectId'] == null ? undefined : json['sourceObjectId'],
        'sourceDataVersion': json['sourceDataVersion'] == null ? undefined : json['sourceDataVersion'],
        'dateTime': json['dateTime'] == null ? undefined : TimePointFromJSON(json['dateTime']),
        'description': json['description'] == null ? undefined : json['description'],
        'owner': json['owner'] == null ? undefined : PersonRequestFromJSON(json['owner']),
        'isPinned': json['isPinned'] == null ? undefined : json['isPinned'],
        'isHidden': json['isHidden'] == null ? undefined : json['isHidden'],
        'recipients': json['recipients'] == null ? undefined : NotifiedRequestFromJSON(json['recipients']),
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(FileRequestFromJSON)),
    };
}

export function CommentCreateRequestToJSON(json: any): CommentCreateRequest {
    return CommentCreateRequestToJSONTyped(json, false);
}

export function CommentCreateRequestToJSONTyped(value?: CommentCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sourceId': value['sourceId'],
        'sourceObjectId': value['sourceObjectId'],
        'sourceDataVersion': value['sourceDataVersion'],
        'dateTime': TimePointToJSON(value['dateTime']),
        'description': value['description'],
        'owner': PersonRequestToJSON(value['owner']),
        'isPinned': value['isPinned'],
        'isHidden': value['isHidden'],
        'recipients': NotifiedRequestToJSON(value['recipients']),
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(FileRequestToJSON)),
    };
}

