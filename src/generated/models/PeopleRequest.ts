/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GroupRequest } from './GroupRequest';
import {
    GroupRequestFromJSON,
    GroupRequestFromJSONTyped,
    GroupRequestToJSON,
    GroupRequestToJSONTyped,
} from './GroupRequest';
import type { PersonRequest } from './PersonRequest';
import {
    PersonRequestFromJSON,
    PersonRequestFromJSONTyped,
    PersonRequestToJSON,
    PersonRequestToJSONTyped,
} from './PersonRequest';

/**
 * 
 * @export
 * @interface PeopleRequest
 */
export interface PeopleRequest {
    /**
     * 
     * @type {Array<PersonRequest>}
     * @memberof PeopleRequest
     */
    users?: Array<PersonRequest>;
    /**
     * 
     * @type {Array<GroupRequest>}
     * @memberof PeopleRequest
     */
    groups?: Array<GroupRequest>;
}

/**
 * Check if a given object implements the PeopleRequest interface.
 */
export function instanceOfPeopleRequest(value: object): value is PeopleRequest {
    return true;
}

export function PeopleRequestFromJSON(json: any): PeopleRequest {
    return PeopleRequestFromJSONTyped(json, false);
}

export function PeopleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PeopleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(PersonRequestFromJSON)),
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(GroupRequestFromJSON)),
    };
}

export function PeopleRequestToJSON(json: any): PeopleRequest {
    return PeopleRequestToJSONTyped(json, false);
}

export function PeopleRequestToJSONTyped(value?: PeopleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(PersonRequestToJSON)),
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(GroupRequestToJSON)),
    };
}

