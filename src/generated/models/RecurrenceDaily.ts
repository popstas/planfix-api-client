/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RecurrenceDaily
 */
export interface RecurrenceDaily {
    /**
     * 
     * @type {string}
     * @memberof RecurrenceDaily
     */
    type?: RecurrenceDailyTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof RecurrenceDaily
     */
    shift?: number;
}


/**
 * @export
 */
export const RecurrenceDailyTypeEnum = {
    Every: 'Every',
    EveryWorking: 'EveryWorking',
    AfterComplete: 'AfterComplete'
} as const;
export type RecurrenceDailyTypeEnum = typeof RecurrenceDailyTypeEnum[keyof typeof RecurrenceDailyTypeEnum];


/**
 * Check if a given object implements the RecurrenceDaily interface.
 */
export function instanceOfRecurrenceDaily(value: object): value is RecurrenceDaily {
    return true;
}

export function RecurrenceDailyFromJSON(json: any): RecurrenceDaily {
    return RecurrenceDailyFromJSONTyped(json, false);
}

export function RecurrenceDailyFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecurrenceDaily {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'shift': json['shift'] == null ? undefined : json['shift'],
    };
}

export function RecurrenceDailyToJSON(json: any): RecurrenceDaily {
    return RecurrenceDailyToJSONTyped(json, false);
}

export function RecurrenceDailyToJSONTyped(value?: RecurrenceDaily | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'shift': value['shift'],
    };
}

