/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaskStatusTextsInner } from './TaskStatusTextsInner';
import {
    TaskStatusTextsInnerFromJSON,
    TaskStatusTextsInnerFromJSONTyped,
    TaskStatusTextsInnerToJSON,
    TaskStatusTextsInnerToJSONTyped,
} from './TaskStatusTextsInner';

/**
 * 
 * @export
 * @interface TaskStatus
 */
export interface TaskStatus {
    /**
     * 
     * @type {number}
     * @memberof TaskStatus
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskStatus
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskStatus
     */
    color?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TaskStatus
     */
    isActive?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskStatus
     */
    hasDeadline?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskStatus
     */
    isAppliedIndividually?: boolean;
    /**
     * 
     * @type {Array<TaskStatusTextsInner>}
     * @memberof TaskStatus
     */
    texts?: Array<TaskStatusTextsInner>;
}

/**
 * Check if a given object implements the TaskStatus interface.
 */
export function instanceOfTaskStatus(value: object): value is TaskStatus {
    return true;
}

export function TaskStatusFromJSON(json: any): TaskStatus {
    return TaskStatusFromJSONTyped(json, false);
}

export function TaskStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'color': json['color'] == null ? undefined : json['color'],
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
        'hasDeadline': json['hasDeadline'] == null ? undefined : json['hasDeadline'],
        'isAppliedIndividually': json['isAppliedIndividually'] == null ? undefined : json['isAppliedIndividually'],
        'texts': json['texts'] == null ? undefined : ((json['texts'] as Array<any>).map(TaskStatusTextsInnerFromJSON)),
    };
}

export function TaskStatusToJSON(json: any): TaskStatus {
    return TaskStatusToJSONTyped(json, false);
}

export function TaskStatusToJSONTyped(value?: TaskStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'color': value['color'],
        'isActive': value['isActive'],
        'hasDeadline': value['hasDeadline'],
        'isAppliedIndividually': value['isAppliedIndividually'],
        'texts': value['texts'] == null ? undefined : ((value['texts'] as Array<any>).map(TaskStatusTextsInnerToJSON)),
    };
}

