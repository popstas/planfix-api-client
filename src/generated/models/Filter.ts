/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PersonResponse } from './PersonResponse';
import {
    PersonResponseFromJSON,
    PersonResponseFromJSONTyped,
    PersonResponseToJSON,
    PersonResponseToJSONTyped,
} from './PersonResponse';

/**
 * 
 * @export
 * @interface Filter
 */
export interface Filter {
    /**
     * 
     * @type {string}
     * @memberof Filter
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Filter
     */
    name?: string;
    /**
     * 
     * @type {PersonResponse}
     * @memberof Filter
     */
    owner?: PersonResponse;
}

/**
 * Check if a given object implements the Filter interface.
 */
export function instanceOfFilter(value: object): value is Filter {
    return true;
}

export function FilterFromJSON(json: any): Filter {
    return FilterFromJSONTyped(json, false);
}

export function FilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): Filter {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'owner': json['owner'] == null ? undefined : PersonResponseFromJSON(json['owner']),
    };
}

export function FilterToJSON(json: any): Filter {
    return FilterToJSONTyped(json, false);
}

export function FilterToJSONTyped(value?: Filter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'owner': PersonResponseToJSON(value['owner']),
    };
}

