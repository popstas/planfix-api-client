/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomFieldValueResponse } from './CustomFieldValueResponse';
import {
    CustomFieldValueResponseFromJSON,
    CustomFieldValueResponseFromJSONTyped,
    CustomFieldValueResponseToJSON,
    CustomFieldValueResponseToJSONTyped,
} from './CustomFieldValueResponse';
import type { Directory } from './Directory';
import {
    DirectoryFromJSON,
    DirectoryFromJSONTyped,
    DirectoryToJSON,
    DirectoryToJSONTyped,
} from './Directory';

/**
 * 
 * @export
 * @interface DirectoryEntryResponse
 */
export interface DirectoryEntryResponse {
    /**
     * 
     * @type {Directory}
     * @memberof DirectoryEntryResponse
     */
    directory?: Directory;
    /**
     * 
     * @type {number}
     * @memberof DirectoryEntryResponse
     */
    key?: number;
    /**
     * 
     * @type {number}
     * @memberof DirectoryEntryResponse
     */
    parentKey?: number;
    /**
     * 
     * @type {boolean}
     * @memberof DirectoryEntryResponse
     */
    archived?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DirectoryEntryResponse
     */
    isGroup?: boolean;
    /**
     * 
     * @type {Array<CustomFieldValueResponse>}
     * @memberof DirectoryEntryResponse
     */
    customFieldData?: Array<CustomFieldValueResponse>;
}

/**
 * Check if a given object implements the DirectoryEntryResponse interface.
 */
export function instanceOfDirectoryEntryResponse(value: object): value is DirectoryEntryResponse {
    return true;
}

export function DirectoryEntryResponseFromJSON(json: any): DirectoryEntryResponse {
    return DirectoryEntryResponseFromJSONTyped(json, false);
}

export function DirectoryEntryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DirectoryEntryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'directory': json['directory'] == null ? undefined : DirectoryFromJSON(json['directory']),
        'key': json['key'] == null ? undefined : json['key'],
        'parentKey': json['parentKey'] == null ? undefined : json['parentKey'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'isGroup': json['isGroup'] == null ? undefined : json['isGroup'],
        'customFieldData': json['customFieldData'] == null ? undefined : ((json['customFieldData'] as Array<any>).map(CustomFieldValueResponseFromJSON)),
    };
}

export function DirectoryEntryResponseToJSON(json: any): DirectoryEntryResponse {
    return DirectoryEntryResponseToJSONTyped(json, false);
}

export function DirectoryEntryResponseToJSONTyped(value?: DirectoryEntryResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'directory': DirectoryToJSON(value['directory']),
        'key': value['key'],
        'parentKey': value['parentKey'],
        'archived': value['archived'],
        'isGroup': value['isGroup'],
        'customFieldData': value['customFieldData'] == null ? undefined : ((value['customFieldData'] as Array<any>).map(CustomFieldValueResponseToJSON)),
    };
}

