/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PeopleRequest } from './PeopleRequest';
import {
    PeopleRequestFromJSON,
    PeopleRequestFromJSONTyped,
    PeopleRequestToJSON,
    PeopleRequestToJSONTyped,
} from './PeopleRequest';
import type { FileRequest } from './FileRequest';
import {
    FileRequestFromJSON,
    FileRequestFromJSONTyped,
    FileRequestToJSON,
    FileRequestToJSONTyped,
} from './FileRequest';
import type { BaseEntity } from './BaseEntity';
import {
    BaseEntityFromJSON,
    BaseEntityFromJSONTyped,
    BaseEntityToJSON,
    BaseEntityToJSONTyped,
} from './BaseEntity';
import type { CustomFieldValueRequest } from './CustomFieldValueRequest';
import {
    CustomFieldValueRequestFromJSON,
    CustomFieldValueRequestFromJSONTyped,
    CustomFieldValueRequestToJSON,
    CustomFieldValueRequestToJSONTyped,
} from './CustomFieldValueRequest';
import type { PersonRequest } from './PersonRequest';
import {
    PersonRequestFromJSON,
    PersonRequestFromJSONTyped,
    PersonRequestToJSON,
    PersonRequestToJSONTyped,
} from './PersonRequest';
import type { TimePoint } from './TimePoint';
import {
    TimePointFromJSON,
    TimePointFromJSONTyped,
    TimePointToJSON,
    TimePointToJSONTyped,
} from './TimePoint';

/**
 * 
 * @export
 * @interface TaskUpdateRequest
 */
export interface TaskUpdateRequest {
    /**
     * 
     * @type {number}
     * @memberof TaskUpdateRequest
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskUpdateRequest
     */
    sourceObjectId?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskUpdateRequest
     */
    sourceDataVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskUpdateRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskUpdateRequest
     */
    priority?: TaskUpdateRequestPriorityEnum;
    /**
     * 
     * @type {BaseEntity}
     * @memberof TaskUpdateRequest
     */
    status?: BaseEntity;
    /**
     * 
     * @type {number}
     * @memberof TaskUpdateRequest
     */
    processId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    resultChecking?: boolean;
    /**
     * 
     * @type {PersonRequest}
     * @memberof TaskUpdateRequest
     */
    assigner?: PersonRequest;
    /**
     * 
     * @type {BaseEntity}
     * @memberof TaskUpdateRequest
     */
    parent?: BaseEntity;
    /**
     * 
     * @type {BaseEntity}
     * @memberof TaskUpdateRequest
     */
    template?: BaseEntity;
    /**
     * 
     * @type {BaseEntity}
     * @memberof TaskUpdateRequest
     */
    object?: BaseEntity;
    /**
     * 
     * @type {BaseEntity}
     * @memberof TaskUpdateRequest
     */
    project?: BaseEntity;
    /**
     * 
     * @type {PersonRequest}
     * @memberof TaskUpdateRequest
     */
    counterparty?: PersonRequest;
    /**
     * 
     * @type {TimePoint}
     * @memberof TaskUpdateRequest
     */
    dateTime?: TimePoint;
    /**
     * 
     * @type {TimePoint}
     * @memberof TaskUpdateRequest
     */
    startDateTime?: TimePoint;
    /**
     * 
     * @type {TimePoint}
     * @memberof TaskUpdateRequest
     */
    endDateTime?: TimePoint;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    hasStartDate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    hasEndDate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    hasStartTime?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    hasEndTime?: boolean;
    /**
     * 
     * @type {TimePoint}
     * @memberof TaskUpdateRequest
     */
    delayedTillDate?: TimePoint;
    /**
     * 
     * @type {number}
     * @memberof TaskUpdateRequest
     */
    duration?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskUpdateRequest
     */
    durationUnit?: TaskUpdateRequestDurationUnitEnum;
    /**
     * 
     * @type {string}
     * @memberof TaskUpdateRequest
     */
    durationType?: TaskUpdateRequestDurationTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    overdue?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    closeToDeadLine?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    notAcceptedInTime?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    inFavorites?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    isSummary?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    isSequential?: boolean;
    /**
     * 
     * @type {PeopleRequest}
     * @memberof TaskUpdateRequest
     */
    assignees?: PeopleRequest;
    /**
     * 
     * @type {PeopleRequest}
     * @memberof TaskUpdateRequest
     */
    participants?: PeopleRequest;
    /**
     * 
     * @type {PeopleRequest}
     * @memberof TaskUpdateRequest
     */
    auditors?: PeopleRequest;
    /**
     * 
     * @type {boolean}
     * @memberof TaskUpdateRequest
     */
    isDeleted?: boolean;
    /**
     * 
     * @type {Array<CustomFieldValueRequest>}
     * @memberof TaskUpdateRequest
     */
    customFieldData?: Array<CustomFieldValueRequest>;
    /**
     * 
     * @type {Array<FileRequest>}
     * @memberof TaskUpdateRequest
     */
    files?: Array<FileRequest>;
}


/**
 * @export
 */
export const TaskUpdateRequestPriorityEnum = {
    NotUrgent: 'NotUrgent',
    Urgent: 'Urgent'
} as const;
export type TaskUpdateRequestPriorityEnum = typeof TaskUpdateRequestPriorityEnum[keyof typeof TaskUpdateRequestPriorityEnum];

/**
 * @export
 */
export const TaskUpdateRequestDurationUnitEnum = {
    Minute: 'Minute',
    Hour: 'Hour',
    Day: 'Day',
    Week: 'Week',
    Month: 'Month'
} as const;
export type TaskUpdateRequestDurationUnitEnum = typeof TaskUpdateRequestDurationUnitEnum[keyof typeof TaskUpdateRequestDurationUnitEnum];

/**
 * @export
 */
export const TaskUpdateRequestDurationTypeEnum = {
    CalendarDays: 'CalendarDays',
    WorkerDays: 'WorkerDays'
} as const;
export type TaskUpdateRequestDurationTypeEnum = typeof TaskUpdateRequestDurationTypeEnum[keyof typeof TaskUpdateRequestDurationTypeEnum];


/**
 * Check if a given object implements the TaskUpdateRequest interface.
 */
export function instanceOfTaskUpdateRequest(value: object): value is TaskUpdateRequest {
    return true;
}

export function TaskUpdateRequestFromJSON(json: any): TaskUpdateRequest {
    return TaskUpdateRequestFromJSONTyped(json, false);
}

export function TaskUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'sourceObjectId': json['sourceObjectId'] == null ? undefined : json['sourceObjectId'],
        'sourceDataVersion': json['sourceDataVersion'] == null ? undefined : json['sourceDataVersion'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'status': json['status'] == null ? undefined : BaseEntityFromJSON(json['status']),
        'processId': json['processId'] == null ? undefined : json['processId'],
        'resultChecking': json['resultChecking'] == null ? undefined : json['resultChecking'],
        'assigner': json['assigner'] == null ? undefined : PersonRequestFromJSON(json['assigner']),
        'parent': json['parent'] == null ? undefined : BaseEntityFromJSON(json['parent']),
        'template': json['template'] == null ? undefined : BaseEntityFromJSON(json['template']),
        'object': json['object'] == null ? undefined : BaseEntityFromJSON(json['object']),
        'project': json['project'] == null ? undefined : BaseEntityFromJSON(json['project']),
        'counterparty': json['counterparty'] == null ? undefined : PersonRequestFromJSON(json['counterparty']),
        'dateTime': json['dateTime'] == null ? undefined : TimePointFromJSON(json['dateTime']),
        'startDateTime': json['startDateTime'] == null ? undefined : TimePointFromJSON(json['startDateTime']),
        'endDateTime': json['endDateTime'] == null ? undefined : TimePointFromJSON(json['endDateTime']),
        'hasStartDate': json['hasStartDate'] == null ? undefined : json['hasStartDate'],
        'hasEndDate': json['hasEndDate'] == null ? undefined : json['hasEndDate'],
        'hasStartTime': json['hasStartTime'] == null ? undefined : json['hasStartTime'],
        'hasEndTime': json['hasEndTime'] == null ? undefined : json['hasEndTime'],
        'delayedTillDate': json['delayedTillDate'] == null ? undefined : TimePointFromJSON(json['delayedTillDate']),
        'duration': json['duration'] == null ? undefined : json['duration'],
        'durationUnit': json['durationUnit'] == null ? undefined : json['durationUnit'],
        'durationType': json['durationType'] == null ? undefined : json['durationType'],
        'overdue': json['overdue'] == null ? undefined : json['overdue'],
        'closeToDeadLine': json['closeToDeadLine'] == null ? undefined : json['closeToDeadLine'],
        'notAcceptedInTime': json['notAcceptedInTime'] == null ? undefined : json['notAcceptedInTime'],
        'inFavorites': json['inFavorites'] == null ? undefined : json['inFavorites'],
        'isSummary': json['isSummary'] == null ? undefined : json['isSummary'],
        'isSequential': json['isSequential'] == null ? undefined : json['isSequential'],
        'assignees': json['assignees'] == null ? undefined : PeopleRequestFromJSON(json['assignees']),
        'participants': json['participants'] == null ? undefined : PeopleRequestFromJSON(json['participants']),
        'auditors': json['auditors'] == null ? undefined : PeopleRequestFromJSON(json['auditors']),
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
        'customFieldData': json['customFieldData'] == null ? undefined : ((json['customFieldData'] as Array<any>).map(CustomFieldValueRequestFromJSON)),
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(FileRequestFromJSON)),
    };
}

export function TaskUpdateRequestToJSON(json: any): TaskUpdateRequest {
    return TaskUpdateRequestToJSONTyped(json, false);
}

export function TaskUpdateRequestToJSONTyped(value?: TaskUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'sourceObjectId': value['sourceObjectId'],
        'sourceDataVersion': value['sourceDataVersion'],
        'name': value['name'],
        'description': value['description'],
        'priority': value['priority'],
        'status': BaseEntityToJSON(value['status']),
        'processId': value['processId'],
        'resultChecking': value['resultChecking'],
        'assigner': PersonRequestToJSON(value['assigner']),
        'parent': BaseEntityToJSON(value['parent']),
        'template': BaseEntityToJSON(value['template']),
        'object': BaseEntityToJSON(value['object']),
        'project': BaseEntityToJSON(value['project']),
        'counterparty': PersonRequestToJSON(value['counterparty']),
        'dateTime': TimePointToJSON(value['dateTime']),
        'startDateTime': TimePointToJSON(value['startDateTime']),
        'endDateTime': TimePointToJSON(value['endDateTime']),
        'hasStartDate': value['hasStartDate'],
        'hasEndDate': value['hasEndDate'],
        'hasStartTime': value['hasStartTime'],
        'hasEndTime': value['hasEndTime'],
        'delayedTillDate': TimePointToJSON(value['delayedTillDate']),
        'duration': value['duration'],
        'durationUnit': value['durationUnit'],
        'durationType': value['durationType'],
        'overdue': value['overdue'],
        'closeToDeadLine': value['closeToDeadLine'],
        'notAcceptedInTime': value['notAcceptedInTime'],
        'inFavorites': value['inFavorites'],
        'isSummary': value['isSummary'],
        'isSequential': value['isSequential'],
        'assignees': PeopleRequestToJSON(value['assignees']),
        'participants': PeopleRequestToJSON(value['participants']),
        'auditors': PeopleRequestToJSON(value['auditors']),
        'isDeleted': value['isDeleted'],
        'customFieldData': value['customFieldData'] == null ? undefined : ((value['customFieldData'] as Array<any>).map(CustomFieldValueRequestToJSON)),
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(FileRequestToJSON)),
    };
}

