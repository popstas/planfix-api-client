/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ComplexTaskFilter } from './ComplexTaskFilter';
import {
    ComplexTaskFilterFromJSON,
    ComplexTaskFilterFromJSONTyped,
    ComplexTaskFilterToJSON,
    ComplexTaskFilterToJSONTyped,
} from './ComplexTaskFilter';

/**
 * 
 * @export
 * @interface GetTaskListRequest
 */
export interface GetTaskListRequest {
    /**
     * Offset from beginning of list
     * @type {number}
     * @memberof GetTaskListRequest
     */
    offset?: number;
    /**
     * Size of requested list
     * @type {number}
     * @memberof GetTaskListRequest
     */
    pageSize?: number;
    /**
     * Id for task filter, get list by method '/task/filters'
     * @type {string}
     * @memberof GetTaskListRequest
     */
    filterId?: string;
    /**
     * 
     * @type {Array<ComplexTaskFilter>}
     * @memberof GetTaskListRequest
     */
    filters?: Array<ComplexTaskFilter>;
    /**
     * Fields returned - custom field identifiers, system field names, comma-delimited. <br>*Possible for system fields:* id, name, description, priority, status, processId, resultChecking, type, assigner, parent, object, template, project, counterparty, dateTime, startDateTime, endDateTime, hasStartDate, hasEndDate, hasStartTime, hasEndTime, delayedTillDate, actualCompletionDate, dateOfLastUpdate, duration, durationUnit, durationType, overdue, closeToDeadLine, notAcceptedInTime, inFavorites, isSummary, isSequential, assignees, participants, auditors, recurrence, isDeleted, files, sourceObjectId, sourceDataVersion
     * @type {string}
     * @memberof GetTaskListRequest
     */
    fields?: string;
    /**
     * Unique identifier of external application
     * @type {string}
     * @memberof GetTaskListRequest
     */
    sourceId?: string;
}

/**
 * Check if a given object implements the GetTaskListRequest interface.
 */
export function instanceOfGetTaskListRequest(value: object): value is GetTaskListRequest {
    return true;
}

export function GetTaskListRequestFromJSON(json: any): GetTaskListRequest {
    return GetTaskListRequestFromJSONTyped(json, false);
}

export function GetTaskListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTaskListRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'offset': json['offset'] == null ? undefined : json['offset'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'filterId': json['filterId'] == null ? undefined : json['filterId'],
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(ComplexTaskFilterFromJSON)),
        'fields': json['fields'] == null ? undefined : json['fields'],
        'sourceId': json['sourceId'] == null ? undefined : json['sourceId'],
    };
}

export function GetTaskListRequestToJSON(json: any): GetTaskListRequest {
    return GetTaskListRequestToJSONTyped(json, false);
}

export function GetTaskListRequestToJSONTyped(value?: GetTaskListRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'offset': value['offset'],
        'pageSize': value['pageSize'],
        'filterId': value['filterId'],
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(ComplexTaskFilterToJSON)),
        'fields': value['fields'],
        'sourceId': value['sourceId'],
    };
}

