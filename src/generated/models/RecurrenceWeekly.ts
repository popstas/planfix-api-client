/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RecurrenceWeekly
 */
export interface RecurrenceWeekly {
    /**
     * 
     * @type {string}
     * @memberof RecurrenceWeekly
     */
    type?: RecurrenceWeeklyTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof RecurrenceWeekly
     */
    shift?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof RecurrenceWeekly
     */
    days?: Array<number>;
}


/**
 * @export
 */
export const RecurrenceWeeklyTypeEnum = {
    Every: 'Every',
    AfterComplete: 'AfterComplete'
} as const;
export type RecurrenceWeeklyTypeEnum = typeof RecurrenceWeeklyTypeEnum[keyof typeof RecurrenceWeeklyTypeEnum];


/**
 * Check if a given object implements the RecurrenceWeekly interface.
 */
export function instanceOfRecurrenceWeekly(value: object): value is RecurrenceWeekly {
    return true;
}

export function RecurrenceWeeklyFromJSON(json: any): RecurrenceWeekly {
    return RecurrenceWeeklyFromJSONTyped(json, false);
}

export function RecurrenceWeeklyFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecurrenceWeekly {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'shift': json['shift'] == null ? undefined : json['shift'],
        'days': json['days'] == null ? undefined : json['days'],
    };
}

export function RecurrenceWeeklyToJSON(json: any): RecurrenceWeekly {
    return RecurrenceWeeklyToJSONTyped(json, false);
}

export function RecurrenceWeeklyToJSONTyped(value?: RecurrenceWeekly | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'shift': value['shift'],
        'days': value['days'],
    };
}

