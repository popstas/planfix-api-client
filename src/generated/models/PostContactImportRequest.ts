/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContactRequest } from './ContactRequest';
import {
    ContactRequestFromJSON,
    ContactRequestFromJSONTyped,
    ContactRequestToJSON,
    ContactRequestToJSONTyped,
} from './ContactRequest';

/**
 * 
 * @export
 * @interface PostContactImportRequest
 */
export interface PostContactImportRequest {
    /**
     * Silent mode
     * @type {boolean}
     * @memberof PostContactImportRequest
     */
    silent?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PostContactImportRequest
     */
    sourceId?: string;
    /**
     * 
     * @type {number}
     * @memberof PostContactImportRequest
     */
    contactTemplateId?: number;
    /**
     * 
     * @type {number}
     * @memberof PostContactImportRequest
     */
    companyTemplateId?: number;
    /**
     * Enum: ignore, update, none
     * @type {string}
     * @memberof PostContactImportRequest
     */
    optionImportDuplicate?: string;
    /**
     * Enum: email-phone-name-ifnot, email-phone-name, email-phone, phone, name, email-and-phone-and-name, number, custom  OR custom:{fieldId}
     * @type {string}
     * @memberof PostContactImportRequest
     */
    optionImportUniqueField?: string;
    /**
     * Enum: name, email-phone-name
     * @type {string}
     * @memberof PostContactImportRequest
     */
    optionImportUniqueDefaultField?: string;
    /**
     * 
     * @type {Array<ContactRequest>}
     * @memberof PostContactImportRequest
     */
    contacts?: Array<ContactRequest>;
}

/**
 * Check if a given object implements the PostContactImportRequest interface.
 */
export function instanceOfPostContactImportRequest(value: object): value is PostContactImportRequest {
    return true;
}

export function PostContactImportRequestFromJSON(json: any): PostContactImportRequest {
    return PostContactImportRequestFromJSONTyped(json, false);
}

export function PostContactImportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostContactImportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'silent': json['silent'] == null ? undefined : json['silent'],
        'sourceId': json['sourceId'] == null ? undefined : json['sourceId'],
        'contactTemplateId': json['contactTemplateId'] == null ? undefined : json['contactTemplateId'],
        'companyTemplateId': json['companyTemplateId'] == null ? undefined : json['companyTemplateId'],
        'optionImportDuplicate': json['optionImportDuplicate'] == null ? undefined : json['optionImportDuplicate'],
        'optionImportUniqueField': json['optionImportUniqueField'] == null ? undefined : json['optionImportUniqueField'],
        'optionImportUniqueDefaultField': json['optionImportUniqueDefaultField'] == null ? undefined : json['optionImportUniqueDefaultField'],
        'contacts': json['contacts'] == null ? undefined : ((json['contacts'] as Array<any>).map(ContactRequestFromJSON)),
    };
}

export function PostContactImportRequestToJSON(json: any): PostContactImportRequest {
    return PostContactImportRequestToJSONTyped(json, false);
}

export function PostContactImportRequestToJSONTyped(value?: PostContactImportRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'silent': value['silent'],
        'sourceId': value['sourceId'],
        'contactTemplateId': value['contactTemplateId'],
        'companyTemplateId': value['companyTemplateId'],
        'optionImportDuplicate': value['optionImportDuplicate'],
        'optionImportUniqueField': value['optionImportUniqueField'],
        'optionImportUniqueDefaultField': value['optionImportUniqueDefaultField'],
        'contacts': value['contacts'] == null ? undefined : ((value['contacts'] as Array<any>).map(ContactRequestToJSON)),
    };
}

