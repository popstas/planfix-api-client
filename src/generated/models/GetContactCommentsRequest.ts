/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetContactCommentsRequestResultOrderInner } from './GetContactCommentsRequestResultOrderInner';
import {
    GetContactCommentsRequestResultOrderInnerFromJSON,
    GetContactCommentsRequestResultOrderInnerFromJSONTyped,
    GetContactCommentsRequestResultOrderInnerToJSON,
    GetContactCommentsRequestResultOrderInnerToJSONTyped,
} from './GetContactCommentsRequestResultOrderInner';

/**
 * 
 * @export
 * @interface GetContactCommentsRequest
 */
export interface GetContactCommentsRequest {
    /**
     * Offset from beginning of list
     * @type {number}
     * @memberof GetContactCommentsRequest
     */
    offset?: number;
    /**
     * Size of requested list
     * @type {number}
     * @memberof GetContactCommentsRequest
     */
    pageSize?: number;
    /**
     * Fields returned - names, comma-delimited
     * @type {string}
     * @memberof GetContactCommentsRequest
     */
    fields?: string;
    /**
     * 
     * @type {string}
     * @memberof GetContactCommentsRequest
     */
    typeList?: GetContactCommentsRequestTypeListEnum;
    /**
     * 
     * @type {Array<GetContactCommentsRequestResultOrderInner>}
     * @memberof GetContactCommentsRequest
     */
    resultOrder?: Array<GetContactCommentsRequestResultOrderInner>;
}


/**
 * @export
 */
export const GetContactCommentsRequestTypeListEnum = {
    Comments: 'Comments',
    All: 'All',
    New: 'New',
    Deleted: 'Deleted'
} as const;
export type GetContactCommentsRequestTypeListEnum = typeof GetContactCommentsRequestTypeListEnum[keyof typeof GetContactCommentsRequestTypeListEnum];


/**
 * Check if a given object implements the GetContactCommentsRequest interface.
 */
export function instanceOfGetContactCommentsRequest(value: object): value is GetContactCommentsRequest {
    return true;
}

export function GetContactCommentsRequestFromJSON(json: any): GetContactCommentsRequest {
    return GetContactCommentsRequestFromJSONTyped(json, false);
}

export function GetContactCommentsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetContactCommentsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'offset': json['offset'] == null ? undefined : json['offset'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'fields': json['fields'] == null ? undefined : json['fields'],
        'typeList': json['typeList'] == null ? undefined : json['typeList'],
        'resultOrder': json['resultOrder'] == null ? undefined : ((json['resultOrder'] as Array<any>).map(GetContactCommentsRequestResultOrderInnerFromJSON)),
    };
}

export function GetContactCommentsRequestToJSON(json: any): GetContactCommentsRequest {
    return GetContactCommentsRequestToJSONTyped(json, false);
}

export function GetContactCommentsRequestToJSONTyped(value?: GetContactCommentsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'offset': value['offset'],
        'pageSize': value['pageSize'],
        'fields': value['fields'],
        'typeList': value['typeList'],
        'resultOrder': value['resultOrder'] == null ? undefined : ((value['resultOrder'] as Array<any>).map(GetContactCommentsRequestResultOrderInnerToJSON)),
    };
}

