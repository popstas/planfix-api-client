/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PeopleResponse } from './PeopleResponse';
import {
    PeopleResponseFromJSON,
    PeopleResponseFromJSONTyped,
    PeopleResponseToJSON,
    PeopleResponseToJSONTyped,
} from './PeopleResponse';
import type { TimePoint } from './TimePoint';
import {
    TimePointFromJSON,
    TimePointFromJSONTyped,
    TimePointToJSON,
    TimePointToJSONTyped,
} from './TimePoint';
import type { PersonResponse } from './PersonResponse';
import {
    PersonResponseFromJSON,
    PersonResponseFromJSONTyped,
    PersonResponseToJSON,
    PersonResponseToJSONTyped,
} from './PersonResponse';

/**
 * 
 * @export
 * @interface Reminder
 */
export interface Reminder {
    /**
     * 
     * @type {number}
     * @memberof Reminder
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof Reminder
     */
    commentId?: number;
    /**
     * 
     * @type {number}
     * @memberof Reminder
     */
    recurrenceId?: number;
    /**
     * 
     * @type {number}
     * @memberof Reminder
     */
    dataTagEntryKey?: number;
    /**
     * 
     * @type {TimePoint}
     * @memberof Reminder
     */
    reminderDate?: TimePoint;
    /**
     * 
     * @type {TimePoint}
     * @memberof Reminder
     */
    reminderDateToCreate?: TimePoint;
    /**
     * 
     * @type {boolean}
     * @memberof Reminder
     */
    reminded?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Reminder
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof Reminder
     */
    type?: ReminderTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Reminder
     */
    subtype?: ReminderSubtypeEnum;
    /**
     * 
     * @type {PersonResponse}
     * @memberof Reminder
     */
    owner?: PersonResponse;
    /**
     * 
     * @type {Array<string>}
     * @memberof Reminder
     */
    recipientsRoles?: Array<ReminderRecipientsRolesEnum>;
    /**
     * 
     * @type {PeopleResponse}
     * @memberof Reminder
     */
    recipientsPeople?: PeopleResponse;
}


/**
 * @export
 */
export const ReminderTypeEnum = {
    Exact: 'Exact',
    Before: 'Before',
    None: 'None'
} as const;
export type ReminderTypeEnum = typeof ReminderTypeEnum[keyof typeof ReminderTypeEnum];

/**
 * @export
 */
export const ReminderSubtypeEnum = {
    BeforeTaskStart: 'BeforeTaskStart',
    BeforeTaskEnd: 'BeforeTaskEnd',
    BeforeDataTagStart: 'BeforeDataTagStart',
    BeforeDataTagEnd: 'BeforeDataTagEnd',
    None: 'None'
} as const;
export type ReminderSubtypeEnum = typeof ReminderSubtypeEnum[keyof typeof ReminderSubtypeEnum];

/**
 * @export
 */
export const ReminderRecipientsRolesEnum = {
    Assigner: 'Assigner',
    Participants: 'Participants',
    Assignees: 'Assignees',
    Auditors: 'Auditors'
} as const;
export type ReminderRecipientsRolesEnum = typeof ReminderRecipientsRolesEnum[keyof typeof ReminderRecipientsRolesEnum];


/**
 * Check if a given object implements the Reminder interface.
 */
export function instanceOfReminder(value: object): value is Reminder {
    return true;
}

export function ReminderFromJSON(json: any): Reminder {
    return ReminderFromJSONTyped(json, false);
}

export function ReminderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reminder {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'commentId': json['commentId'] == null ? undefined : json['commentId'],
        'recurrenceId': json['recurrenceId'] == null ? undefined : json['recurrenceId'],
        'dataTagEntryKey': json['dataTagEntryKey'] == null ? undefined : json['dataTagEntryKey'],
        'reminderDate': json['reminderDate'] == null ? undefined : TimePointFromJSON(json['reminderDate']),
        'reminderDateToCreate': json['reminderDateToCreate'] == null ? undefined : TimePointFromJSON(json['reminderDateToCreate']),
        'reminded': json['reminded'] == null ? undefined : json['reminded'],
        'text': json['text'] == null ? undefined : json['text'],
        'type': json['type'] == null ? undefined : json['type'],
        'subtype': json['subtype'] == null ? undefined : json['subtype'],
        'owner': json['owner'] == null ? undefined : PersonResponseFromJSON(json['owner']),
        'recipientsRoles': json['recipientsRoles'] == null ? undefined : json['recipientsRoles'],
        'recipientsPeople': json['recipientsPeople'] == null ? undefined : PeopleResponseFromJSON(json['recipientsPeople']),
    };
}

export function ReminderToJSON(json: any): Reminder {
    return ReminderToJSONTyped(json, false);
}

export function ReminderToJSONTyped(value?: Reminder | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'commentId': value['commentId'],
        'recurrenceId': value['recurrenceId'],
        'dataTagEntryKey': value['dataTagEntryKey'],
        'reminderDate': TimePointToJSON(value['reminderDate']),
        'reminderDateToCreate': TimePointToJSON(value['reminderDateToCreate']),
        'reminded': value['reminded'],
        'text': value['text'],
        'type': value['type'],
        'subtype': value['subtype'],
        'owner': PersonResponseToJSON(value['owner']),
        'recipientsRoles': value['recipientsRoles'],
        'recipientsPeople': PeopleResponseToJSON(value['recipientsPeople']),
    };
}

