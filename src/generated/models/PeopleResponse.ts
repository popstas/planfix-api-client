/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GroupResponse } from './GroupResponse';
import {
    GroupResponseFromJSON,
    GroupResponseFromJSONTyped,
    GroupResponseToJSON,
    GroupResponseToJSONTyped,
} from './GroupResponse';
import type { PersonResponse } from './PersonResponse';
import {
    PersonResponseFromJSON,
    PersonResponseFromJSONTyped,
    PersonResponseToJSON,
    PersonResponseToJSONTyped,
} from './PersonResponse';

/**
 * 
 * @export
 * @interface PeopleResponse
 */
export interface PeopleResponse {
    /**
     * 
     * @type {Array<PersonResponse>}
     * @memberof PeopleResponse
     */
    users?: Array<PersonResponse>;
    /**
     * 
     * @type {Array<GroupResponse>}
     * @memberof PeopleResponse
     */
    groups?: Array<GroupResponse>;
}

/**
 * Check if a given object implements the PeopleResponse interface.
 */
export function instanceOfPeopleResponse(value: object): value is PeopleResponse {
    return true;
}

export function PeopleResponseFromJSON(json: any): PeopleResponse {
    return PeopleResponseFromJSONTyped(json, false);
}

export function PeopleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PeopleResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(PersonResponseFromJSON)),
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(GroupResponseFromJSON)),
    };
}

export function PeopleResponseToJSON(json: any): PeopleResponse {
    return PeopleResponseToJSONTyped(json, false);
}

export function PeopleResponseToJSONTyped(value?: PeopleResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(PersonResponseToJSON)),
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(GroupResponseToJSON)),
    };
}

