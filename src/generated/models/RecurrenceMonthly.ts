/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RecurrenceMonthly
 */
export interface RecurrenceMonthly {
    /**
     * 
     * @type {string}
     * @memberof RecurrenceMonthly
     */
    type?: RecurrenceMonthlyTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof RecurrenceMonthly
     */
    dayType?: RecurrenceMonthlyDayTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof RecurrenceMonthly
     */
    month?: number;
    /**
     * 
     * @type {number}
     * @memberof RecurrenceMonthly
     */
    day?: number;
}


/**
 * @export
 */
export const RecurrenceMonthlyTypeEnum = {
    Every: 'Every',
    AfterComplete: 'AfterComplete',
    Exact: 'Exact'
} as const;
export type RecurrenceMonthlyTypeEnum = typeof RecurrenceMonthlyTypeEnum[keyof typeof RecurrenceMonthlyTypeEnum];

/**
 * @export
 */
export const RecurrenceMonthlyDayTypeEnum = {
    Day: 'Day',
    WorkDay: 'WorkDay',
    FreeDay: 'FreeDay',
    Monday: 'Monday',
    Tuesday: 'Tuesday',
    Wednesday: 'Wednesday',
    Thursday: 'Thursday',
    Friday: 'Friday',
    Saturday: 'Saturday',
    Sunday: 'Sunday'
} as const;
export type RecurrenceMonthlyDayTypeEnum = typeof RecurrenceMonthlyDayTypeEnum[keyof typeof RecurrenceMonthlyDayTypeEnum];


/**
 * Check if a given object implements the RecurrenceMonthly interface.
 */
export function instanceOfRecurrenceMonthly(value: object): value is RecurrenceMonthly {
    return true;
}

export function RecurrenceMonthlyFromJSON(json: any): RecurrenceMonthly {
    return RecurrenceMonthlyFromJSONTyped(json, false);
}

export function RecurrenceMonthlyFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecurrenceMonthly {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'dayType': json['dayType'] == null ? undefined : json['dayType'],
        'month': json['month'] == null ? undefined : json['month'],
        'day': json['day'] == null ? undefined : json['day'],
    };
}

export function RecurrenceMonthlyToJSON(json: any): RecurrenceMonthly {
    return RecurrenceMonthlyToJSONTyped(json, false);
}

export function RecurrenceMonthlyToJSONTyped(value?: RecurrenceMonthly | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'dayType': value['dayType'],
        'month': value['month'],
        'day': value['day'],
    };
}

