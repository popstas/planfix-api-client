/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TimePoint } from './TimePoint';
import {
    TimePointFromJSON,
    TimePointFromJSONTyped,
    TimePointToJSON,
    TimePointToJSONTyped,
} from './TimePoint';

/**
 * 
 * @export
 * @interface ReportSave
 */
export interface ReportSave {
    /**
     * 
     * @type {number}
     * @memberof ReportSave
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ReportSave
     */
    reportId?: number;
    /**
     * 
     * @type {number}
     * @memberof ReportSave
     */
    chunksCount?: number;
    /**
     * 
     * @type {TimePoint}
     * @memberof ReportSave
     */
    dateTime?: TimePoint;
    /**
     * 
     * @type {string}
     * @memberof ReportSave
     */
    name?: string;
}

/**
 * Check if a given object implements the ReportSave interface.
 */
export function instanceOfReportSave(value: object): value is ReportSave {
    return true;
}

export function ReportSaveFromJSON(json: any): ReportSave {
    return ReportSaveFromJSONTyped(json, false);
}

export function ReportSaveFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportSave {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'reportId': json['reportId'] == null ? undefined : json['reportId'],
        'chunksCount': json['chunksCount'] == null ? undefined : json['chunksCount'],
        'dateTime': json['dateTime'] == null ? undefined : TimePointFromJSON(json['dateTime']),
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function ReportSaveToJSON(json: any): ReportSave {
    return ReportSaveToJSONTyped(json, false);
}

export function ReportSaveToJSONTyped(value?: ReportSave | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'reportId': value['reportId'],
        'chunksCount': value['chunksCount'],
        'dateTime': TimePointToJSON(value['dateTime']),
        'name': value['name'],
    };
}

