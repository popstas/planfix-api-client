/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
    UserResponseToJSONTyped,
} from './UserResponse';

/**
 * 
 * @export
 * @interface GetUserList200Response
 */
export interface GetUserList200Response {
    /**
     * 
     * @type {string}
     * @memberof GetUserList200Response
     */
    result?: string;
    /**
     * 
     * @type {Array<UserResponse>}
     * @memberof GetUserList200Response
     */
    users?: Array<UserResponse>;
}

/**
 * Check if a given object implements the GetUserList200Response interface.
 */
export function instanceOfGetUserList200Response(value: object): value is GetUserList200Response {
    return true;
}

export function GetUserList200ResponseFromJSON(json: any): GetUserList200Response {
    return GetUserList200ResponseFromJSONTyped(json, false);
}

export function GetUserList200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUserList200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'result': json['result'] == null ? undefined : json['result'],
        'users': json['users'] == null ? undefined : ((json['users'] as Array<any>).map(UserResponseFromJSON)),
    };
}

export function GetUserList200ResponseToJSON(json: any): GetUserList200Response {
    return GetUserList200ResponseToJSONTyped(json, false);
}

export function GetUserList200ResponseToJSONTyped(value?: GetUserList200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'result': value['result'],
        'users': value['users'] == null ? undefined : ((value['users'] as Array<any>).map(UserResponseToJSON)),
    };
}

