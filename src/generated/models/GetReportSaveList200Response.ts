/* tslint:disable */
/* eslint-disable */
/**
 * Planfix REST API
 * Documentation for Planfix REST API. <br> Generated <a href=\"https://root/restapidocs/swagger.json\">swagger.json</a>
 *
 * The version of the OpenAPI document: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReportSave } from './ReportSave';
import {
    ReportSaveFromJSON,
    ReportSaveFromJSONTyped,
    ReportSaveToJSON,
    ReportSaveToJSONTyped,
} from './ReportSave';

/**
 * 
 * @export
 * @interface GetReportSaveList200Response
 */
export interface GetReportSaveList200Response {
    /**
     * 
     * @type {string}
     * @memberof GetReportSaveList200Response
     */
    result?: string;
    /**
     * 
     * @type {Array<ReportSave>}
     * @memberof GetReportSaveList200Response
     */
    saves?: Array<ReportSave>;
}

/**
 * Check if a given object implements the GetReportSaveList200Response interface.
 */
export function instanceOfGetReportSaveList200Response(value: object): value is GetReportSaveList200Response {
    return true;
}

export function GetReportSaveList200ResponseFromJSON(json: any): GetReportSaveList200Response {
    return GetReportSaveList200ResponseFromJSONTyped(json, false);
}

export function GetReportSaveList200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetReportSaveList200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'result': json['result'] == null ? undefined : json['result'],
        'saves': json['saves'] == null ? undefined : ((json['saves'] as Array<any>).map(ReportSaveFromJSON)),
    };
}

export function GetReportSaveList200ResponseToJSON(json: any): GetReportSaveList200Response {
    return GetReportSaveList200ResponseToJSONTyped(json, false);
}

export function GetReportSaveList200ResponseToJSONTyped(value?: GetReportSaveList200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'result': value['result'],
        'saves': value['saves'] == null ? undefined : ((value['saves'] as Array<any>).map(ReportSaveToJSON)),
    };
}

